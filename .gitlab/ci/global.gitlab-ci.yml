.default-tags:
  tags:
    - gitlab-org

.default-retry:
  retry:
    max: 2  # This is confusing but this means "3 runs at max".
    when:
      - unknown_failure
      - api_failure
      - runner_system_failure

.default-before_script:
  before_script:
    - date
    - export GOPATH=$CI_PROJECT_DIR/.go
    - mkdir -p $GOPATH
    - source scripts/utils.sh
    - source scripts/prepare_build.sh
    - date

# Jobs that only need to pull cache
.default-cache:
  cache:
    key: "debian-stretch-ruby-2.6.3-node-12.x"
    paths:
      - .go/pkg/mod
      - vendor/ruby
      - .yarn-cache/
      - vendor/gitaly-ruby
    policy: pull

.default-only:
  only:
    refs:
      - master
      - /^[\d-]+-stable(-ee)?$/
      - /^\d+-\d+-auto-deploy-\d+$/
      - /^security\//
      - merge_requests
      - tags

.only:changes-code:
  only:
    changes:
      - ".gitlab/ci/**/*"
      - ".{eslintignore,gitattributes,nvmrc,prettierrc,stylelintrc,yamllint}"
      - ".{codeclimate,eslintrc,gitlab-ci,haml-lint,haml-lint_todo,rubocop,rubocop_todo,scss-lint}.yml"
      - ".csscomb.json"
      - "Dockerfile.assets"
      - "*_VERSION"
      - "Gemfile{,.lock}"
      - "Rakefile"
      - "{babel.config,jest.config}.js"
      - "config.ru"
      - "{package.json,yarn.lock}"
      - "{,ee/}{app,bin,config,db,fixtures,haml_lint,lib,locale,public,rubocop,scripts,symbol,vendor}/**/*"

.only:changes-qa:
  only:
    changes:
      - ".dockerignore"
      - "qa/**/*"

.only:changes-docs:
  only:
    changes:
      - ".gitlab/route-map.yml"
      - "doc/**/*"
      - ".markdownlint.json"

.only:changes-graphql:
  only:
    changes:
      - "{,ee/}app/graphql/**/*"
      - "{,ee/}lib/gitlab/graphql/**/*"

.only:changes-code-backstage:
  only:
    changes:
      - ".gitlab/ci/**/*"
      - ".{eslintignore,gitattributes,nvmrc,prettierrc,stylelintrc,yamllint}"
      - ".{codeclimate,eslintrc,gitlab-ci,haml-lint,haml-lint_todo,rubocop,rubocop_todo,scss-lint}.yml"
      - ".csscomb.json"
      - "Dockerfile.assets"
      - "*_VERSION"
      - "Gemfile{,.lock}"
      - "Rakefile"
      - "{babel.config,jest.config}.js"
      - "config.ru"
      - "{package.json,yarn.lock}"
      - "{,ee/}{app,bin,config,db,fixtures,haml_lint,lib,locale,public,rubocop,scripts,symbol,vendor}/**/*"
      # Backstage changes
      - "Dangerfile"
      - "danger/**/*"
      - "{,ee/}spec/**/*"
      - "doc/README.md"  # Some RSpec test rely on this file

.only:changes-code-qa:
  only:
    changes:
      - ".gitlab/ci/**/*"
      - ".{eslintignore,gitattributes,nvmrc,prettierrc,stylelintrc,yamllint}"
      - ".{codeclimate,eslintrc,gitlab-ci,haml-lint,haml-lint_todo,rubocop,rubocop_todo,scss-lint}.yml"
      - ".csscomb.json"
      - "Dockerfile.assets"
      - "*_VERSION"
      - "Gemfile{,.lock}"
      - "Rakefile"
      - "{babel.config,jest.config}.js"
      - "config.ru"
      - "{package.json,yarn.lock}"
      - "{,ee/}{app,bin,config,db,fixtures,haml_lint,lib,locale,public,rubocop,scripts,symbol,vendor}/**/*"
      # QA changes
      - ".dockerignore"
      - "qa/**/*"

.only:changes-code-backstage-qa:
  only:
    changes:
      - ".gitlab/ci/**/*"
      - ".{eslintignore,gitattributes,nvmrc,prettierrc,stylelintrc,yamllint}"
      - ".{codeclimate,eslintrc,gitlab-ci,haml-lint,haml-lint_todo,rubocop,rubocop_todo,scss-lint}.yml"
      - ".csscomb.json"
      - "Dockerfile.assets"
      - "*_VERSION"
      - "Gemfile{,.lock}"
      - "Rakefile"
      - "{babel.config,jest.config}.js"
      - "config.ru"
      - "{package.json,yarn.lock}"
      - "{,ee/}{app,bin,config,db,fixtures,haml_lint,lib,locale,public,rubocop,scripts,symbol,vendor}/**/*"
      # Backstage changes
      - "Dangerfile"
      - "danger/**/*"
      - "{,ee/}spec/**/*"
      - "doc/README.md"  # Some RSpec test rely on this file
      # QA changes
      - ".dockerignore"
      - "qa/**/*"

.only-review:
  only:
    variables:
      - $CI_SERVER_HOST == "gitlab.com" && $CI_PROJECT_NAMESPACE == "gitlab-org"
    kubernetes: active
  except:
    refs:
      - master
      - /^\d+-\d+-auto-deploy-\d+$/
      - /^[\d-]+-stable(-ee)?$/

.only-review-schedules:
  only:
    refs:
      - schedules
    variables:
      - $CI_SERVER_HOST == "gitlab.com" && $CI_PROJECT_NAMESPACE == "gitlab-org"
    kubernetes: active

.only-canonical-schedules:
  only:
    refs:
      - schedules@gitlab-org/gitlab
      - schedules@gitlab-org/gitlab-foss

.use-pg9:
  services:
    - name: postgres:9.6
      command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    - name: redis:alpine

.use-pg10:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:ruby-2.6.3-golang-1.11-git-2.22-chrome-73.0-node-12.x-yarn-1.16-postgresql-10-graphicsmagick-1.3.33"
  services:
    - name: postgres:10.9
      command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    - name: redis:alpine

.use-pg9-ee:
  services:
    - name: postgres:9.6
      command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    - name: redis:alpine
    - name: docker.elastic.co/elasticsearch/elasticsearch:5.6.12

.use-pg10-ee:
  image: "registry.gitlab.com/gitlab-org/gitlab-build-images:ruby-2.6.3-golang-1.11-git-2.22-chrome-73.0-node-12.x-yarn-1.16-postgresql-10-graphicsmagick-1.3.33"
  services:
    - name: postgres:10.9
      command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    - name: redis:alpine
    - name: docker.elastic.co/elasticsearch/elasticsearch:5.6.12

.only-ee:
  only:
    variables:
      - $CI_PROJECT_NAME == "gitlab"
      - $CI_PROJECT_NAME == "gitlab-ee"  # Support former project name for forks/mirrors

.only-ee-as-if-foss:
  extends: .only-ee
  variables:
    FOSS_ONLY: '1'
