review-trigger:
  extends:
    - .review:rules:review-build-cng
  stage: review
  needs: ['build-assets-image']
  trigger:
    include: ".gitlab/ci/review-child-pipeline.gitlab-ci.yml"

review-cleanup:
  extends:
    - .default-retry
    - .review:rules:review-cleanup
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-helm3-kubectl1.14
  stage: prepare
  environment:
    name: review/auto-cleanup
    action: stop
  before_script:
    - source scripts/utils.sh
    - source scripts/review_apps/gcp_cleanup.sh
    - install_gitlab_gem
    - setup_gcp_dependencies
  script:
    - ruby -rrubygems scripts/review_apps/automated_cleanup.rb
    - gcp_cleanup

danger-review:
  extends:
    - .default-retry
    - .danger-review-cache
    - .review:rules:danger
  stage: test
  needs: []
  before_script:
    - source ./scripts/utils.sh
    - run_timed_command "bundle install --jobs=$(nproc) --path=vendor --retry=3 --quiet --with danger"
    - run_timed_command "retry yarn install --frozen-lockfile"
  script:
    - >
      if [ -z "$DANGER_GITLAB_API_TOKEN" ]; then
        # Force danger to skip CI source GitLab and fallback to "local only git repo".
        unset GITLAB_CI
        # We need to base SHA to help danger determine the base commit for this shallow clone.
        run_timed_command "bundle exec danger dry_run --fail-on-errors=true --verbose --base='$CI_MERGE_REQUEST_DIFF_BASE_SHA'"
      else
        run_timed_command "bundle exec danger --fail-on-errors=true --verbose"
      fi

update-danger-review-cache:
  extends:
    - danger-review
    - .shared:rules:update-cache
  stage: prepare
  script: echo 'Cache is fresh!'
  cache:
    policy: push  # We want to rebuild the cache from scratch to ensure stale dependencies are cleaned up.
