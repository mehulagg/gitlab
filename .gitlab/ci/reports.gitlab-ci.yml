include:
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml

.if-default-refs: &if-default-refs
  if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /^[\d-]+-stable(-ee)?$/ || $CI_COMMIT_REF_NAME =~ /^\d+-\d+-auto-deploy-\d+$/ || $CI_COMMIT_REF_NAME =~ /^security\// || $CI_MERGE_REQUEST_IID || $CI_COMMIT_TAG || $FORCE_GITLAB_CI'

.code-backstage-qa-patterns: &code-backstage-qa-patterns
  - "{package.json,yarn.lock}"
  - "babel.config.js"
  - "jest.config.{base,integration,unit}.js"
  - ".csscomb.json"
  - "Dockerfile.assets"
  - "vendor/assets/**/*"
  - ".gitlab/ci/**/*"
  - ".{eslintignore,gitattributes,nvmrc,prettierrc,stylelintrc,yamllint}"
  - ".{codeclimate,eslintrc,gitlab-ci,haml-lint,haml-lint_todo,rubocop,rubocop_todo,scss-lint}.yml"
  - "*_VERSION"
  - "Gemfile{,.lock}"
  - "Rakefile"
  - "config.ru"
  - "{,ee/}{app,bin,config,db,haml_lint,lib,locale,public,scripts,symbol,vendor}/**/*"
  - "doc/api/graphql/reference/*"  # Files in this folder are auto-generated
  # Backstage changes
  - "Dangerfile"
  - "danger/**/*"
  - "{,ee/}fixtures/**/*"
  - "{,ee/}rubocop/**/*"
  - "{,ee/}spec/**/*"
  # QA changes
  - ".dockerignore"
  - "qa/**/*"

.reports:rules:sast:
  rules: &reports-rules-sast
    - if: '$SAST_DISABLED || $GITLAB_FEATURES !~ /\bsast\b/'
      when: never
    # - <<: *if-master-refs  # To be done in a later iteration: https://gitlab.com/gitlab-org/gitlab/issues/31160#note_278188255
    - <<: *if-default-refs
      changes: *code-backstage-qa-patterns
      allow_failure: true

code_quality:
  extends:
    - .default-retry
    - .reports:rules:code_quality
    - .use-docker-in-docker
  needs: []
  artifacts:
    paths:
      - gl-code-quality-report.json

.sast:
  extends: .default-retry
  needs: []
  artifacts:
    paths:
      - gl-sast-report.json
    expire_in: 1 week
  variables:
    SAST_BRAKEMAN_LEVEL: 2
    SAST_EXCLUDED_PATHS: qa,spec,doc,ee/spec
  rules: *reports-rules-sast

brakeman-sast:
  extends:
    - .sast-analyzer
    - .sast

eslint-sast:
  extends:
    - .sast-analyzer
    - .sast

# Temporary disabled as it's constantly failing. See https://gitlab.com/gitlab-org/gitlab/-/issues/213769.
nodejs-scan-sast:
  extends:
    - .sast-analyzer
    - .sast
  rules:
    - when: never

secrets-sast:
  extends:
    - .sast-analyzer
    - .sast

.dependency_scanning:
  extends:
    - .default-retry
    - .use-docker-in-docker
  needs: []
  variables:
    DS_EXCLUDED_PATHS: "qa/qa/ee/fixtures/secure_premade_reports,spec,ee/spec"
  artifacts:
    paths:
      - gl-dependency-scanning-report.json
    expire_in: 1 week

gemnasium-dependency_scanning:
  extends:
    - .ds-analyzer
    - .dependency_scanning
    - .reports:rules:dependency_scanning

bundler-audit-dependency_scanning:
  extends:
    - .ds-analyzer
    - .dependency_scanning
    - .reports:rules:dependency_scanning

retire-js-dependency_scanning:
  extends:
    - .ds-analyzer
    - .dependency_scanning
    - .reports:rules:dependency_scanning

dast:
  extends:
    - .default-retry
    - .reports:rules:dast
  # This is needed so that manual jobs with needs don't block the pipeline.
  # See https://gitlab.com/gitlab-org/gitlab/-/issues/199979.
  dependencies: ["review-deploy"]
  stage: qa
  variables:
    # To be done in a later iteration
    # DAST_USERNAME: "root"
    # DAST_USERNAME_FIELD: "user[login]"
    # DAST_PASSWORD_FIELD: "user[passowrd]"
  # To be done in a later iteration
  # before_script:
  #   - 'export DAST_AUTH_URL="${DAST_WEBSITE}/users/sign_in"'
  #   - 'export DAST_PASSWORD="${REVIEW_APPS_ROOT_PASSWORD}"'
  artifacts:
    paths:
      - gl-dast-report.json
    expire_in: 1 week

# To be done in a later iteration: https://gitlab.com/gitlab-org/gitlab/issues/31160#note_278188255
# schedule:dast:
#   extends:
#     - dast
#     - .reports:schedule-dast
#   variables:
#     DAST_FULL_SCAN_ENABLED: "true"
