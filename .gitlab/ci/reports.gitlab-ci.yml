# include:
#   - template: Jobs/Code-Quality.gitlab-ci.yml
#   - template: Security/SAST.gitlab-ci.yml
#   - template: Security/Dependency-Scanning.gitlab-ci.yml
#   - template: Security/DAST.gitlab-ci.yml

# We need to duplicate this job's definition because it seems it's impossible to
# override an included `only.refs`.
# See https://gitlab.com/gitlab-org/gitlab/issues/31371.
code_quality:
  extends:
    - .default-retry
    - .reports:rules:code_quality
    - .use-docker-in-docker
  stage: test
  needs: []
  variables:
    CODE_QUALITY_IMAGE: "registry.gitlab.com/gitlab-org/ci-cd/codequality:0.85.10"
  script:
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - docker pull --quiet "$CODE_QUALITY_IMAGE"
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "$CODE_QUALITY_IMAGE" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json  # GitLab-specific
    expire_in: 1 week  # GitLab-specific

# We need to duplicate this job's definition because it seems it's impossible to
# override an included `only.refs`.
# See https://gitlab.com/gitlab-org/gitlab/issues/31371.
.sast:
  extends:
    - .default-retry
    - .reports:rules:sast
  stage: test
  # `needs: []` starts the job immediately in the pipeline
  # https://docs.gitlab.com/ee/ci/yaml/README.html#needs
  needs: []
  artifacts:
    paths:
      - gl-sast-report.json  # GitLab-specific
    reports:
      sast: gl-sast-report.json
    expire_in: 1 week  # GitLab-specific
  variables:
    DOCKER_TLS_CERTDIR: ""
    SAST_ANALYZER_IMAGE_PREFIX: "registry.gitlab.com/gitlab-org/security-products/analyzers"
    SAST_ANALYZER_IMAGE_TAG: 2
    SAST_BRAKEMAN_LEVEL: 2  # GitLab-specific
    SAST_EXCLUDED_PATHS: qa,spec,doc,ee/spec  # GitLab-specific
    SAST_DISABLE_BABEL: "true"
  script:
    - /analyzer run

brakeman-sast:
  extends: .sast
  image:
    name: "$SAST_ANALYZER_IMAGE_PREFIX/brakeman:$SAST_ANALYZER_IMAGE_TAG"

eslint-sast:
  extends: .sast
  image:
    name: "$SAST_ANALYZER_IMAGE_PREFIX/eslint:$SAST_ANALYZER_IMAGE_TAG"

nodejs-scan-sast:
  extends: .sast
  image:
    name: "$SAST_ANALYZER_IMAGE_PREFIX/nodejs-scan:$SAST_ANALYZER_IMAGE_TAG"

secrets-sast:
  extends: .sast
  image:
    name: "$SAST_ANALYZER_IMAGE_PREFIX/secrets:$SAST_ANALYZER_IMAGE_TAG"

# We need to duplicate this job's definition because it seems it's impossible to
# override an included `only.refs`.
# See https://gitlab.com/gitlab-org/gitlab/issues/31371.
dependency_scanning:
  extends:
    - .default-retry
    - .reports:rules:dependency_scanning
    - .use-docker-in-docker
  stage: test
  needs: []
  variables:
    DS_MAJOR_VERSION: 2
    DS_EXCLUDED_PATHS: "qa/qa/ee/fixtures/secure_premade_reports,spec,ee/spec"  # GitLab-specific
  script:
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - | # this is required to avoid undesirable reset of Docker image ENV variables being set on build stage
      function propagate_env_vars() {
        CURRENT_ENV=$(printenv)

        for VAR_NAME; do
          echo $CURRENT_ENV | grep "${VAR_NAME}=" > /dev/null && echo "--env $VAR_NAME "
        done
      }
    - |
      docker run \
        $(propagate_env_vars \
          DS_ANALYZER_IMAGES \
          DS_ANALYZER_IMAGE_PREFIX \
          DS_ANALYZER_IMAGE_TAG \
          DS_DEFAULT_ANALYZERS \
          DS_EXCLUDED_PATHS \
          DS_DOCKER_CLIENT_NEGOTIATION_TIMEOUT \
          DS_PULL_ANALYZER_IMAGE_TIMEOUT \
          DS_RUN_ANALYZER_TIMEOUT \
          DS_PYTHON_VERSION \
          DS_PIP_VERSION \
          DS_PIP_DEPENDENCY_PATH \
          GEMNASIUM_DB_LOCAL_PATH \
          GEMNASIUM_DB_REMOTE_URL \
          GEMNASIUM_DB_REF_NAME \
          PIP_INDEX_URL \
          PIP_EXTRA_INDEX_URL \
          PIP_REQUIREMENTS_FILE \
          MAVEN_CLI_OPTS \
          BUNDLER_AUDIT_UPDATE_DISABLED \
          BUNDLER_AUDIT_ADVISORY_DB_URL \
          BUNDLER_AUDIT_ADVISORY_DB_REF_NAME \
        ) \
        --volume "$PWD:/code" \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$DS_MAJOR_VERSION" /code
  artifacts:
    paths:
      - gl-dependency-scanning-report.json  # GitLab-specific
    reports:
      dependency_scanning: gl-dependency-scanning-report.json
    expire_in: 1 week  # GitLab-specific

# Temporarily disabling review apps
## We need to duplicate this job's definition because it seems it's impossible to
## override an included `only.refs`.
## See https://gitlab.com/gitlab-org/gitlab/issues/31371.
# dast:
#   extends:
#     - .default-retry
#     - .reports:rules:dast
#   # This is needed so that manual jobs with needs don't block the pipeline.
#   # See https://gitlab.com/gitlab-org/gitlab/-/issues/199979.
#   dependencies: ["review-deploy"]
#   stage: qa  # GitLab-specific
#   image:
#     name: "registry.gitlab.com/gitlab-org/security-products/dast:$DAST_VERSION"
#   variables:
#     # To be done in a later iteration
#     # DAST_USERNAME: "root"
#     # DAST_USERNAME_FIELD: "user[login]"
#     # DAST_PASSWORD_FIELD: "user[passowrd]"
#     DAST_VERSION: 1
#   script:
#     - 'export DAST_WEBSITE="${DAST_WEBSITE:-$(cat environment_url.txt)}"'
#     # To be done in a later iteration
#     # - 'export DAST_AUTH_URL="${DAST_WEBSITE}/users/sign_in"'
#     # - 'export DAST_PASSWORD="${REVIEW_APPS_ROOT_PASSWORD}"'
#     - /analyze -t $DAST_WEBSITE
#   timeout: 4h
#   artifacts:
#     paths:
#       - gl-dast-report.json  # GitLab-specific
#     reports:
#       dast: gl-dast-report.json
#     expire_in: 1 week  # GitLab-specific

# We need to duplicate this job's definition because it seems it's impossible to
# override an included `only.refs`.
# See https://gitlab.com/gitlab-org/gitlab/issues/31371.
# check for commit
# Existing DAST configuration for Baseline scan

dast:
  extends:
    - .default-retry
    - .reports:rules:dast
  # This is needed so that manual jobs with needs don't block the pipeline.
  # See https://gitlab.com/gitlab-org/gitlab/-/issues/199979.
  dependencies: ["review-deploy"]
  stage: qa  # GitLab-specific
  image:
    name: "registry.gitlab.com/gitlab-org/security-products/dast:$DAST_VERSION"
  variables:
    # To be done in a later iteration
    # DAST_USERNAME: "root"
    # DAST_USERNAME_FIELD: "user[login]"
    # DAST_PASSWORD_FIELD: "user[passowrd]"
    DAST_VERSION: 1
  script:
    - 'export DAST_WEBSITE="${DAST_WEBSITE:-$(cat environment_url.txt)}"'
    # To be done in a later iteration
    # - 'export DAST_AUTH_URL="${DAST_WEBSITE}/users/sign_in"'
    # - 'export DAST_PASSWORD="${REVIEW_APPS_ROOT_PASSWORD}"'
    - /analyze -t $DAST_WEBSITE
  artifacts:
    paths:
      - gl-dast-report.json  # GitLab-specific
    reports:
      dast: gl-dast-report.json
    expire_in: 1 week  # GitLab-specific
# DAST full scan configurations
# Common DAST configs that is applicable for DAST-fullscan-* jobs
.dast_conf:
  tags:
    - prm
  extends:
    - .reports:rules:dast
    - .default-retry
  image:
    name: "registry.gitlab.com/gitlab-org/security-products/dast:$DAST_VERSION"
  variables:
    DAST_USERNAME: "root"
    DAST_USERNAME_FIELD: "user[login]"
    DAST_PASSWORD_FIELD: "user[password]"
    DAST_FULL_SCAN_ENABLED: "true"
    DAST_SPIDER_MINS: 0
    DAST_ZAP_LOG_CONFIGURATION: "log4j.org.parosproxy.paros.network.HttpSender=DEBUG;log4j.httpclient.wire.header=DEBUG"
    # To be done in a later iteration
    # https://gitlab.com/gitlab-org/gitlab/-/issues/227154
    # DAST_VERSION: 1
    DAST_VERSION: 1.17.1 #v1.18.0 disables the config option
    DAST_ZAP_CLI_OPTIONS: "-Xmx4072m database.recoverylog=false" #To avoid OutOfMemoryError error
  dependencies: ["review-deploy"]
  stage: qa
  artifacts:
    paths:
      - gl-dast-report.json  # GitLab-specific
    reports:
      dast: gl-dast-report.json
    expire_in: 1 week  # GitLab-specific
# DAST-fullscan-1/2 - This job runs the DAST scan with Release rule
DAST-fullscan-1/2:
  extends:
    - .dast_conf
  script:
    - 'export DAST_WEBSITE="${DAST_WEBSITE:-$(cat environment_url.txt)}"'
    - 'export DAST_AUTH_URL="${DAST_WEBSITE}/users/sign_in"'
    - 'export DAST_PASSWORD="${REVIEW_APPS_ROOT_PASSWORD}"'
    - 'mkdir -p /zap/wrk'
    - 'printf "41\tIGNORE\t(Source Code Disclosure - Git - Active/beta)\n42\tIGNORE\t(Source Code Disclosure - SVN - Active/beta)\n43\tIGNORE\t(Source Code Disclosure - File Inclusion - Active/beta)\n10027\tIGNORE\t(Information Disclosure - Suspicious Comments - Passive/release)\n10032\tIGNORE\t(Viewstate Scanner - Passive/release)\n10041\tIGNORE\t(HTTP to HTTPS Insecure Transition in Form Post - Passive/beta)\n10042\tIGNORE\t(HTTPS to HTTP Insecure Transition in Form Post - Passive/beta)\n10045\tIGNORE\t(Source Code Disclosure - /WEB-INF folder - Active/release)\n10047\tIGNORE\t(HTTPS Content Available via HTTP - Active/beta)\n10052\tIGNORE\t(X-ChromeLogger-Data (XCOLD) Header Information Leak - Passive/beta)\n10053\tIGNORE\t(Apache Range Header DoS (CVE-2011-3192) - Active/beta)\n10057\tIGNORE\t(Username Hash Found - Passive/release)\n10061\tIGNORE\t(X-AspNet-Version Response Header Scanner - Passive/release)\n10096\tIGNORE\t(Timestamp Disclosure - Passive/release)\n10097\tIGNORE\t(Hash Disclosure - Passive/beta)\n10104\tIGNORE\t(User Agent Fuzzer - Active/beta)\n10106\tIGNORE\t(HTTP Only Site - Active/beta)\n20012\tIGNORE\t(Anti CSRF Tokens Scanner - Active/beta)\n20014\tIGNORE\t(HTTP Parameter Pollution scanner - Active/beta)\n20015\tIGNORE\t(Heartbleed OpenSSL Vulnerability - Active/beta)\n20016\tIGNORE\t(Cross-Domain Misconfiguration - Active/beta)\n20017\tIGNORE\t(Source Code Disclosure - CVE-2012-1823 - Active/beta)\n20018\tIGNORE\t(Remote Code Execution - CVE-2012-1823 - Active/beta)\n40019\tIGNORE\t(SQL Injection - MySQL - Active/beta)\n40020\tIGNORE\t(SQL Injection - Hypersonic SQL - Active/beta)\n40021\tIGNORE\t(SQL Injection - Oracle - Active/beta)\n40024\tIGNORE\t(SQL Injection - SQLite - Active/beta)\n40025\tIGNORE\t(Proxy Disclosure - Active/beta)\n40027\tIGNORE\t(SQL Injection - MsSQL - Active/beta)\n40029\tIGNORE\t(Trace.axd Information Leak - Active/beta)\n40032\tIGNORE\t(.htaccess Information Leak - Active/beta)\n90001\tIGNORE\t(Insecure JSF ViewState - Passive/release)\n10026\tIGNORE\t(HTTP Parameter Override - Passive/beta)\n10028\tIGNORE\t(Open Redirect - Passive/beta)\n10029\tIGNORE\t(Cookie Poisoning - Passive/beta)\n10030\tIGNORE\t(User Controllable Charset - Passive/beta)\n10031\tIGNORE\t(User Controllable HTML Element Attribute (Potential XSS) - Passive/beta)\n10033\tIGNORE\t(Directory Browsing - Passive/beta)\n10034\tIGNORE\t(Heartbleed OpenSSL Vulnerability (Indicative) - Passive/beta)\n10035\tIGNORE\t(Strict-Transport-Security Header Scanner - Passive/beta)\n10036\tIGNORE\t(HTTP Server Response Header Scanner - Passive/beta)\n10038\tIGNORE\t(Content Security Policy (CSP) Header Not Set - Passive/beta)\n10039\tIGNORE\t(X-Backend-Server Header Information Leak - Passive/beta)\n10043\tIGNORE\t(User Controllable JavaScript Event (XSS) - Passive/beta)\n10044\tIGNORE\t(Big Redirect Detected (Potential Sensitive Information Leak) - Passive/beta)\n10048\tIGNORE\t(Remote Code Execution - Shell Shock - Active/beta)\n10050\tIGNORE\t(Retrieved from Cache - Passive/beta)\n10051\tIGNORE\t(Relative Path Confusion - Active/beta)\n10058\tIGNORE\t(GET for POST - Active/beta)\n10062\tIGNORE\t(PII Scanner - Passive/beta)\n10095\tIGNORE\t(Backup File Disclosure - Active/beta)\n10107\tIGNORE\t(Httpoxy - Proxy Header Misuse - Active/beta)\n10108\tIGNORE\t(Reverse Tabnabbing - Passive/beta)\n30003\tIGNORE\t(Integer Overflow Error - Active/beta)\n40013\tIGNORE\t(Session Fixation - Active/beta)\n40022\tIGNORE\t(SQL Injection - PostgreSQL - Active/beta)\n40023\tIGNORE\t(Possible Username Enumeration - Active/beta)\n40028\tIGNORE\t(ELMAH Information Leak - Active/beta)\n90021\tIGNORE\t(XPath Injection - Active/beta)\n90023\tIGNORE\t(XML External Entity Attack - Active/beta)\n90024\tIGNORE\t(Generic Padding Oracle - Active/beta)\n90025\tIGNORE\t(Expression Language Injection - Active/beta)\n90027\tIGNORE\t(Cookie Slack Detector - Active/beta)\n90028\tIGNORE\t(Insecure HTTP Method - Active/beta)\n0\tWARN\t(Directory Browsing - Active/release)\n2\tWARN\t(Private IP Disclosure - Passive/release)\n3\tWARN\t(Session ID in URL Rewrite - Passive/release)\n6\tWARN\t(Path Traversal - Active/release)\n7\tWARN\t(Remote File Inclusion - Active/release)\n10010\tWARN\t(Cookie No HttpOnly Flag - Passive/release)\n10011\tWARN\t(Cookie Without Secure Flag - Passive/release)\n10015\tWARN\t(Incomplete or No Cache-control and Pragma HTTP Header Set - Passive/release)\n10017\tWARN\t(Cross-Domain JavaScript Source File Inclusion - Passive/release)\n10019\tWARN\t(Content-Type Header Missing - Passive/release)\n10020\tWARN\t(X-Frame-Options Header Scanner - Passive/release)\n10021\tWARN\t(X-Content-Type-Options Header Missing - Passive/release)\n10023\tWARN\t(Information Disclosure - Debug Error Messages - Passive/release)\n10024\tWARN\t(Information Disclosure - Sensitive Information in URL - Passive/release)\n10025\tWARN\t(Information Disclosure - Sensitive Information in HTTP Referrer Header - Passive/release)\n10037\tWARN\t(Server Leaks Information via X-Powered-By HTTP Response Header Field(s) - Passive/release)\n10040\tWARN\t(Secure Pages Include Mixed Content - Passive/release)\n10054\tWARN\t(Cookie Without SameSite Attribute - Passive/release)\n10055\tWARN\t(CSP Scanner - Passive/release)\n10056\tWARN\t(X-Debug-Token Information Leak - Passive/release)\n10098\tWARN\t(Cross-Domain Misconfiguration - Passive/release)\n10105\tWARN\t(Weak Authentication Method - Passive/release)\n10202\tWARN\t(Absence of Anti-CSRF Tokens - Passive/release)\n20019\tWARN\t(External Redirect - Active/release)\n30001\tWARN\t(Buffer Overflow - Active/release)\n30002\tWARN\t(Format String Error - Active/release)\n40003\tWARN\t(CRLF Injection - Active/release)\n40008\tWARN\t(Parameter Tampering - Active/release)\n40009\tWARN\t(Server Side Include - Active/release)\n40012\tWARN\t(Cross Site Scripting (Reflected) - Active/release)\n40014\tWARN\t(Cross Site Scripting (Persistent) - Active/release)\n40016\tWARN\t(Cross Site Scripting (Persistent) - Prime - Active/release)\n40017\tWARN\t(Cross Site Scripting (Persistent) - Spider - Active/release)\n40018\tWARN\t(SQL Injection - Active/release)\n50000\tWARN\t(Script Active Scan Rules - Active/release)\n50001\tWARN\t(Script Passive Scan Rules - Passive/release)\n90011\tWARN\t(Charset Mismatch - Passive/release)\n90019\tWARN\t(Server Side Code Injection - Active/release)\n90020\tWARN\t(Remote OS Command Injection - Active/release)\n90022\tWARN\t(Application Error Disclosure - Passive/release)\n90033\tWARN\t(Loosely Scoped Cookie - Passive/release)\n" > /zap/wrk/scan_config.txt'
    - '/analyze -t $DAST_WEBSITE -c scan_config.txt -d'
# DAST-fullscan-2/2 - This job runs the DAST scan with BETA rule
DAST-fullscan-2/2:
  extends:
    - .dast_conf
  script:
    - 'export DAST_WEBSITE="${DAST_WEBSITE:-$(cat environment_url.txt)}"'
    - 'export DAST_AUTH_URL="${DAST_WEBSITE}/users/sign_in"'
    - 'export DAST_PASSWORD="${REVIEW_APPS_ROOT_PASSWORD}"'
    - 'mkdir -p /zap/wrk'
    - 'printf "41\tIGNORE\t(Source Code Disclosure - Git - Active/beta)\n42\tIGNORE\t(Source Code Disclosure - SVN - Active/beta)\n43\tIGNORE\t(Source Code Disclosure - File Inclusion - Active/beta)\n10027\tIGNORE\t(Information Disclosure - Suspicious Comments - Passive/release)\n10032\tIGNORE\t(Viewstate Scanner - Passive/release)\n10041\tIGNORE\t(HTTP to HTTPS Insecure Transition in Form Post - Passive/beta)\n10042\tIGNORE\t(HTTPS to HTTP Insecure Transition in Form Post - Passive/beta)\n10045\tIGNORE\t(Source Code Disclosure - /WEB-INF folder - Active/release)\n10047\tIGNORE\t(HTTPS Content Available via HTTP - Active/beta)\n10052\tIGNORE\t(X-ChromeLogger-Data (XCOLD) Header Information Leak - Passive/beta)\n10053\tIGNORE\t(Apache Range Header DoS (CVE-2011-3192) - Active/beta)\n10057\tIGNORE\t(Username Hash Found - Passive/release)\n10061\tIGNORE\t(X-AspNet-Version Response Header Scanner - Passive/release)\n10096\tIGNORE\t(Timestamp Disclosure - Passive/release)\n10097\tIGNORE\t(Hash Disclosure - Passive/beta)\n10104\tIGNORE\t(User Agent Fuzzer - Active/beta)\n10106\tIGNORE\t(HTTP Only Site - Active/beta)\n20012\tIGNORE\t(Anti CSRF Tokens Scanner - Active/beta)\n20014\tIGNORE\t(HTTP Parameter Pollution scanner - Active/beta)\n20015\tIGNORE\t(Heartbleed OpenSSL Vulnerability - Active/beta)\n20016\tIGNORE\t(Cross-Domain Misconfiguration - Active/beta)\n20017\tIGNORE\t(Source Code Disclosure - CVE-2012-1823 - Active/beta)\n20018\tIGNORE\t(Remote Code Execution - CVE-2012-1823 - Active/beta)\n40019\tIGNORE\t(SQL Injection - MySQL - Active/beta)\n40020\tIGNORE\t(SQL Injection - Hypersonic SQL - Active/beta)\n40021\tIGNORE\t(SQL Injection - Oracle - Active/beta)\n40024\tIGNORE\t(SQL Injection - SQLite - Active/beta)\n40025\tIGNORE\t(Proxy Disclosure - Active/beta)\n40027\tIGNORE\t(SQL Injection - MsSQL - Active/beta)\n40029\tIGNORE\t(Trace.axd Information Leak - Active/beta)\n40032\tIGNORE\t(.htaccess Information Leak - Active/beta)\n90001\tIGNORE\t(Insecure JSF ViewState - Passive/release)\n0\tIGNORE\t(Directory Browsing - Active/release)\n2\tIGNORE\t(Private IP Disclosure - Passive/release)\n3\tIGNORE\t(Session ID in URL Rewrite - Passive/release)\n6\tIGNORE\t(Path Traversal - Active/release)\n7\tIGNORE\t(Remote File Inclusion - Active/release)\n10010\tIGNORE\t(Cookie No HttpOnly Flag - Passive/release)\n10011\tIGNORE\t(Cookie Without Secure Flag - Passive/release)\n10015\tIGNORE\t(Incomplete or No Cache-control and Pragma HTTP Header Set - Passive/release)\n10017\tIGNORE\t(Cross-Domain JavaScript Source File Inclusion - Passive/release)\n10019\tIGNORE\t(Content-Type Header Missing - Passive/release)\n10020\tIGNORE\t(X-Frame-Options Header Scanner - Passive/release)\n10021\tIGNORE\t(X-Content-Type-Options Header Missing - Passive/release)\n10023\tIGNORE\t(Information Disclosure - Debug Error Messages - Passive/release)\n10024\tIGNORE\t(Information Disclosure - Sensitive Information in URL - Passive/release)\n10025\tIGNORE\t(Information Disclosure - Sensitive Information in HTTP Referrer Header - Passive/release)\n10037\tIGNORE\t(Server Leaks Information via X-Powered-By HTTP Response Header Field(s) - Passive/release)\n10040\tIGNORE\t(Secure Pages Include Mixed Content - Passive/release)\n10054\tIGNORE\t(Cookie Without SameSite Attribute - Passive/release)\n10055\tIGNORE\t(CSP Scanner - Passive/release)\n10056\tIGNORE\t(X-Debug-Token Information Leak - Passive/release)\n10098\tIGNORE\t(Cross-Domain Misconfiguration - Passive/release)\n10105\tIGNORE\t(Weak Authentication Method - Passive/release)\n10202\tIGNORE\t(Absence of Anti-CSRF Tokens - Passive/release)\n20019\tIGNORE\t(External Redirect - Active/release)\n30001\tIGNORE\t(Buffer Overflow - Active/release)\n30002\tIGNORE\t(Format String Error - Active/release)\n40003\tIGNORE\t(CRLF Injection - Active/release)\n40008\tIGNORE\t(Parameter Tampering - Active/release)\n40009\tIGNORE\t(Server Side Include - Active/release)\n40012\tIGNORE\t(Cross Site Scripting (Reflected) - Active/release)\n40014\tIGNORE\t(Cross Site Scripting (Persistent) - Active/release)\n40016\tIGNORE\t(Cross Site Scripting (Persistent) - Prime - Active/release)\n40017\tIGNORE\t(Cross Site Scripting (Persistent) - Spider - Active/release)\n40018\tIGNORE\t(SQL Injection - Active/release)\n50000\tIGNORE\t(Script Active Scan Rules - Active/release)\n50001\tIGNORE\t(Script Passive Scan Rules - Passive/release)\n90011\tIGNORE\t(Charset Mismatch - Passive/release)\n90019\tIGNORE\t(Server Side Code Injection - Active/release)\n90020\tIGNORE\t(Remote OS Command Injection - Active/release)\n90022\tIGNORE\t(Application Error Disclosure - Passive/release)\n90033\tIGNORE\t(Loosely Scoped Cookie - Passive/release)\n10026\tWARN\t(HTTP Parameter Override - Passive/beta)\n10028\tWARN\t(Open Redirect - Passive/beta)\n10029\tWARN\t(Cookie Poisoning - Passive/beta)\n10030\tWARN\t(User Controllable Charset - Passive/beta)\n10031\tWARN\t(User Controllable HTML Element Attribute (Potential XSS) - Passive/beta)\n10033\tWARN\t(Directory Browsing - Passive/beta)\n10034\tWARN\t(Heartbleed OpenSSL Vulnerability (Indicative) - Passive/beta)\n10035\tWARN\t(Strict-Transport-Security Header Scanner - Passive/beta)\n10036\tWARN\t(HTTP Server Response Header Scanner - Passive/beta)\n10038\tWARN\t(Content Security Policy (CSP) Header Not Set - Passive/beta)\n10039\tWARN\t(X-Backend-Server Header Information Leak - Passive/beta)\n10043\tWARN\t(User Controllable JavaScript Event (XSS) - Passive/beta)\n10044\tWARN\t(Big Redirect Detected (Potential Sensitive Information Leak) - Passive/beta)\n10048\tWARN\t(Remote Code Execution - Shell Shock - Active/beta)\n10050\tWARN\t(Retrieved from Cache - Passive/beta)\n10051\tWARN\t(Relative Path Confusion - Active/beta)\n10058\tWARN\t(GET for POST - Active/beta)\n10062\tWARN\t(PII Scanner - Passive/beta)\n10095\tWARN\t(Backup File Disclosure - Active/beta)\n10107\tWARN\t(Httpoxy - Proxy Header Misuse - Active/beta)\n10108\tWARN\t(Reverse Tabnabbing - Passive/beta)\n30003\tWARN\t(Integer Overflow Error - Active/beta)\n40013\tWARN\t(Session Fixation - Active/beta)\n40022\tWARN\t(SQL Injection - PostgreSQL - Active/beta)\n40023\tWARN\t(Possible Username Enumeration - Active/beta)\n40028\tWARN\t(ELMAH Information Leak - Active/beta)\n90021\tWARN\t(XPath Injection - Active/beta)\n90023\tWARN\t(XML External Entity Attack - Active/beta)\n90024\tWARN\t(Generic Padding Oracle - Active/beta)\n90025\tWARN\t(Expression Language Injection - Active/beta)\n90027\tWARN\t(Cookie Slack Detector - Active/beta)\n90028\tWARN\t(Insecure HTTP Method - Active/beta)\n" > /zap/wrk/scan_config.txt'
    - '/analyze -t $DAST_WEBSITE -c scan_config.txt -d'
