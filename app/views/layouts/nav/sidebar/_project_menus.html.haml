- if project_nav_tab? :snippets
  = nav_link(controller: :snippets) do
    = link_to project_snippets_path(@project), class: 'shortcuts-snippets', data: { qa_selector: 'snippets_link' } do
      .nav-icon-container
        = sprite_icon('snippet')
      %span.nav-item-name
        = _('Snippets')
    %ul.sidebar-sub-level-items.is-fly-out-only
      = nav_link(controller: :snippets, html_options: { class: "fly-out-top-item" } ) do
        = link_to project_snippets_path(@project) do
          %strong.fly-out-top-item-name
            = _('Snippets')

= nav_link(controller: :project_members) do
  = link_to project_project_members_path(@project), title: _('Members'), class: 'qa-members-link', id: 'js-onboarding-members-link' do
    .nav-icon-container
      = sprite_icon('users')
    %span.nav-item-name
      = _('Members')
  %ul.sidebar-sub-level-items.is-fly-out-only
    = nav_link(path: %w[members#show], html_options: { class: "fly-out-top-item" } ) do
      = link_to project_project_members_path(@project) do
        %strong.fly-out-top-item-name
          = _('Members')

- if project_nav_tab? :settings
  = nav_link(path: sidebar_settings_paths) do
    = link_to edit_project_path(@project) do
      .nav-icon-container
        = sprite_icon('settings')
      %span.nav-item-name.qa-settings-item#js-onboarding-settings-link
        = _('Settings')

    %ul.sidebar-sub-level-items
      - can_edit = can?(current_user, :admin_project, @project)
      - if can_edit
        = nav_link(path: sidebar_settings_paths, html_options: { class: "fly-out-top-item" } ) do
          = link_to edit_project_path(@project) do
            %strong.fly-out-top-item-name
              = _('Settings')
        %li.divider.fly-out-top-item
        = nav_link(path: %w[projects#edit]) do
          = link_to edit_project_path(@project), title: _('General'), class: 'qa-general-settings-link' do
            %span
              = _('General')
      - if can_edit
        = nav_link(controller: [:integrations, :services]) do
          = link_to project_settings_integrations_path(@project), title: _('Integrations'), data: { qa_selector: 'integrations_settings_link' } do
            %span
              = _('Integrations')
        = nav_link(controller: [:hooks, :hook_logs]) do
          = link_to project_hooks_path(@project), title: _('Webhooks'), data: { qa_selector: 'webhooks_settings_link' } do
            %span
              = _('Webhooks')
        - if can?(current_user, :read_resource_access_tokens, @project)
          = nav_link(controller: [:access_tokens]) do
            = link_to project_settings_access_tokens_path(@project), title: _('Access Tokens'), data: { qa_selector: 'access_tokens_settings_link' } do
              %span
                = _('Access Tokens')
        = nav_link(controller: :repository) do
          = link_to project_settings_repository_path(@project), title: _('Repository') do
            %span
              = _('Repository')
        - if !@project.archived? && @project.feature_available?(:builds, current_user)
          = nav_link(controller: :ci_cd) do
            = link_to project_settings_ci_cd_path(@project), title: _('CI/CD') do
              %span
                = _('CI/CD')
        - if settings_operations_available?
          = nav_link(controller: [:operations]) do
            = link_to project_settings_operations_path(@project), title: _('Operations'), data: { qa_selector: 'operations_settings_link' } do
              = _('Operations')
        - if @project.pages_available?
          = nav_link(controller: :pages) do
            = link_to project_pages_path(@project), title: _('Pages') do
              %span
                = _('Pages')
        - if settings_packages_and_registries_enabled?(@project)
          = nav_link(controller: :packages_and_registries) do
            = link_to project_settings_packages_and_registries_path(@project), title: _('Packages & Registries'), data: { qa_selector: 'project_package_settings_link' } do
              %span
                = _('Packages & Registries')

-# Shortcut to Project > Activity
%li.hidden
  = link_to activity_project_path(@project), title: _('Activity'), class: 'shortcuts-project-activity' do
    %span
      = _('Activity')

-# Shortcut to Repository > Graph (formerly, Network)
- if project_nav_tab? :network
  %li.hidden
    = link_to project_network_path(@project, current_ref), title: _('Network'), class: 'shortcuts-network' do
      = _('Graph')

-# Shortcut to Issues > New Issue
- if project_nav_tab?(:issues)
  %li.hidden
    = link_to new_project_issue_path(@project), class: 'shortcuts-new-issue' do
      = _('Create a new issue')

-# Shortcut to Pipelines > Jobs
- if project_nav_tab? :builds
  %li.hidden
    = link_to project_jobs_path(@project), title: _('Jobs'), class: 'shortcuts-builds' do
      = _('Jobs')

-# Shortcut to commits page
- if project_nav_tab? :commits
  %li.hidden
    = link_to project_commits_path(@project), title: _('Commits'), class: 'shortcuts-commits' do
      = _('Commits')

-# Shortcut to issue boards
- if project_nav_tab?(:issues)
  %li.hidden
    = link_to _('Issue Boards'), project_boards_path(@project), title: _('Issue Boards'), class: 'shortcuts-issue-boards'
