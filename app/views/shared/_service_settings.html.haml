= form_errors(@service)

- if lookup_context.template_exists?('help', "projects/services/#{@service.to_param}", true)
  = render "projects/services/#{@service.to_param}/help", subject: @service
- elsif @service.help.present?
  .info-well
    .well-segment
      = markdown @service.help

.service-settings
  .js-vue-integration-settings{ data: { show_active: @service.show_active_box?.to_s, activated: (@service.active || @service.new_record?).to_s, type: @service.to_param, merge_request_events: @service.merge_requests_events.to_s,
commit_events: @service.commit_events.to_s, enable_comments: @service.comment_on_event_enabled.to_s, comment_detail: @service.comment_detail, trigger_events: trigger_events_for_service, fields: fields_for_service } }

  - if show_service_trigger_events?
    .form-group.row
      %label.col-form-label.col-sm-2= _('Trigger')

      .col-sm-10
        - @service.configurable_events.each do |event|
          .form-group
            .form-check
              = form.check_box service_event_field_name(event), class: 'form-check-input'
              = form.label service_event_field_name(event), class: 'form-check-label' do
                %strong
                  = event.humanize

            - field = @service.event_field(event)

            - if field
              = form.text_field field[:name], class: "form-control", placeholder: field[:placeholder]

            %p.text-muted
              = @service.class.event_description(event)

  - unless integration_form_refactor?
    - @service.global_fields.each do |field|
      = render 'shared/field', form: form, field: field
