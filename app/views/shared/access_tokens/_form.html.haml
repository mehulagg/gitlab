- title = local_assigns.fetch(:title, _('Add a %{type}') % { type: type })
- prefix = local_assigns.fetch(:prefix, :personal_access_token)

%h5.gl-mt-0
  = title
%p.profile-settings-content
  = _("Enter the name of your application, and we'll return a unique %{type}.") % { type: type }

= form_for token, as: prefix, url: path, method: :post, html: { class: 'js-requires-input' } do |f|

  = form_errors(token)

  .row
    .form-group.col-md-8
      = f.label :name, _('Token name'), class: 'label-bold'
      = f.text_field :name, class: 'form-control gl-form-input', required: true, data: { qa_selector: 'access_token_name_field' }, :'aria-describedby' => 'support_help_block'
      %span.form-text.text-muted#support_help_block= _('Enter the name of application using the token.')

  .row
    .form-group.col-md-6
      = f.label :expires_at, _('Expiration date'), class: 'label-bold'
      .input-icon-wrapper

        = render_if_exists 'personal_access_tokens/callout_max_personal_access_token_lifetime'

        .js-access-tokens-expires-at
          = f.text_field :expires_at, class: 'datepicker gl-datepicker-input form-control gl-form-input', placeholder: 'YYYY-MM-DD', autocomplete: 'off', data: { js_name: 'expiresAt' }

  .form-group
    = f.label :scopes, _('Permission levels'), class: 'label-bold'
    = render 'shared/tokens/scopes_form', prefix: prefix, token: token, scopes: scopes

  - if prefix == :personal_access_token && Feature.enabled?(:personal_access_tokens_scoped_to_projects, current_user)
    .js-access-tokens-projects
      %input{ type: 'hidden', name: 'personal_access_token[projects]', id: 'personal_access_token_projects', data: { js_name: 'projects' } }

  .gl-mt-3
    = f.submit _('Create %{type}') % { type: type }, class: 'gl-button btn btn-confirm', data: { qa_selector: 'create_token_button' }
