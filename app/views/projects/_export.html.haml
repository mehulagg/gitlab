- return unless Gitlab::CurrentSettings.project_export_enabled?

- project = local_assigns.fetch(:project)

.sub-section{ data: { qa_selector: 'export_project_content' } }
  %h4= _('Export project')
  %p= _('Export this project with all its related data in order to move your project to a new GitLab instance. When the exported file is ready, you will receive a notification email with a download link, or you can download it from this page. You can then import it when creating a new project.')
   = link_to _('Read more'), help_page_path('user/project/settings/import_export'), target: '_blank'

  .bs-callout.bs-callout-info
    %p.gl-mb-0
      %p= _('The following items will be exported:')
      %ul
        - project_export_descriptions.each do |desc|
          %li= desc
      %p= _('The following items will NOT be exported:')
      %ul
        %li= _('Job logs and artifacts')
        %li= _('Container registry images')
        %li= _('CI variables')
        %li= _('Webhooks')
        %li= _('Any encrypted tokens')
  - if project.export_status == :finished
    = link_to _('Download export'), download_export_project_path(project),
            rel: 'nofollow', download: '', method: :get, class: "btn btn-default", data: { qa_selector: 'download_export_link' }
    = link_to _('Generate new export'), generate_new_export_project_path(project),
            method: :post, class: "btn btn-default"
  - else
    = link_to _('Export project'), export_project_path(project),
          method: :post, class: "btn btn-default", data: { qa_selector: 'export_project_link' }
