- page_title _("Merge Conflicts"), "#{@merge_request.title} (#{@merge_request.to_reference}", _("Merge Requests")
- add_page_specific_style 'page_bundles/merge_conflicts'
- branch_name = link_to @merge_request.source_branch, project_tree_path(@merge_request.project, @merge_request.source_branch), class: "ref-name"
- translation =_('You can resolve the merge conflict using either the Interactive mode, by choosing %{use_ours} or %{use_theirs} buttons, or by editing the files directly. Commit these changes into %{branch_name}') % { use_ours: '<code>Use Ours</code>', use_theirs: '<code>Use Theirs</code>', branch_name: branch_name }

= render "projects/merge_requests/mr_title"

.merge-request-details.issuable-details
  = render "projects/merge_requests/mr_box"

= render 'shared/issuable/sidebar', issuable_sidebar: @issuable_sidebar, assignees: @merge_request.assignees, source_branch: @merge_request.source_branch

#conflicts{ "v-cloak" => "true", data: { conflicts_path: conflicts_project_merge_request_path(@merge_request.project, @merge_request, format: :json),
    resolve_conflicts_path: resolve_conflicts_project_merge_request_path(@merge_request.project, @merge_request) } }
  %merge-conflicts-resolver-app

  .files-wrapper{ "v-if" => "!isLoading && !hasError" }
    .files
      .diff-file.file-holder.conflict{ "v-for" => "file in conflictsData.files" }
        .js-file-title.file-title.file-title-flex-parent.cursor-default
          .file-header-content
            %file-icon{ ':file-name': 'file.filePath', ':size': '18', 'css-classes': 'gl-mr-2' }
            %strong.file-title-name {{file.filePath}}
          .file-actions.d-flex.align-items-center.gl-ml-auto.gl-align-self-start
            .btn-group.gl-mr-3{ "v-if" => "file.type === 'text'" }
              %button.btn.gl-button{ ":class" => "{ 'active': file.resolveMode == 'interactive' }",
                '@click' => "onClickResolveModeButton(file, 'interactive')",
                type: 'button' }
                = _('Interactive mode')
              %button.btn.gl-button{ ':class' => "{ 'active': file.resolveMode == 'edit' }",
                '@click' => "onClickResolveModeButton(file, 'edit')",
                type: 'button' }
                = _('Edit inline')
            %a.btn.gl-button.view-file{ ":href" => "file.blobPath" }
              = _('View file @%{commit_sha}') % { commit_sha: '{{conflictsData.shortCommitSha}}' }
        .diff-content.diff-wrap-lines
          .file-content{ "v-show" => "!isParallel && file.resolveMode === 'interactive' && file.type === 'text'" }
            %inline-conflict-lines{ ":file" => "file" }
          .file-content{ "v-show" => "isParallel && file.resolveMode === 'interactive' && file.type === 'text'" }
            %parallel-conflict-lines{ ":file" => "file" }
          %div{ "v-show" => "file.resolveMode === 'edit' ||  file.type === 'text-editor'" }
            %diff-file-editor{ ":file" => "file", ":on-cancel-discard-confirmation" => "cancelDiscardConfirmation", ":on-accept-discard-confirmation" => "acceptDiscardConfirmation" }

  %hr
  .resolve-conflicts-form
    .form-group.row
      .col-md-4
        %h4= _('Resolve conflicts on source branch')
        .resolve-info{ "v-pre": true }
          = translation.html_safe
      .col-md-8
        %label.label-bold{ "for" => "commit-message" }
          #{ _('Commit message') }
        .commit-message-container
          .max-width-marker
          %textarea.form-control.js-commit-message#commit-message{ "v-model" => "conflictsData.commitMessage", "rows" => "5" }
    .form-group.row
      .offset-md-4.col-md-8
        .row
          .col-6
            %button.btn.gl-button.btn-success.js-submit-button{ type: "button", "@click" => "commit()", ":disabled" => "!readyToCommit" }
              %span {{commitButtonText}}
          .col-6.text-right
            = link_to "Cancel", project_merge_request_path(@merge_request.project, @merge_request), class: "gl-button btn btn-default"
