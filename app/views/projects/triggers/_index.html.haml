.row.gl-mt-3.gl-mb-3.triggers-container
  .col-lg-12
    .card
      .card-header
        Manage your project's triggers
      .card-body
        = render "projects/triggers/form", btn_text: "Add trigger"
        %hr
        - if Feature.enabled?(:ci_pipeline_triggers_settings_vue_ui, @project)
          #js-ci-pipeline-triggers-list.triggers-list{ data: { triggers: @triggers_json } }
        - else
          - if @triggers.any?
            .table-responsive.triggers-list
              %table.table
                %thead
                  %th
                    %strong Token
                  %th
                    %strong Description
                  %th
                    %strong Owner
                  %th
                    %strong Last used
                  %th
                = render partial: 'projects/triggers/trigger', collection: @triggers, as: :trigger
          - else
            %p.settings-message.text-center.gl-mb-3{ data: { testid: 'no_triggers_content' } }
              No triggers exist yet. Use the form above to create one.

      .card-footer

        %p
          These examples show how to trigger a pipeline for a branch or tag.

        %p.light
          In each example, replace
          %code TOKEN
          with the trigger token you generated and replace
          %code REF_NAME
          with the branch or tag name.

        %h5.gl-mt-3
          Use cURL

        %pre
          :plain
            curl -X POST \
                 -F token=TOKEN \
                 -F ref=REF_NAME \
                 #{builds_trigger_url(@project.id)}
        %h5.gl-mt-3
          Use .gitlab-ci.yml

        %pre
          :plain
            trigger_build:
              stage: deploy
              script:
                - "curl -X POST -F token=TOKEN -F ref=REF_NAME #{builds_trigger_url(@project.id)}"
        %h5.gl-mt-3
          Use webhook

        %p.light
          Use for Push and Tag Push events.

        %pre
          :plain
             #{builds_trigger_url(@project.id, ref: 'REF_NAME')}?token=TOKEN
        %h5.gl-mt-3
          Pass job variables

        %p.light
          To distinguish between triggered pipelines and other pipelines,
          add
          %code variables[VARIABLE]=VALUE
          to the API request.
        %p.light
          cURL:

        %pre
          :plain
            curl -X POST \
                 -F token=TOKEN \
                 -F "ref=REF_NAME" \
                 -F "variables[RUN_NIGHTLY_BUILD]=true" \
                 #{builds_trigger_url(@project.id)}
        %p.light
          Webhook:

        %pre.gl-mb-0
          :plain
             #{builds_trigger_url(@project.id, ref: 'REF_NAME')}?token=TOKEN&variables[RUN_NIGHTLY_BUILD]=true
