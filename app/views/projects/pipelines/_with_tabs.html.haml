- failed_builds = @pipeline.statuses.latest.failed
- expose_sast_data = @pipeline.expose_sast_data?
- expose_dependency_data = @pipeline.expose_dependency_scanning_data?
- blob_path = project_blob_path(@project, @pipeline.sha)

.tabs-holder
  %ul.pipelines-tabs.nav-links.no-top.no-bottom.mobile-separator
    %li.js-pipeline-tab-link
      = link_to project_pipeline_path(@project, @pipeline), data: { target: '#js-tab-pipeline', action: 'pipelines', toggle: 'tab' }, class: 'pipeline-tab' do
        = _("Pipeline")
    %li.js-builds-tab-link
      = link_to builds_project_pipeline_path(@project, @pipeline), data: { target: '#js-tab-builds', action: 'builds', toggle: 'tab' }, class: 'builds-tab' do
        = _("Jobs")
        %span.badge.js-builds-counter= pipeline.total_size
    - if failed_builds.present?
      %li.js-failures-tab-link
        = link_to failures_project_pipeline_path(@project, @pipeline), data: { target: '#js-tab-failures', action: 'failures', toggle: 'tab' }, class: 'failures-tab' do
          = _("Failed Jobs")
          %span.badge.js-failures-counter= failed_builds.count
    - if expose_sast_data || expose_dependency_data
      %li.js-security-tab-link
        = link_to security_project_pipeline_path(@project, @pipeline), data: { target: '#js-tab-security', action: 'security', toggle: 'tab' }, class: 'security-tab' do
          = _("Security report")
          %span.badge.js-sast-counter.hidden

.tab-content
  #js-tab-pipeline.tab-pane
    #js-pipeline-graph-vue

  #js-tab-builds.tab-pane
    - if pipeline.yaml_errors.present?
      .bs-callout.bs-callout-danger
        %h4 Found errors in your .gitlab-ci.yml:
        %ul
          - pipeline.yaml_errors.split(",").each do |error|
            %li= error
        You can also test your .gitlab-ci.yml in the #{link_to "Lint", project_ci_lint_path(@project)}

    - if pipeline.project.builds_enabled? && !pipeline.ci_yaml_file
      .bs-callout.bs-callout-warning
        \.gitlab-ci.yml not found in this commit

    .table-holder.pipeline-holder
      %table.table.ci-table.pipeline
        %thead
          %tr
            %th Status
            %th Job ID
            %th Name
            %th
            %th Coverage
            %th
        = render partial: "projects/stage/stage", collection: pipeline.legacy_stages, as: :stage
  - if failed_builds.present?
    #js-tab-failures.build-failures.tab-pane
      - failed_builds.each_with_index do |build, index|
        .build-state
          %span.ci-status-icon-failed= custom_icon('icon_status_failed')
          %span.stage
            = build.stage.titleize
          %span.build-name
            = link_to build.name, pipeline_job_url(pipeline, build)
        %pre.build-log= build_summary(build, skip: index >= 10)
  - if expose_sast_data || expose_dependency_data
    #js-tab-security.build-security.tab-pane
      #js-security-report-app{ data: { endpoint: expose_sast_data ? sast_artifact_url(@pipeline) : nil,
      blob_path: blob_path,
      dependency_scanning_endpoint: expose_dependency_data ? dependency_scanning_artifact_url(@pipeline) : nil,
      sast_help_path: help_page_path('user/project/merge_requests/sast'),
      dependency_scanning_help_path: help_page_path('user/project/merge_requests/dependency_scanning')} }
