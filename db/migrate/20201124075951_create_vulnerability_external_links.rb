# frozen_string_literal: true

class CreateVulnerabilityExternalLinks < ActiveRecord::Migration[6.0]
  include Gitlab::Database::MigrationHelpers

  DOWNTIME = false

  disable_ddl_transaction!

  def up
    with_lock_retries do
      create_table :vulnerability_external_issue_links, if_not_exists: true do |t|
        t.timestamps_with_timezone null: false
        t.text :external_project_id, null: false
        t.text :external_issue_id, null: false
        t.bigint :author_id, null: false
        t.references :vulnerability, null: false, index: false, foreign_key: { on_delete: :cascade }
        t.integer :link_type, limit: 2, null: false, default: 1 # 'created'
        t.integer :external_type, limit: 2, null: false, default: 1 # 'jira'

        t.index %i[vulnerability_id id],
          name: 'idx_vulnerability_ext_issue_links_on_vulne_id_and_id',
          unique: true
        t.index %i[vulnerability_id link_type],
          name: 'idx_vulnerability_ext_issue_links_on_vulne_id_and_link_type',
          where: 'link_type = 1',
          unique: true # only one 'created' link per vulnerability is allowed
      end
    end

    add_text_limit :vulnerability_external_issue_links, :external_project_id, 255
    add_text_limit :vulnerability_external_issue_links, :external_issue_id, 255
  end

  def down
    with_lock_retries do
      drop_table :vulnerability_external_issue_links
    end
  end
end
