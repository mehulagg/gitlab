# frozen_string_literal: true

class SchedulePopulateVulnerabilityFeedbackPipelineId < ActiveRecord::Migration[6.0]
  include Gitlab::Database::MigrationHelpers

  DOWNTIME = false
  INTERVAL = 2.minutes.to_i
  BATCH_SIZE = 500
  MIGRATION = 'PopulateVulnerabilityFeedbackPipelineId'

  disable_ddl_transaction!

  class VulnerabilityFeedback < ActiveRecord::Base
    self.table_name = 'vulnerability_feedback'

    include ::EachBatch
  end

  def up
    return unless Gitlab.ee?

    relation = VulnerabilityFeedback.where(pipeline_id: nil)
    queue_background_migration_jobs_by_range_at_intervals(relation, MIGRATION, INTERVAL, batch_size: BATCH_SIZE)
  end

  def down
    # no-op
  end
end
