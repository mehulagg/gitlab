services:
 - docker:1.13-dind

stages:
  - check
  - test
  - notify

variables:
  TEST_IMAGE: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-qa
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375
  QA_SCREENSHOTS_DIR: $CI_PROJECT_DIR/screenshots

before_script:
  - bundle install

check:rubocop:
  stage: check
  image: $TEST_IMAGE
  script: bundle exec rubocop
  except:
    - triggers
  tags:
    - docker

check:rspec:
  stage: check
  image: $TEST_IMAGE
  script: bundle exec rspec
  except:
    - triggers
  tags:
    - docker

.test: &test
  stage: test
  image: $TEST_IMAGE
  tags:
    - docker
  artifacts:
    when: on_failure
    expire_in: 30d
    paths:
      - screenshots/*.png

ce:instance:
  script: bin/qa Test::Instance::Image CE
  <<: *test

ee:instance:
  script: bin/qa Test::Instance::Image EE
  <<: *test

ce:image:
  script: bin/qa Test::Omnibus::Image CE
  <<: *test

ee:image:
  script: bin/qa Test::Omnibus::Image EE
  <<: *test

ce:upgrade:
  script: bin/qa Test::Omnibus::Upgrade CE
  <<: *test

ee:upgrade:
  script: bin/qa Test::Omnibus::Upgrade EE
  <<: *test

ce:mattermost:
  script: bin/qa Test::Integration::Mattermost CE
  <<: *test

ee:mattermost:
  script: bin/qa Test::Integration::Mattermost EE
  <<: *test

notify:slack:
  before_script:
    - apk update && apk add git curl bash
  image: alpine
  stage: notify
  script:
    - bin/slack "#development" "Pipeline on \`$CI_BUILD_REF_NAME\` failed! Commit \`$(git log -1 --oneline | sed 's|\"|\\\\\"|g')\` See <https://gitlab.com/gitlab-org/gitlab-qa/commit/"$CI_BUILD_REF"/pipelines>"
  when: on_failure
  only:
    - master
    - tags@gitlab-org/gitlab-qa
