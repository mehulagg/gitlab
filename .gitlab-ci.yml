services:
 - docker:1.13-dind

stages:
  - check
  - sanity
  - test
  - qa

variables:
  TEST_IMAGE: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-qa
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375
  QA_SCREENSHOTS_DIR: $CI_PROJECT_DIR/screenshots
  QA_LOGS_DIR: $CI_PROJECT_DIR/logs

before_script:
  - bundle install
  - if [ -n "$TRIGGERED_USER" ] && [ -n "$TRIGGER_SOURCE" ]; then
      echo "Pipeline triggered by $TRIGGERED_USER at $TRIGGER_SOURCE";
    fi

check:rubocop:
  stage: check
  image: $TEST_IMAGE
  script: bundle exec rubocop
  except:
    - triggers
  tags:
    - docker

check:rspec:
  stage: check
  image: $TEST_IMAGE
  script: bundle exec rspec
  except:
    - triggers
  tags:
    - docker

.sanity: &sanity
  stage: sanity
  image: $TEST_IMAGE
  only:
    - schedules
  tags:
    - docker

ce:version:
  script: bin/qa Test::Sanity::Version CE
  allow_failure: true
  <<: *sanity

ee:version:
  script: bin/qa Test::Sanity::Version EE
  allow_failure: true
  <<: *sanity

.test: &test
  stage: test
  image: $TEST_IMAGE
  retry: 1
  tags:
    - docker
  artifacts:
    when: on_failure
    expire_in: 30d
    paths:
      - screenshots/
      - logs/

.ce-qa: &ce-qa
  only:
    variables:
      - $RELEASE == null
      - $RELEASE =~ /gitlab-ce/

.ee-qa: &ee-qa
  only:
    variables:
      - $RELEASE == null
      - $RELEASE =~ /gitlab-ee/

.only-qa: &only-qa
  except:
    variables:
      - $RELEASE

.high-capacity: &high-capacity
  tags:
    - docker
    - 7gb
    - triggered-packages

ce:instance:
  script:
    - bin/qa Test::Instance::Image ${RELEASE:=CE}
  <<: *test
  <<: *high-capacity
  <<: *ce-qa

ee:instance:
  script:
    - bin/qa Test::Instance::Image ${RELEASE:=EE}
  <<: *test
  <<: *high-capacity
  <<: *ee-qa

ce:image:
  script:
    - bin/qa Test::Omnibus::Image ${RELEASE:=CE}
  <<: *test
  <<: *ce-qa

ee:image:
  script:
    - bin/qa Test::Omnibus::Image ${RELEASE:=EE}
  <<: *test
  <<: *ee-qa

ce:update:
  script:
    - bin/qa Test::Omnibus::Update ${RELEASE:=CE}
  <<: *test
  <<: *high-capacity
  <<: *ce-qa

ee:update:
  script:
    - bin/qa Test::Omnibus::Update ${RELEASE:=EE}
  <<: *test
  <<: *high-capacity
  <<: *ee-qa

ce:upgrade:
  script:
    - bin/qa Test::Omnibus::Upgrade
  <<: *test
  <<: *high-capacity
  <<: *only-qa

ee-previous-to-ce:update:
  script:
     - bin/qa Test::Omnibus::Update EE CE
  <<: *test
  <<: *high-capacity
  <<: *only-qa

ce:mattermost:
  script:
    - bin/qa Test::Integration::Mattermost ${RELEASE:=CE}
  <<: *test
  <<: *high-capacity
  <<: *ce-qa

ee:mattermost:
  script:
    - bin/qa Test::Integration::Mattermost ${RELEASE:=EE}
  <<: *test
  <<: *high-capacity
  <<: *ee-qa

ee:geo:
  script:
    - bin/qa Test::Integration::Geo ${RELEASE:=EE}
  <<: *test
  <<: *high-capacity
  <<: *ee-qa

ce:ldap:
  script:
    - bin/qa Test::Integration::LDAP ${RELEASE:=CE}
  <<: *test
  <<: *high-capacity
  <<: *ce-qa

ee:ldap:
  script:
    - bin/qa Test::Integration::LDAP ${RELEASE:=EE}
  <<: *test
  <<: *high-capacity
  <<: *ee-qa

ce:kubernetes:
  script:
    - bin/qa Test::Integration::Kubernetes ${RELEASE:=CE}
  <<: *test
  <<: *high-capacity
  <<: *ce-qa

ee:kubernetes:
  script:
    - bin/qa Test::Integration::Kubernetes ${RELEASE:=EE}
  <<: *test
  <<: *high-capacity
  <<: *ee-qa

qa:staging:
  script:
    - export GITLAB_USERNAME="gitlab-qa"
    - export GITLAB_PASSWORD="$GITLAB_QA_PASSWORD"
    - unset EE_LICENSE
    - bin/qa Test::Instance::Staging
  <<: *test
  retry: 0
  stage: qa
  when: manual
  except:
    - triggers
