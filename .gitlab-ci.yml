services:
 - docker:1.13-dind

stages:
  - check
  - sanity
  - test

variables:
  TEST_IMAGE: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-qa
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375
  QA_SCREENSHOTS_DIR: $CI_PROJECT_DIR/screenshots
  QA_LOGS_DIR: $CI_PROJECT_DIR/logs

before_script:
  - bundle install
  # Detecting CE/EE from job name. Sets to an array and read $1
  - set -- $CI_JOB_NAME
  - if [ -z "$GITLAB_IMAGE" ]; then GITLAB_IMAGE=$1; fi

check:rubocop:
  stage: check
  image: $TEST_IMAGE
  script: bundle exec rubocop
  except:
    - triggers
  tags:
    - docker

check:rspec:
  stage: check
  image: $TEST_IMAGE
  script: bundle exec rspec
  except:
    - triggers
  tags:
    - docker

.sanity: &sanity
  stage: sanity
  image: $TEST_IMAGE
  allow_failure: true
  script: bin/qa Test::Sanity::Version $GITLAB_IMAGE
  except:
    - triggers
  tags:
    - docker

ce version: *sanity
ee version: *sanity

.test: &test
  stage: test
  image: $TEST_IMAGE
  tags:
    - docker
  artifacts:
    when: on_failure
    expire_in: 30d
    paths:
      - screenshots/*.png
      - logs/*.log

.instance: &instance
  script: bin/qa Test::Instance::Image $GITLAB_IMAGE
  <<: *test

.image: &image
  script: bin/qa Test::Omnibus::Image $GITLAB_IMAGE
  <<: *test

.update: &update
  script: bin/qa Test::Omnibus::Update $GITLAB_IMAGE
  <<: *test

.mattermost: &mattermost
  script: bin/qa Test::Integration::Mattermost $GITLAB_IMAGE
  <<: *test

ce instance: *instance
ee instance: *instance

ce image: *image
ee image: *image

ce update: *update
ee update: *update

ce mattermost: *mattermost
ee mattermost: *mattermost

ce upgrade:
  script: bin/qa Test::Omnibus::Upgrade
  <<: *test

ee geo:
  script: bin/qa Test::Integration::Geo EE
  <<: *test
  allow_failure: true
  tags:
    - docker
    - 7gb
    - triggered-packages
