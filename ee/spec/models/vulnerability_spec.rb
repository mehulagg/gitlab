# frozen_string_literal: true

require 'spec_helper'

describe Vulnerability do
  let(:severity_values) do
    { undefined: 0,
      info: 1,
      unknown: 2,
      low: 4,
      medium: 5,
      high: 6,
      critical: 7 }
  end
  let(:confidence_values) do
    { undefined: 0,
      ignore: 1,
      unknown: 2,
      experimental: 3,
      low: 4,
      medium: 5,
      high: 6,
      confirmed: 7 }
  end

  it { is_expected.to define_enum_for(:state) }
  it { is_expected.to define_enum_for(:severity).with_values(severity_values).with_prefix(:severity) }
  it { is_expected.to define_enum_for(:confidence).with_values(confidence_values).with_prefix(:confidence) }

  describe 'associations' do
    subject { build(:vulnerability) }

    it { is_expected.to belong_to(:project) }
    it { is_expected.to belong_to(:milestone) }
    it { is_expected.to belong_to(:epic) }

    it { is_expected.to belong_to(:author).class_name('User') }
    it { is_expected.to belong_to(:updated_by).class_name('User') }
    it { is_expected.to belong_to(:last_edited_by).class_name('User') }
    it { is_expected.to belong_to(:closed_by).class_name('User') }
  end

  describe 'validations' do
    subject { build(:vulnerability) }

    it { is_expected.to validate_presence_of(:project) }
    it { is_expected.to validate_presence_of(:author) }
    it { is_expected.to validate_presence_of(:title) }
    it { is_expected.to validate_presence_of(:title_html) }
    it { is_expected.to validate_presence_of(:severity) }
    it { is_expected.to validate_presence_of(:confidence) }

    it { is_expected.to validate_length_of(:title).is_at_most(255) }
    it { is_expected.to validate_length_of(:title_html).is_at_most(800) }
    it { is_expected.to validate_length_of(:description).is_at_most(16_000).allow_nil }
    it { is_expected.to validate_length_of(:description_html).is_at_most(48_000).allow_nil }
  end
end
