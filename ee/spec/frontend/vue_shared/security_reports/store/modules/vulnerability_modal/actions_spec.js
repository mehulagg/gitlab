import $ from 'jquery';
import testAction from 'helpers/vuex_action_helper';
import createState from 'ee/vue_shared/security_reports/store/modules/vulnerability_modal/state';
import * as actions from 'ee/vue_shared/security_reports/store/modules/vulnerability_modal/actions';
import * as types from 'ee/vue_shared/security_reports/store/modules/vulnerability_modal/mutation_types';

const bootstrapModalMock = jest.fn();
$.fn.modal = bootstrapModalMock;

describe('vulnerability modal actions', () => {
  let mockedState;

  beforeEach(() => {
    mockedState = createState();
  });

  describe('openModal', () => {
    it(`dispatches setModalData action and calls .modal('show')`, done => {
      const payload = { issue: { id: 1 }, status: 'failed' };
      testAction(
        actions.openModal,
        payload,
        mockedState,
        [],
        [
          {
            type: 'setModalData',
            payload,
          },
        ],
        () => {
          expect(bootstrapModalMock).toHaveBeenCalledWith('show');
          done();
        },
      );
    });
  });

  describe('setModalData', () => {
    it('commits SET_ISSUE_MODAL_DATA', done => {
      const payload = { issue: { id: 1 }, status: 'success' };
      testAction(
        actions.setModalData,
        payload,
        mockedState,
        [
          {
            type: types.SET_ISSUE_MODAL_DATA,
            payload,
          },
        ],
        [],
        done,
      );
    });
  });

  describe('openDismissalCommentBox', () => {
    it('commits OPEN_DISMISSAL_COMMENT_BOX', done => {
      testAction(
        actions.openDismissalCommentBox,
        undefined,
        mockedState,
        [
          {
            type: types.OPEN_DISMISSAL_COMMENT_BOX,
          },
        ],
        [],
        done,
      );
    });
  });

  describe('closeDismissalCommentBox', () => {
    it('commits CLOSE_DISMISSAL_COMMENT_BOX', done => {
      testAction(
        actions.closeDismissalCommentBox,
        undefined,
        mockedState,
        [
          {
            type: types.CLOSE_DISMISSAL_COMMENT_BOX,
          },
        ],
        [],
        done,
      );
    });
  });
});
