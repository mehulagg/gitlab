# frozen_string_literal: true

require 'spec_helper'

RSpec.describe VulnerabilityPresenter do
  let(:project) { create(:project) }
  let(:pipeline) { create(:ci_pipeline, :success, project: project) }
  let(:finding) { create(:vulnerabilities_finding, :with_secret_detection, pipelines: [pipeline], project: project) }
  
  subject  { described_class.new(finding.vulnerability) }

  describe '#scanner' do
    it 'returns the scanner for a finding' do
      expect(subject.scanner).to eql(finding.scanner)
    end
  end
  
  describe '#remediations' do
    let(:finding) { create(:vulnerabilities_finding, :with_secret_detection, :with_remediation, pipelines: [pipeline], project: project) }

    it 'returns remediations' do
      expect(subject.remediations.count).to eql(1)
    end
  end

  describe '#location_link_with_raw_path' do
    it 'returns the location link in raw format' do
      path = subject.location_link_with_raw_path

      expect(path).to include('raw')
      expect(path).to include(finding.file)
      expect(path).to include("#L#{finding.location['start_line']}")
    end
  end

  describe '#location_link' do
    it 'returns the location link in blob format' do
      path = subject.location_link

      expect(path).to include('blob')
      expect(path).to include(finding.file)
      expect(path).to include("#L#{finding.location['start_line']}")
    end
  end

  describe '#jira_issue_description' do
    let(:expected_jira_issue_description) do
      <<-JIRA.strip_heredoc
        Issue created from vulnerability [#{finding.vulnerability.id}|http://localhost/#{project.full_path}/-/security/vulnerabilities/#{finding.vulnerability.id}]

        h3. Description:

        Description of #{finding.vulnerability.title}

        * Severity: high
        * Confidence: medium
        * Location: [aws-key.py:5|http://localhost/#{project.full_path}/-/blob/b83d6e391c22777fca1ed3012fce84f633d7fed0/aws-key.py#L5]





        h3. Scanner:

        * Name: Find Security Bugs
      JIRA
    end

    it 'returns the jira description in string format' do
      jira_issue_description = subject.jira_issue_description

      expect(jira_issue_description).to eq(expected_jira_issue_description)
    end
  end
end
