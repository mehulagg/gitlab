# frozen_string_literal: true

module Gitlab
  module Ci
    module Reports
      module Security
        class VulnerabilityReportsComparer
          include Gitlab::Utils::StrongMemoize

          attr_reader :base_report, :head_report, :security_scans

          ACCEPTABLE_REPORT_AGE = 1.week

          def initialize(base_report, head_report, **extra_metadata)
            @base_report = base_report
            @head_report = head_report
            @security_scans = extra_metadata[:head_security_scans]
          end

          def base_report_created_at
            @base_report.created_at
          end

          def head_report_created_at
            @head_report.created_at
          end

          def base_report_out_of_date
            return false unless @base_report.created_at

            ACCEPTABLE_REPORT_AGE.ago > @base_report.created_at
          end

          def added
            strong_memoize(:added) do
              head_report.findings - base_report.findings
            end
          end

          def fixed
            strong_memoize(:fixed) do
              base_report.findings - head_report.findings
            end
          end

          def existing
            strong_memoize(:existing) do
              # Existing vulnerabilities should point to source report for most recent information
              head_report.findings & base_report.findings
            end
          end

          def scans
            @security_scans
          end
        end
      end
    end
  end
end
