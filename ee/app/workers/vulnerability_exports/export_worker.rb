# frozen_string_literal: true

module VulnerabilityExports
  class ExportWorker
    include ApplicationWorker
    include ::Gitlab::ExclusiveLeaseHelpers

    LEASE_TIMEOUT = 1.hour

    feature_category :vulnerability_management
    worker_resource_boundary :cpu
    tags :no_disk_io

    idempotent!

    def perform(_exportable_id = nil, vulnerability_export_id) # rubocop:disable Style/OptionalArguments
      vulnerability_export = Vulnerabilities::Export.find_by_id(vulnerability_export_id)
      return unless vulnerability_export

      ExportService.export(vulnerability_export)
    rescue => error
      logger.error class: self.class.name, message: error.message
    end
  end
end
