# frozen_string_literal: true

module Security
  # Service for counting the number of vulnerability findings for
  # an array of report types within a pipeline
  #
  class VulnerabilityCountingService
    # @param [Ci::Pipeline] pipeline
    # @param Array[String] report_types Summary report types. Valid values are members of Enums::Vulnerability.report_types
    def initialize(pipeline, report_types)
      @pipeline = pipeline
      @report_types = report_types
    end

    def execute
      counts = @pipeline.security_findings
                        .with_pipeline_entities
                        .with_scan
                        .with_scanner
                        .deduplicated
                        .by_report_types(@report_types)
                        .count_by_scan_type

      counts.each_with_object({}) do |(key, value), hash|
        hash[Security::Scan.scan_types.key(key)] = value
      end
    end
  end
end
