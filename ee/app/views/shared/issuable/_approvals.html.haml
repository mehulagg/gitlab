- issuable = local_assigns.fetch(:issuable)
- presenter = local_assigns.fetch(:presenter)
- form = local_assigns.fetch(:form)

- return unless issuable.is_a?(MergeRequest)
- return unless presenter.requires_approve?

- author = issuable.author || current_user
- can_update_approvers = can?(current_user, :update_approvers, issuable)

.form-group.row
  = form.label :approver_ids, class: 'col-form-label col-sm-2' do
    Approvers
  .col-sm-10
    - if can_update_approvers
      - skip_users = [*presenter.all_approvers_including_groups, (author unless presenter.authors_can_approve?)].compact

      = users_select_tag("merge_request[approver_ids]",
        multiple: true,
        class: 'input-large',
        email_user: true,
        skip_users: skip_users,
        project: issuable.target_project)

      .form-text.text-muted
        This merge request must be approved by these users.
        You can override the project settings by setting your own list of approvers.

      - skip_groups = presenter.overall_approver_groups.pluck(:group_id) # rubocop: disable CodeReuse/ActiveRecord
      = groups_select_tag('merge_request[approver_group_ids]', multiple: true, data: { skip_groups: skip_groups, all_available: true, project: issuable.target_project }, class: 'input-large')
      .form-text.text-muted
        This merge request must be approved by members of these groups.
        You can override the project settings by setting your own list of approvers.

    .card.prepend-top-10
      .card-header
        Approvers
      %ul.content-list.approver-list
        - if presenter.all_approvers_including_groups.empty?
          %li.no-approvers There are no approvers
        - else
          - unsaved_approvers = !presenter.approvers_overwritten?
          - item_classes = unsaved_approvers ? ['unsaved-approvers'] : []
          - presenter.overall_approvers.each do |approver|
            %li{ id: dom_id(approver), class: item_classes + ['approver'] }
              = link_to approver.name, approver
              - if can_update_approvers
                .float-right
                  - if unsaved_approvers
                    = link_to "#", data: { confirm: "Are you sure you want to remove approver #{approver.name}"}, class: "btn-sm btn btn-remove", title: 'Remove approver' do
                      = icon("sign-out")
                      Remove
                  - else
                    = link_to project_merge_request_approver_via_user_id_path(@project, issuable, user_id: approver.id), data: { confirm: "Are you sure you want to remove approver #{approver.name}"}, method: :delete, class: "btn-sm btn btn-remove", title: 'Remove approver' do
                      = icon("sign-out")
                      Remove
          - presenter.overall_approver_groups.each do |approver_group|
            %li{ id: dom_id(approver_group.group), class: item_classes + ['approver-group'] }
              Group:
              = link_to approver_group.group.name, approver_group.group
              - if can_update_approvers
                .float-right
                  - if unsaved_approvers
                    = link_to "#", data: { confirm: "Are you sure you want to remove group #{approver_group.group.name}"}, class: "btn-sm btn btn-remove", title: 'Remove group' do
                      = icon("sign-out")
                      Remove
                  - else
                    = link_to project_merge_request_approver_group_path(@project, issuable, approver_group), data: { confirm: "Are you sure you want to remove group #{approver_group.group.name}"}, method: :delete, class: "btn-sm btn btn-remove", title: 'Remove group' do
                      = icon("sign-out")
                      Remove

    .col-sm-12
      .form-group.row
        = form.label :approvals_before_merge, class: 'label-bold' do
          Approvals required
        = form.number_field :approvals_before_merge, class: 'form-control', value: issuable.approvals_required, readonly: !can_update_approvers

    - if can_update_approvers
      - approver_presenter = MergeRequestApproverPresenter.new(issuable, skip_user: current_user)
      .form-text.text-muted.suggested-approvers
        - if approver_presenter.any?
          Suggested approvers:
          = approver_presenter.render
      - if approver_presenter.show_code_owner_tips?
        .form-text.text-muted
          Tip: add a
          = link_to 'CODEOWNERS', help_page_path('user/project/code_owners'), target: '_blank', tabindex: -1
          to automatically add approvers based on file paths and file types.
