- form = local_assigns.fetch(:form)

.form-group
  = label_tag :merge_method_merge, class: 'label-light' do
    Merge method
  .radio
    = label_tag :project_merge_method_merge do
      = form.radio_button :merge_method, :merge, class: "js-merge-method-radio"
      %strong Merge commit
      %br
      %span.descr
        A merge commit is created for every merge, and merging is allowed as long as there are no conflicts.

  = render 'projects/merge_request_rebase_settings', form: form

  = render 'projects/merge_request_fast_forward_settings', project: @project, form: form


- if @project.feature_available?(:issuable_default_templates)
  .form-group
    = form.label :merge_requests_template, class: 'label-light' do
      Default description template for merge requests
      = link_to icon('question-circle'), help_page_path('user/project/description_templates', anchor: 'setting-a-default-template-for-issues-and-merge-requests'), target: '_blank'
    = form.text_area :merge_requests_template, class: "form-control", rows: 3
    .hint
      Description parsed with #{link_to "GitLab Flavored Markdown", help_page_path('user/markdown'), target: '_blank'}.

= render 'projects/ee/merge_request_approvals_settings', project: @project, form: form

= render 'projects/merge_request_merge_settings', form: form
