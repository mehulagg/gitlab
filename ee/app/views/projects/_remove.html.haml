- return unless can?(current_user, :remove_project, project)
- adjourned_deletion = project.adjourned_deletion?

- unless project.marked_for_deletion?
  .sub-section
    %h4.danger-title= _('Remove project')
    %p
      %strong= s_('Delayed Project Deletion (%{adjourned_deletion})') % { adjourned_deletion: adjourned_deletion ? 'Enabled' : 'Disabled' }
    - if adjourned_deletion
      = render 'projects/settings/marked_for_removal'
    - else
      %p
        = _("Removing a project deletes it immediately, there will be no delay before the project is permanently removed.")
    %p
      %strong= _('Removing the project will delete its repository and all related resources including issues, merge requests etc.')
    %p
      %strong= _('Removed projects cannot be restored!')
    #js-confirm-project-remove{ data: { form_path: project_path(project), confirm_phrase: project.path, warning_message: remove_project_message(project) } }
- else
  = render 'projects/settings/restore', project: project

