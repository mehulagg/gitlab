diff --git a/app/assets/javascripts/vue_merge_request_widget/components/states/ready_to_merge.vue b/app/assets/javascripts/vue_merge_request_widget/components/states/ready_to_merge.vue
index 3a194320b..fc6420e26 100644
--- a/app/assets/javascripts/vue_merge_request_widget/components/states/ready_to_merge.vue
+++ b/app/assets/javascripts/vue_merge_request_widget/components/states/ready_to_merge.vue
@@ -34,7 +34,7 @@ export default {
   },
   computed: {
     shouldShowMergeWhenPipelineSucceedsText() {
-      return this.mr.isPipelineActive;
+      return this.mr.buildsEnabled && this.mr.isPipelineActive;
     },
     commitMessageLinkTitle() {
       const withDesc = 'Include description in commit message';
@@ -43,9 +43,11 @@ export default {
       return this.useCommitMessageWithDescription ? withoutDesc : withDesc;
     },
     status() {
-      const { pipeline, isPipelineActive, isPipelineFailed, hasCI, ciStatus } = this.mr;
+      const { pipeline, isPipelineActive, isPipelineFailed, buildsEnabled, ciStatus } = this.mr;
 
-      if (hasCI && !ciStatus) {
+      if (!buildsEnabled) {
+        return 'success';
+      } else if (!ciStatus) {
         return 'failed';
       } else if (!pipeline) {
         return 'success';
@@ -86,7 +88,9 @@ export default {
       return 'Merge';
     },
     shouldShowMergeOptionsDropdown() {
-      return this.mr.isPipelineActive && !this.mr.onlyAllowMergeIfPipelineSucceeds;
+      return this.mr.buildsEnabled &&
+        this.mr.isPipelineActive &&
+        !this.mr.onlyAllowMergeIfPipelineSucceeds;
     },
     isMergeButtonDisabled() {
       const { commitMessage } = this;
diff --git a/app/assets/javascripts/vue_merge_request_widget/stores/mr_widget_store.js b/app/assets/javascripts/vue_merge_request_widget/stores/mr_widget_store.js
index 134aaacf9..a0d87bc83 100644
--- a/app/assets/javascripts/vue_merge_request_widget/stores/mr_widget_store.js
+++ b/app/assets/javascripts/vue_merge_request_widget/stores/mr_widget_store.js
@@ -95,12 +95,15 @@ export default class MergeRequestStore {
     this.ciEnvironmentsStatusPath = data.ci_environments_status_path;
     this.hasCI = data.has_ci;
     this.ciStatus = data.ci_status;
-    this.isPipelineFailed = this.ciStatus === 'failed' || this.ciStatus === 'canceled';
-    this.isPipelinePassing = this.ciStatus === 'success' || this.ciStatus === 'success_with_warnings';
-    this.isPipelineSkipped = this.ciStatus === 'skipped';
+    this.buildsEnabled = data.builds_enabled;
+    if (this.buildsEnabled) {
+      this.isPipelineFailed = this.ciStatus === 'failed' || this.ciStatus === 'canceled';
+      this.isPipelinePassing = this.ciStatus === 'success' || this.ciStatus === 'success_with_warnings';
+      this.isPipelineSkipped = this.ciStatus === 'skipped';
+      this.isPipelineActive = data.pipeline ? data.pipeline.active : false;
+      this.isPipelineBlocked = pipelineStatus ? pipelineStatus.group === 'manual' : false;
+    }
     this.pipelineDetailedStatus = pipelineStatus;
-    this.isPipelineActive = data.pipeline ? data.pipeline.active : false;
-    this.isPipelineBlocked = pipelineStatus ? pipelineStatus.group === 'manual' : false;
     this.ciStatusFaviconPath = pipelineStatus ? pipelineStatus.favicon : null;
 
     this.setState(data);
diff --git a/app/models/merge_request.rb b/app/models/merge_request.rb
index 535a2c362..df59239ec 100644
--- a/app/models/merge_request.rb
+++ b/app/models/merge_request.rb
@@ -907,7 +907,7 @@ class MergeRequest < ActiveRecord::Base
   end
 
   def mergeable_ci_state?
-    return true unless project.only_allow_merge_if_pipeline_succeeds?
+    return true unless project.builds_enabled? && project.only_allow_merge_if_pipeline_succeeds?
     return true unless head_pipeline
 
     actual_head_pipeline&.success? || actual_head_pipeline&.skipped?
diff --git a/app/serializers/merge_request_widget_entity.rb b/app/serializers/merge_request_widget_entity.rb
index 8260c6c7b..3bb3a4427 100644
--- a/app/serializers/merge_request_widget_entity.rb
+++ b/app/serializers/merge_request_widget_entity.rb
@@ -215,6 +215,10 @@ class MergeRequestWidgetEntity < IssuableEntity
     end
   end
 
+  expose :builds_enabled do |merge_request|
+    merge_request.project.builds_enabled?
+  end
+
   private
 
   delegate :current_user, to: :request
diff --git a/app/views/projects/_merge_request_merge_settings.html.haml b/app/views/projects/_merge_request_merge_settings.html.haml
index f178c94e0..782d838f3 100644
--- a/app/views/projects/_merge_request_merge_settings.html.haml
+++ b/app/views/projects/_merge_request_merge_settings.html.haml
@@ -1,13 +1,13 @@
 - form = local_assigns.fetch(:form)
 
 .form-group
-  .form-check.builds-feature{ class: ("hidden" if @project && @project.project_feature.send(:builds_access_level) == 0) }
+  .form-check.builds-feature
     = form.check_box :only_allow_merge_if_pipeline_succeeds, class: 'form-check-input'
     = form.label :only_allow_merge_if_pipeline_succeeds, class: 'form-check-label' do
       %strong Only allow merge requests to be merged if the pipeline succeeds
       %br
       %span.descr
-        Pipelines need to be configured to enable this feature.
+        Pipelines need to be configured for this feature to have an effect.
         = link_to icon('question-circle'), help_page_path('user/project/merge_requests/merge_when_pipeline_succeeds', anchor: 'only-allow-merge-requests-to-be-merged-if-the-pipeline-succeeds'), target: '_blank'
   .form-check
     = form.check_box :only_allow_merge_if_all_discussions_are_resolved, class: 'form-check-input'
diff --git a/changelogs/unreleased/39206-disabling-pipelines-for-a-project-does-not-disable-only-allow-merge-requests-to-be-merged-if-the-pipeline-succeeds.yml b/changelogs/unreleased/39206-disabling-pipelines-for-a-project-does-not-disable-only-allow-merge-requests-to-be-merged-if-the-pipeline-succeeds.yml
new file mode 100644
index 000000000..c6abe5bcf
--- /dev/null
+++ b/changelogs/unreleased/39206-disabling-pipelines-for-a-project-does-not-disable-only-allow-merge-requests-to-be-merged-if-the-pipeline-succeeds.yml
@@ -0,0 +1,6 @@
+---
+title: Allow merging if "only merge when pipeline succeeds" is enabled but the pipelines
+  feature is disabled
+merge_request: 18437
+author:
+type: changed
diff --git a/spec/features/projects/settings/user_manages_merge_requests_settings_spec.rb b/spec/features/projects/settings/user_manages_merge_requests_settings_spec.rb
index b6e65fcbd..cb1e20f6f 100644
--- a/spec/features/projects/settings/user_manages_merge_requests_settings_spec.rb
+++ b/spec/features/projects/settings/user_manages_merge_requests_settings_spec.rb
@@ -42,26 +42,6 @@ describe 'Projects > Settings > User manages merge request settings' do
         expect(page).not_to have_content('Only allow merge requests to be merged if all discussions are resolved')
       end
     end
-
-    context 'when Pipelines are initially disabled', :js do
-      before do
-        project.project_feature.update_attribute('builds_access_level', ProjectFeature::DISABLED)
-        visit edit_project_path(project)
-      end
-
-      it 'shows the Merge Requests settings that do not depend on Builds feature' do
-        expect(page).not_to have_content('Only allow merge requests to be merged if the pipeline succeeds')
-        expect(page).to have_content('Only allow merge requests to be merged if all discussions are resolved')
-
-        within('.sharing-permissions-form') do
-          find('.project-feature-controls[data-for="project[project_feature_attributes][builds_access_level]"] .project-feature-toggle').click
-          find('input[value="Save changes"]').send_keys(:return)
-        end
-
-        expect(page).to have_content('Only allow merge requests to be merged if the pipeline succeeds')
-        expect(page).to have_content('Only allow merge requests to be merged if all discussions are resolved')
-      end
-    end
   end
 
   context 'when Merge Request are initially disabled', :js do
diff --git a/spec/fixtures/api/schemas/entities/merge_request_widget.json b/spec/fixtures/api/schemas/entities/merge_request_widget.json
index ee5588fa6..305777ccc 100644
--- a/spec/fixtures/api/schemas/entities/merge_request_widget.json
+++ b/spec/fixtures/api/schemas/entities/merge_request_widget.json
@@ -113,7 +113,8 @@
     "rebase_in_progress": { "type": "boolean" },
     "can_push_to_source_branch": { "type": "boolean" },
     "rebase_path": { "type": ["string", "null"] },
-    "squash": { "type": "boolean" }
+    "squash": { "type": "boolean" },
+    "builds_enabled": { "type": "boolean" }
   },
   "additionalProperties": false
 }
diff --git a/spec/javascripts/vue_mr_widget/components/states/mr_widget_ready_to_merge_spec.js b/spec/javascripts/vue_mr_widget/components/states/mr_widget_ready_to_merge_spec.js
index 81c16593e..fb624bb30 100644
--- a/spec/javascripts/vue_mr_widget/components/states/mr_widget_ready_to_merge_spec.js
+++ b/spec/javascripts/vue_mr_widget/components/states/mr_widget_ready_to_merge_spec.js
@@ -14,6 +14,7 @@ const createComponent = (customConfig = {}) => {
     isMergeAllowed: true,
     onlyAllowMergeIfPipelineSucceeds: false,
     hasCI: false,
+    buildsEnabled: true,
     ciStatus: null,
     sha: '12345678',
     commitMessage,
@@ -102,6 +103,7 @@ describe('ReadyToMerge', () => {
     describe('status', () => {
       it('defaults to success', () => {
         vm.mr.pipeline = true;
+        vm.mr.ciStatus = true;
         expect(vm.status).toEqual('success');
       });
 
@@ -111,12 +113,14 @@ describe('ReadyToMerge', () => {
       });
 
       it('returns default when MR has no pipeline', () => {
+        vm.mr.ciStatus = true;
         expect(vm.status).toEqual('success');
       });
 
       it('returns pending when pipeline is active', () => {
         vm.mr.pipeline = {};
         vm.mr.isPipelineActive = true;
+        vm.mr.ciStatus = 'pending';
         expect(vm.status).toEqual('pending');
       });
 
@@ -133,17 +137,20 @@ describe('ReadyToMerge', () => {
       const inActionClass = `${defaultClass} btn-info`;
 
       it('defaults to success class', () => {
+        vm.mr.ciStatus = true;
         expect(vm.mergeButtonClass).toEqual(defaultClass);
       });
 
       it('returns success class for success status', () => {
         vm.mr.pipeline = true;
+        vm.mr.ciStatus = true;
         expect(vm.mergeButtonClass).toEqual(defaultClass);
       });
 
       it('returns info class for pending status', () => {
         vm.mr.pipeline = {};
         vm.mr.isPipelineActive = true;
+        vm.mr.ciStatus = 'pending';
         expect(vm.mergeButtonClass).toEqual(inActionClass);
       });
 
@@ -155,17 +162,20 @@ describe('ReadyToMerge', () => {
 
     describe('status icon', () => {
       it('defaults to tick icon', () => {
+        vm.mr.ciStatus = true;
         expect(vm.iconClass).toEqual('success');
       });
 
       it('shows tick for success status', () => {
         vm.mr.pipeline = true;
+        vm.mr.ciStatus = true;
         expect(vm.iconClass).toEqual('success');
       });
 
       it('shows tick for pending status', () => {
         vm.mr.pipeline = {};
         vm.mr.isPipelineActive = true;
+        vm.mr.ciStatus = true;
         expect(vm.iconClass).toEqual('success');
       });
 
diff --git a/spec/javascripts/vue_mr_widget/mock_data.js b/spec/javascripts/vue_mr_widget/mock_data.js
index 9d2a15ff0..0ce9e2bf5 100644
--- a/spec/javascripts/vue_mr_widget/mock_data.js
+++ b/spec/javascripts/vue_mr_widget/mock_data.js
@@ -217,4 +217,5 @@ export default {
   only_allow_merge_if_pipeline_succeeds: false,
   commit_change_content_path: '/root/acets-app/merge_requests/22/commit_change_content',
   merge_commit_path: 'http://localhost:3000/root/acets-app/commit/53027d060246c8f47e4a9310fb332aa52f221775',
+  builds_enabled: true,
 };
diff --git a/spec/models/merge_request_spec.rb b/spec/models/merge_request_spec.rb
index 3f028b3bd..9d3a992d4 100644
--- a/spec/models/merge_request_spec.rb
+++ b/spec/models/merge_request_spec.rb
@@ -1508,6 +1508,26 @@ describe MergeRequest do
         it { expect(subject.mergeable_ci_state?).to be_truthy }
       end
     end
+
+    context 'when project does not have pipelines enabled' do
+      subject { build(:merge_request, target_project: build(:project, :builds_disabled)) }
+
+      context 'when merges are restricted to green builds' do
+        before do
+          subject.target_project.only_allow_merge_if_pipeline_succeeds = true
+        end
+
+        it { expect(subject.mergeable_ci_state?).to be_truthy }
+      end
+
+      context 'when merges are not restricted to green builds' do
+        before do
+          subject.target_project.only_allow_merge_if_pipeline_succeeds = false
+        end
+
+        it { expect(subject.mergeable_ci_state?).to be_truthy }
+      end
+    end
   end
 
   describe '#mergeable_discussions_state?' do
