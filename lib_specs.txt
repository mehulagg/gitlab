Run options: include {:focus=>true}

All examples were filtered out; ignoring {:focus=>true}

==> Setting up Gitaly...
Checking gitaly-ruby Gemfile...
Checking gitaly-ruby bundle...
The Gemfile's dependencies are satisfied
Trying to connect to gitaly: ... OK
    Gitaly set up in 0.551175622 seconds...

==> Setting up GitLab Elasticsearch Indexer...
    GitLab Elasticsearch Indexer set up in 8.065e-05 seconds...
he application_settings table has 1232 columns.
Recreating the database
Dropped database 'gitlabhq_test'
Created database 'gitlabhq_test'
-- enable_extension("pg_trgm")
   -> 0.0172s
-- enable_extension("plpgsql")
   -> 0.0044s
-- create_table("abuse_reports", {:id=>:serial, :force=>:cascade})
   -> 0.0236s
-- create_table("alerts_service_data", {:force=>:cascade})
   -> 0.0210s
-- create_table("allowed_email_domains", {:force=>:cascade})
   -> 0.0162s
-- create_table("analytics_cycle_analytics_group_stages", {:force=>:cascade})
   -> 0.0513s
-- create_table("analytics_cycle_analytics_project_stages", {:force=>:cascade})
   -> 0.0527s
-- create_table("analytics_language_trend_repository_languages", {:id=>false, :force=>:cascade})
   -> 0.0245s
-- create_table("analytics_repository_file_commits", {:force=>:cascade})
   -> 0.0248s
-- create_table("analytics_repository_file_edits", {:force=>:cascade})
   -> 0.0258s
-- create_table("analytics_repository_files", {:force=>:cascade})
   -> 0.0202s
-- create_table("appearances", {:id=>:serial, :force=>:cascade})
   -> 0.0137s
-- create_table("application_setting_terms", {:id=>:serial, :force=>:cascade})
   -> 0.0137s
-- create_table("application_settings", {:id=>:serial, :force=>:cascade})
   -> 0.1327s
-- create_table("approval_merge_request_rule_sources", {:force=>:cascade})
   -> 0.0224s
-- create_table("approval_merge_request_rules", {:force=>:cascade})
   -> 0.0550s
-- create_table("approval_merge_request_rules_approved_approvers", {:force=>:cascade})
   -> 0.0142s
-- create_table("approval_merge_request_rules_groups", {:force=>:cascade})
   -> 0.0115s
-- create_table("approval_merge_request_rules_users", {:force=>:cascade})
   -> 0.0118s
-- create_table("approval_project_rules", {:force=>:cascade})
   -> 0.0198s
-- create_table("approval_project_rules_groups", {:force=>:cascade})
   -> 0.0247s
-- create_table("approval_project_rules_users", {:force=>:cascade})
   -> 0.0241s
-- create_table("approvals", {:id=>:serial, :force=>:cascade})
   -> 0.0252s
-- create_table("approver_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0250s
-- create_table("approvers", {:id=>:serial, :force=>:cascade})
   -> 0.0152s
-- create_table("audit_events", {:id=>:serial, :force=>:cascade})
   -> 0.0296s
-- create_table("award_emoji", {:id=>:serial, :force=>:cascade})
   -> 0.0296s
-- create_table("aws_roles", {:primary_key=>"user_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0270s
-- create_table("badges", {:id=>:serial, :force=>:cascade})
   -> 0.0210s
-- create_table("board_assignees", {:id=>:serial, :force=>:cascade})
   -> 0.0218s
-- create_table("board_group_recent_visits", {:force=>:cascade})
   -> 0.0411s
-- create_table("board_labels", {:id=>:serial, :force=>:cascade})
   -> 0.0249s
-- create_table("board_project_recent_visits", {:force=>:cascade})
   -> 0.0273s
-- create_table("boards", {:id=>:serial, :force=>:cascade})
   -> 0.0243s
-- create_table("broadcast_messages", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("chat_names", {:id=>:serial, :force=>:cascade})
   -> 0.0193s
-- create_table("chat_teams", {:id=>:serial, :force=>:cascade})
   -> 0.0123s
-- create_table("ci_build_needs", {:id=>:serial, :force=>:cascade})
   -> 0.0141s
-- create_table("ci_build_trace_chunks", {:force=>:cascade})
   -> 0.0146s
-- create_table("ci_build_trace_section_names", {:id=>:serial, :force=>:cascade})
   -> 0.0140s
-- create_table("ci_build_trace_sections", {:id=>false, :force=>:cascade})
   -> 0.0177s
-- create_table("ci_builds", {:id=>:serial, :force=>:cascade})
   -> 0.2074s
-- create_table("ci_builds_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0402s
-- create_table("ci_builds_runner_session", {:force=>:cascade})
   -> 0.0102s
-- create_table("ci_group_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0110s
-- create_table("ci_job_artifacts", {:id=>:serial, :force=>:cascade})
   -> 0.0498s
-- create_table("ci_job_variables", {:force=>:cascade})
   -> 0.0197s
-- create_table("ci_pipeline_chat_data", {:force=>:cascade})
   -> 0.0163s
-- create_table("ci_pipeline_schedule_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0096s
-- create_table("ci_pipeline_schedules", {:id=>:serial, :force=>:cascade})
   -> 0.0189s
-- create_table("ci_pipeline_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("ci_pipelines", {:id=>:serial, :force=>:cascade})
   -> 0.0781s
-- create_table("ci_resource_groups", {:force=>:cascade})
   -> 0.0125s
-- create_table("ci_resources", {:force=>:cascade})
   -> 0.0247s
-- create_table("ci_runner_namespaces", {:id=>:serial, :force=>:cascade})
   -> 0.0245s
-- create_table("ci_runner_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0247s
-- create_table("ci_runners", {:id=>:serial, :force=>:cascade})
   -> 0.0671s
-- create_table("ci_sources_pipelines", {:id=>:serial, :force=>:cascade})
   -> 0.0485s
-- create_table("ci_stages", {:id=>:serial, :force=>:cascade})
   -> 0.0445s
-- create_table("ci_subscriptions_projects", {:force=>:cascade})
   -> 0.0245s
-- create_table("ci_trigger_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0249s
-- create_table("ci_triggers", {:id=>:serial, :force=>:cascade})
   -> 0.0272s
-- create_table("ci_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0325s
-- create_table("cluster_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0253s
-- create_table("cluster_platforms_kubernetes", {:id=>:serial, :force=>:cascade})
   -> 0.0200s
-- create_table("cluster_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0245s
-- create_table("cluster_providers_aws", {:force=>:cascade})
   -> 0.0381s
-- create_table("cluster_providers_gcp", {:id=>:serial, :force=>:cascade})
   -> 0.0334s
-- create_table("clusters", {:id=>:serial, :force=>:cascade})
   -> 0.0428s
-- create_table("clusters_applications_cert_managers", {:id=>:serial, :force=>:cascade})
   -> 0.0208s
-- create_table("clusters_applications_crossplane", {:id=>:serial, :force=>:cascade})
   -> 0.0207s
-- create_table("clusters_applications_elastic_stacks", {:force=>:cascade})
   -> 0.0210s
-- create_table("clusters_applications_helm", {:id=>:serial, :force=>:cascade})
   -> 0.0211s
-- create_table("clusters_applications_ingress", {:id=>:serial, :force=>:cascade})
   -> 0.0209s
-- create_table("clusters_applications_jupyter", {:id=>:serial, :force=>:cascade})
   -> 0.0208s
-- create_table("clusters_applications_knative", {:id=>:serial, :force=>:cascade})
   -> 0.0122s
-- create_table("clusters_applications_prometheus", {:id=>:serial, :force=>:cascade})
   -> 0.0111s
-- create_table("clusters_applications_runners", {:id=>:serial, :force=>:cascade})
   -> 0.0138s
-- create_table("clusters_kubernetes_namespaces", {:force=>:cascade})
   -> 0.0407s
-- create_table("commit_user_mentions", {:force=>:cascade})
   -> 0.0255s
-- create_table("container_expiration_policies", {:primary_key=>"project_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0147s
-- create_table("container_repositories", {:id=>:serial, :force=>:cascade})
   -> 0.0249s
-- create_table("conversational_development_index_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0155s
-- create_table("dependency_proxy_blobs", {:id=>:serial, :force=>:cascade})
   -> 0.0178s
-- create_table("dependency_proxy_group_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0151s
-- create_table("deploy_keys_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0220s
-- create_table("deploy_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0274s
-- create_table("deployment_merge_requests", {:id=>false, :force=>:cascade})
   -> 0.0105s
-- create_table("deployments", {:id=>:serial, :force=>:cascade})
   -> 0.0559s
-- create_table("description_versions", {:force=>:cascade})
   -> 0.0165s
-- create_table("design_management_designs", {:force=>:cascade})
   -> 0.0134s
-- create_table("design_management_designs_versions", {:id=>false, :force=>:cascade})
   -> 0.0159s
-- create_table("design_management_versions", {:force=>:cascade})
   -> 0.0164s
-- create_table("design_user_mentions", {:force=>:cascade})
   -> 0.0134s
-- create_table("draft_notes", {:force=>:cascade})
   -> 0.0184s
-- create_table("elasticsearch_indexed_namespaces", {:id=>false, :force=>:cascade})
   -> 0.0056s
-- create_table("elasticsearch_indexed_projects", {:id=>false, :force=>:cascade})
   -> 0.0051s
-- create_table("emails", {:id=>:serial, :force=>:cascade})
   -> 0.0177s
-- create_table("environments", {:id=>:serial, :force=>:cascade})
   -> 0.0201s
-- create_table("epic_issues", {:id=>:serial, :force=>:cascade})
   -> 0.0165s
-- create_table("epic_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0154s
-- create_table("epic_user_mentions", {:force=>:cascade})
   -> 0.0235s
-- create_table("epics", {:id=>:serial, :force=>:cascade})
   -> 0.0603s
-- create_table("events", {:id=>:serial, :force=>:cascade})
   -> 0.0495s
-- create_table("evidences", {:force=>:cascade})
   -> 0.0112s
-- create_table("external_pull_requests", {:force=>:cascade})
   -> 0.0110s
-- create_table("feature_gates", {:id=>:serial, :force=>:cascade})
   -> 0.0113s
-- create_table("features", {:id=>:serial, :force=>:cascade})
   -> 0.0093s
-- create_table("fork_network_members", {:id=>:serial, :force=>:cascade})
   -> 0.0150s
-- create_table("fork_networks", {:id=>:serial, :force=>:cascade})
   -> 0.0096s
-- create_table("forked_project_links", {:id=>:serial, :force=>:cascade})
   -> 0.0072s
-- create_table("geo_cache_invalidation_events", {:force=>:cascade})
   -> 0.0069s
-- create_table("geo_container_repository_updated_events", {:force=>:cascade})
   -> 0.0070s
-- create_table("geo_event_log", {:force=>:cascade})
   -> 0.0966s
-- create_table("geo_hashed_storage_attachments_events", {:force=>:cascade})
   -> 0.0197s
-- create_table("geo_hashed_storage_migrated_events", {:force=>:cascade})
   -> 0.0217s
-- create_table("geo_job_artifact_deleted_events", {:force=>:cascade})
   -> 0.0212s
-- create_table("geo_lfs_object_deleted_events", {:force=>:cascade})
   -> 0.0137s
-- create_table("geo_node_namespace_links", {:id=>:serial, :force=>:cascade})
   -> 0.0180s
-- create_table("geo_node_statuses", {:id=>:serial, :force=>:cascade})
   -> 0.0122s
-- create_table("geo_nodes", {:id=>:serial, :force=>:cascade})
   -> 0.0276s
-- create_table("geo_repositories_changed_events", {:force=>:cascade})
   -> 0.0124s
-- create_table("geo_repository_created_events", {:force=>:cascade})
   -> 0.0216s
-- create_table("geo_repository_deleted_events", {:force=>:cascade})
   -> 0.0199s
-- create_table("geo_repository_renamed_events", {:force=>:cascade})
   -> 0.0206s
-- create_table("geo_repository_updated_events", {:force=>:cascade})
   -> 0.0305s
-- create_table("geo_reset_checksum_events", {:force=>:cascade})
   -> 0.0171s
-- create_table("geo_upload_deleted_events", {:force=>:cascade})
   -> 0.0192s
-- create_table("gitlab_subscription_histories", {:force=>:cascade})
   -> 0.0176s
-- create_table("gitlab_subscriptions", {:force=>:cascade})
   -> 0.0284s
-- create_table("gpg_key_subkeys", {:id=>:serial, :force=>:cascade})
   -> 0.0363s
-- create_table("gpg_keys", {:id=>:serial, :force=>:cascade})
   -> 0.0375s
-- create_table("gpg_signatures", {:id=>:serial, :force=>:cascade})
   -> 0.0369s
-- create_table("grafana_integrations", {:force=>:cascade})
   -> 0.0150s
-- create_table("group_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0141s
-- create_table("group_deletion_schedules", {:primary_key=>"group_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0122s
-- create_table("group_group_links", {:force=>:cascade})
   -> 0.0134s
-- create_table("historical_data", {:id=>:serial, :force=>:cascade})
   -> 0.0048s
-- create_table("identities", {:id=>:serial, :force=>:cascade})
   -> 0.0385s
-- create_table("import_export_uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0351s
-- create_table("import_failures", {:force=>:cascade})
   -> 0.0252s
-- create_table("index_statuses", {:id=>:serial, :force=>:cascade})
   -> 0.0187s
-- create_table("insights", {:id=>:serial, :force=>:cascade})
   -> 0.0256s
-- create_table("internal_ids", {:force=>:cascade})
   -> 0.0418s
-- create_table("ip_restrictions", {:force=>:cascade})
   -> 0.0180s
-- create_table("issue_assignees", {:id=>false, :force=>:cascade})
   -> 0.0112s
-- create_table("issue_links", {:id=>:serial, :force=>:cascade})
   -> 0.0187s
-- create_table("issue_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0139s
-- create_table("issue_tracker_data", {:force=>:cascade})
   -> 0.0141s
-- create_table("issue_user_mentions", {:force=>:cascade})
   -> 0.0362s
-- create_table("issues", {:id=>:serial, :force=>:cascade})
   -> 0.1137s
-- create_table("issues_prometheus_alert_events", {:id=>false, :force=>:cascade})
   -> 0.0094s
-- create_table("issues_self_managed_prometheus_alert_events", {:id=>false, :force=>:cascade})
   -> 0.0098s
-- create_table("jira_connect_installations", {:force=>:cascade})
   -> 0.0126s
-- create_table("jira_connect_subscriptions", {:force=>:cascade})
   -> 0.0280s
-- create_table("jira_tracker_data", {:force=>:cascade})
   -> 0.0215s
-- create_table("keys", {:id=>:serial, :force=>:cascade})
   -> 0.0542s
-- create_table("label_links", {:id=>:serial, :force=>:cascade})
   -> 0.0288s
-- create_table("label_priorities", {:id=>:serial, :force=>:cascade})
   -> 0.0331s
-- create_table("labels", {:id=>:serial, :force=>:cascade})
   -> 0.0565s
-- create_table("ldap_group_links", {:id=>:serial, :force=>:cascade})
   -> 0.0129s
-- create_table("lfs_file_locks", {:id=>:serial, :force=>:cascade})
   -> 0.0278s
-- create_table("lfs_objects", {:id=>:serial, :force=>:cascade})
   -> 0.0284s
-- create_table("lfs_objects_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0242s
-- create_table("licenses", {:id=>:serial, :force=>:cascade})
   -> 0.0129s
-- create_table("list_user_preferences", {:force=>:cascade})
   -> 0.0338s
-- create_table("lists", {:id=>:serial, :force=>:cascade})
   -> 0.0525s
-- create_table("members", {:id=>:serial, :force=>:cascade})
   -> 0.0425s
-- create_table("merge_request_assignees", {:force=>:cascade})
   -> 0.0162s
-- create_table("merge_request_blocks", {:force=>:cascade})
   -> 0.0257s
-- create_table("merge_request_diff_commits", {:id=>false, :force=>:cascade})
   -> 0.0244s
-- create_table("merge_request_diff_files", {:id=>false, :force=>:cascade})
   -> 0.0167s
-- create_table("merge_request_diffs", {:id=>:serial, :force=>:cascade})
   -> 0.0294s
-- create_table("merge_request_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0673s
-- create_table("merge_request_user_mentions", {:force=>:cascade})
   -> 0.0327s
-- create_table("merge_requests", {:id=>:serial, :force=>:cascade})
   -> 0.1486s
-- create_table("merge_requests_closing_issues", {:id=>:serial, :force=>:cascade})
   -> 0.0109s
-- create_table("merge_trains", {:force=>:cascade})
   -> 0.0272s
-- create_table("milestone_releases", {:id=>false, :force=>:cascade})
   -> 0.0137s
-- create_table("milestones", {:id=>:serial, :force=>:cascade})
   -> 0.0490s
-- create_table("namespace_aggregation_schedules", {:primary_key=>"namespace_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0142s
-- create_table("namespace_root_storage_statistics", {:primary_key=>"namespace_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0198s
-- create_table("namespace_statistics", {:id=>:serial, :force=>:cascade})
   -> 0.0174s
-- create_table("namespaces", {:id=>:serial, :force=>:cascade})
   -> 0.1638s
-- create_table("note_diff_files", {:id=>:serial, :force=>:cascade})
   -> 0.0207s
-- create_table("notes", {:id=>:serial, :force=>:cascade})
   -> 0.0932s
-- create_table("notification_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0372s
-- create_table("oauth_access_grants", {:id=>:serial, :force=>:cascade})
   -> 0.0188s
-- create_table("oauth_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0447s
-- create_table("oauth_applications", {:id=>:serial, :force=>:cascade})
   -> 0.0245s
-- create_table("oauth_openid_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0201s
-- create_table("operations_feature_flag_scopes", {:force=>:cascade})
   -> 0.0217s
-- create_table("operations_feature_flags", {:force=>:cascade})
   -> 0.0208s
-- create_table("operations_feature_flags_clients", {:force=>:cascade})
   -> 0.0214s
-- create_table("packages_build_infos", {:force=>:cascade})
   -> 0.0244s
-- create_table("packages_conan_file_metadata", {:force=>:cascade})
   -> 0.0222s
-- create_table("packages_conan_metadata", {:force=>:cascade})
   -> 0.0198s
-- create_table("packages_dependencies", {:force=>:cascade})
   -> 0.0204s
-- create_table("packages_dependency_links", {:force=>:cascade})
   -> 0.0259s
-- create_table("packages_maven_metadata", {:force=>:cascade})
   -> 0.0188s
-- create_table("packages_package_files", {:force=>:cascade})
   -> 0.0176s
-- create_table("packages_package_tags", {:force=>:cascade})
   -> 0.0164s
-- create_table("packages_packages", {:force=>:cascade})
   -> 0.0329s
-- create_table("pages_domain_acme_orders", {:force=>:cascade})
   -> 0.0174s
-- create_table("pages_domains", {:id=>:serial, :force=>:cascade})
   -> 0.0615s
-- create_table("path_locks", {:id=>:serial, :force=>:cascade})
   -> 0.0368s
-- create_table("personal_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0426s
-- create_table("plan_limits", {:force=>:cascade})
   -> 0.0180s
-- create_table("plans", {:id=>:serial, :force=>:cascade})
   -> 0.0129s
-- create_table("pool_repositories", {:force=>:cascade})
   -> 0.0182s
-- create_table("programming_languages", {:id=>:serial, :force=>:cascade})
   -> 0.0090s
-- create_table("project_alerting_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0065s
-- create_table("project_aliases", {:force=>:cascade})
   -> 0.0238s
-- create_table("project_authorizations", {:id=>false, :force=>:cascade})
   -> 0.0103s
-- create_table("project_auto_devops", {:id=>:serial, :force=>:cascade})
   -> 0.0151s
-- create_table("project_ci_cd_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0190s
-- create_table("project_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0297s
-- create_table("project_daily_statistics", {:force=>:cascade})
   -> 0.0120s
-- create_table("project_deploy_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("project_error_tracking_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0069s
-- create_table("project_feature_usages", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0240s
-- create_table("project_features", {:id=>:serial, :force=>:cascade})
   -> 0.0183s
-- create_table("project_group_links", {:id=>:serial, :force=>:cascade})
   -> 0.0264s
-- create_table("project_import_data", {:id=>:serial, :force=>:cascade})
   -> 0.0207s
-- create_table("project_incident_management_settings", {:primary_key=>"project_id", :id=>:serial, :force=>:cascade})
   -> 0.0132s
-- create_table("project_metrics_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0108s
-- create_table("project_mirror_data", {:id=>:serial, :force=>:cascade})
   -> 0.0628s
-- create_table("project_pages_metadata", {:id=>false, :force=>:cascade})
   -> 0.0210s
-- create_table("project_repositories", {:force=>:cascade})
   -> 0.0374s
-- create_table("project_repository_states", {:id=>:serial, :force=>:cascade})
   -> 0.0623s
-- create_table("project_statistics", {:id=>:serial, :force=>:cascade})
   -> 0.0326s
-- create_table("project_tracing_settings", {:force=>:cascade})
   -> 0.0202s
-- create_table("projects", {:id=>:serial, :force=>:cascade})
   -> 0.2266s
-- create_table("prometheus_alert_events", {:force=>:cascade})
   -> 0.0293s
-- create_table("prometheus_alerts", {:id=>:serial, :force=>:cascade})
   -> 0.0328s
-- create_table("prometheus_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0478s
-- create_table("protected_branch_merge_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0337s
-- create_table("protected_branch_push_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0339s
-- create_table("protected_branch_unprotect_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0328s
-- create_table("protected_branches", {:id=>:serial, :force=>:cascade})
   -> 0.0317s
-- create_table("protected_environment_deploy_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0239s
-- create_table("protected_environments", {:id=>:serial, :force=>:cascade})
   -> 0.0157s
-- create_table("protected_tag_create_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0173s
-- create_table("protected_tags", {:id=>:serial, :force=>:cascade})
   -> 0.0152s
-- create_table("push_event_payloads", {:id=>false, :force=>:cascade})
   -> 0.0141s
-- create_table("push_rules", {:id=>:serial, :force=>:cascade})
   -> 0.0334s
-- create_table("redirect_routes", {:id=>:serial, :force=>:cascade})
   -> 0.0379s
-- create_table("release_links", {:force=>:cascade})
   -> 0.0294s
-- create_table("releases", {:id=>:serial, :force=>:cascade})
   -> 0.0302s
-- create_table("remote_mirrors", {:id=>:serial, :force=>:cascade})
   -> 0.0313s
-- create_table("repository_languages", {:id=>false, :force=>:cascade})
   -> 0.0124s
-- create_table("resource_label_events", {:force=>:cascade})
   -> 0.0549s
-- create_table("reviews", {:force=>:cascade})
   -> 0.0250s
-- create_table("routes", {:id=>:serial, :force=>:cascade})
   -> 0.0204s
-- create_table("saml_providers", {:id=>:serial, :force=>:cascade})
   -> 0.0114s
-- create_table("scim_oauth_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0104s
-- create_table("self_managed_prometheus_alert_events", {:force=>:cascade})
   -> 0.0137s
-- create_table("sent_notifications", {:id=>:serial, :force=>:cascade})
   -> 0.0100s
-- create_table("sentry_issues", {:force=>:cascade})
   -> 0.0068s
-- create_table("serverless_domain_cluster", {:primary_key=>"uuid", :id=>:string, :limit=>14, :force=>:cascade})
   -> 0.0140s
-- create_table("service_desk_settings", {:primary_key=>"project_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0062s
-- create_table("services", {:id=>:serial, :force=>:cascade})
   -> 0.0245s
-- create_table("shards", {:id=>:serial, :force=>:cascade})
   -> 0.0104s
-- create_table("slack_integrations", {:id=>:serial, :force=>:cascade})
   -> 0.0137s
-- create_table("smartcard_identities", {:force=>:cascade})
   -> 0.0125s
-- create_table("snippet_user_mentions", {:force=>:cascade})
   -> 0.0165s
-- create_table("snippets", {:id=>:serial, :force=>:cascade})
   -> 0.0320s
-- create_table("software_license_policies", {:id=>:serial, :force=>:cascade})
   -> 0.0122s
-- create_table("software_licenses", {:id=>:serial, :force=>:cascade})
   -> 0.0148s
-- create_table("spam_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0065s
-- create_table("subscriptions", {:id=>:serial, :force=>:cascade})
   -> 0.0142s
-- create_table("suggestions", {:force=>:cascade})
   -> 0.0106s
-- create_table("system_note_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0189s
-- create_table("taggings", {:id=>:serial, :force=>:cascade})
   -> 0.0460s
-- create_table("tags", {:id=>:serial, :force=>:cascade})
   -> 0.0277s
-- create_table("term_agreements", {:id=>:serial, :force=>:cascade})
   -> 0.0222s
-- create_table("timelogs", {:id=>:serial, :force=>:cascade})
   -> 0.0197s
-- create_table("todos", {:id=>:serial, :force=>:cascade})
   -> 0.0811s
-- create_table("trending_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0142s
-- create_table("u2f_registrations", {:id=>:serial, :force=>:cascade})
   -> 0.0248s
-- create_table("uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0386s
-- create_table("user_agent_details", {:id=>:serial, :force=>:cascade})
   -> 0.0187s
-- create_table("user_callouts", {:id=>:serial, :force=>:cascade})
   -> 0.0246s
-- create_table("user_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0283s
-- create_table("user_interacted_projects", {:id=>false, :force=>:cascade})
   -> 0.0209s
-- create_table("user_preferences", {:id=>:serial, :force=>:cascade})
   -> 0.0271s
-- create_table("user_statuses", {:primary_key=>"user_id", :id=>:serial, :force=>:cascade})
   -> 0.0180s
-- create_table("user_synced_attributes_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0166s
-- create_table("users", {:id=>:serial, :force=>:cascade})
   -> 0.1405s
-- create_table("users_ops_dashboard_projects", {:force=>:cascade})
   -> 0.0247s
-- create_table("users_security_dashboard_projects", {:id=>false, :force=>:cascade})
   -> 0.0207s
-- create_table("users_star_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0262s
-- create_table("vulnerabilities", {:force=>:cascade})
   -> 0.0967s
-- create_table("vulnerability_feedback", {:id=>:serial, :force=>:cascade})
   -> 0.0432s
-- create_table("vulnerability_identifiers", {:force=>:cascade})
   -> 0.0198s
-- create_table("vulnerability_issue_links", {:force=>:cascade})
   -> 0.0360s
-- create_table("vulnerability_occurrence_identifiers", {:force=>:cascade})
   -> 0.0239s
-- create_table("vulnerability_occurrence_pipelines", {:force=>:cascade})
   -> 0.0253s
-- create_table("vulnerability_occurrences", {:force=>:cascade})
   -> 0.0548s
-- create_table("vulnerability_scanners", {:force=>:cascade})
   -> 0.0207s
-- create_table("web_hook_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0287s
-- create_table("web_hooks", {:id=>:serial, :force=>:cascade})
   -> 0.0393s
-- create_table("zoom_meetings", {:force=>:cascade})
   -> 0.0425s
-- add_foreign_key("alerts_service_data", "services", {:on_delete=>:cascade})
   -> 0.0058s
-- add_foreign_key("allowed_email_domains", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0061s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "labels", {:column=>"end_event_label_id", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "labels", {:column=>"start_event_label_id", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "labels", {:column=>"end_event_label_id", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "labels", {:column=>"start_event_label_id", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "projects", {:on_delete=>:cascade})
   -> 0.0078s
-- add_foreign_key("analytics_language_trend_repository_languages", "programming_languages", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("analytics_language_trend_repository_languages", "projects", {:on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("analytics_repository_file_commits", "analytics_repository_files", {:on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("analytics_repository_file_commits", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("analytics_repository_file_edits", "analytics_repository_files", {:on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("analytics_repository_file_edits", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("analytics_repository_files", "projects", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("application_settings", "namespaces", {:column=>"custom_project_templates_group_id", :on_delete=>:nullify})
   -> 0.0081s
-- add_foreign_key("application_settings", "projects", {:column=>"file_template_project_id", :name=>"fk_ec757bd087", :on_delete=>:nullify})
   -> 0.0058s
-- add_foreign_key("application_settings", "projects", {:column=>"instance_administration_project_id", :on_delete=>:nullify})
   -> 0.0044s
-- add_foreign_key("application_settings", "users", {:column=>"usage_stats_set_by_user_id", :name=>"fk_964370041d", :on_delete=>:nullify})
   -> 0.0046s
-- add_foreign_key("approval_merge_request_rule_sources", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("approval_merge_request_rule_sources", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("approval_merge_request_rules", "merge_requests", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("approval_merge_request_rules_approved_approvers", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("approval_merge_request_rules_approved_approvers", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approval_merge_request_rules_groups", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("approval_merge_request_rules_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("approval_merge_request_rules_users", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("approval_merge_request_rules_users", "users", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_project_rules", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approval_project_rules_groups", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_project_rules_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_project_rules_users", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("approval_project_rules_users", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approvals", "merge_requests", {:name=>"fk_310d714958", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approver_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("aws_roles", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("badges", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("badges", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("board_assignees", "boards", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("board_assignees", "users", {:column=>"assignee_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("board_group_recent_visits", "boards", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("board_group_recent_visits", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("board_group_recent_visits", "users", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("board_labels", "boards", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("board_labels", "labels", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("board_project_recent_visits", "boards", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("board_project_recent_visits", "projects", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("board_project_recent_visits", "users", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("boards", "namespaces", {:column=>"group_id", :name=>"fk_1e9a074a35", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("boards", "projects", {:name=>"fk_f15266b5f9", :on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("chat_teams", "namespaces", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("ci_build_needs", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0075s
-- add_foreign_key("ci_build_trace_chunks", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("ci_build_trace_section_names", "projects", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("ci_build_trace_sections", "ci_build_trace_section_names", {:column=>"section_name_id", :name=>"fk_264e112c66", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("ci_build_trace_sections", "ci_builds", {:column=>"build_id", :name=>"fk_4ebe41f502", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("ci_build_trace_sections", "projects", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"auto_canceled_by_id", :name=>"fk_a2141b1522", :on_delete=>:nullify})
   -> 0.0060s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"commit_id", :name=>"fk_d3130c9a7f", :on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"upstream_pipeline_id", :name=>"fk_87f4cefcda", :on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("ci_builds", "ci_resource_groups", {:column=>"resource_group_id", :name=>"fk_6661f4f0e8", :on_delete=>:nullify})
   -> 0.0042s
-- add_foreign_key("ci_builds", "ci_stages", {:column=>"stage_id", :name=>"fk_3a9eaa254d", :on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("ci_builds", "projects", {:name=>"fk_befce0568a", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("ci_builds_metadata", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0037s
-- add_foreign_key("ci_builds_metadata", "projects", {:on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("ci_builds_runner_session", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("ci_group_variables", "namespaces", {:column=>"group_id", :name=>"fk_33ae4d58d8", :on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("ci_job_artifacts", "ci_builds", {:column=>"job_id", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("ci_job_artifacts", "projects", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("ci_job_variables", "ci_builds", {:column=>"job_id", :on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("ci_pipeline_chat_data", "chat_names", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("ci_pipeline_chat_data", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_pipeline_schedule_variables", "ci_pipeline_schedules", {:column=>"pipeline_schedule_id", :name=>"fk_41c35fda51", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_pipeline_schedules", "projects", {:name=>"fk_8ead60fcc4", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_pipeline_schedules", "users", {:column=>"owner_id", :name=>"fk_9ea99f58d2", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("ci_pipeline_variables", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_f29c5f4380", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("ci_pipelines", "ci_pipeline_schedules", {:column=>"pipeline_schedule_id", :name=>"fk_3d34ab2e06", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("ci_pipelines", "ci_pipelines", {:column=>"auto_canceled_by_id", :name=>"fk_262d4c2d19", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("ci_pipelines", "external_pull_requests", {:name=>"fk_190998ef09", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("ci_pipelines", "merge_requests", {:name=>"fk_a23be95014", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("ci_pipelines", "projects", {:name=>"fk_86635dbd80", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("ci_resource_groups", "projects", {:name=>"fk_774722d144", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("ci_resources", "ci_builds", {:column=>"build_id", :name=>"fk_e169a8e3d5", :on_delete=>:nullify})
   -> 0.0028s
-- add_foreign_key("ci_resources", "ci_resource_groups", {:column=>"resource_group_id", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("ci_runner_namespaces", "ci_runners", {:column=>"runner_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("ci_runner_namespaces", "namespaces", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("ci_runner_projects", "projects", {:name=>"fk_4478a6f1e4", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("ci_sources_pipelines", "ci_builds", {:column=>"source_job_id", :name=>"fk_be5624bf37", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("ci_sources_pipelines", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_e1bad85861", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("ci_sources_pipelines", "ci_pipelines", {:column=>"source_pipeline_id", :name=>"fk_d4e29af7d7", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("ci_sources_pipelines", "projects", {:column=>"source_project_id", :name=>"fk_acd9737679", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("ci_sources_pipelines", "projects", {:name=>"fk_1e53c97c0a", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("ci_stages", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_fb57e6cc56", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("ci_stages", "projects", {:name=>"fk_2360681d1d", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("ci_subscriptions_projects", "projects", {:column=>"downstream_project_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("ci_subscriptions_projects", "projects", {:column=>"upstream_project_id", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("ci_trigger_requests", "ci_triggers", {:column=>"trigger_id", :name=>"fk_b8ec8b7245", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("ci_triggers", "projects", {:name=>"fk_e3e63f966e", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("ci_triggers", "users", {:column=>"owner_id", :name=>"fk_e8e10d1964", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("ci_variables", "projects", {:name=>"fk_ada5eb64b3", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("cluster_groups", "clusters", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("cluster_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("cluster_platforms_kubernetes", "clusters", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("cluster_projects", "clusters", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("cluster_projects", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("cluster_providers_aws", "clusters", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("cluster_providers_aws", "users", {:column=>"created_by_user_id", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("cluster_providers_gcp", "clusters", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("clusters", "projects", {:column=>"management_project_id", :name=>"fk_f05c5e5a42", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("clusters", "users", {:on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("clusters_applications_cert_managers", "clusters", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("clusters_applications_crossplane", "clusters", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("clusters_applications_elastic_stacks", "clusters", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("clusters_applications_helm", "clusters", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("clusters_applications_ingress", "clusters", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("clusters_applications_jupyter", "clusters", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("clusters_applications_jupyter", "oauth_applications", {:on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("clusters_applications_knative", "clusters", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("clusters_applications_prometheus", "clusters", {:name=>"fk_557e773639", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("clusters_applications_runners", "ci_runners", {:column=>"runner_id", :name=>"fk_02de2ded36", :on_delete=>:nullify})
   -> 0.0014s
-- add_foreign_key("clusters_applications_runners", "clusters", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("clusters_kubernetes_namespaces", "cluster_projects", {:on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("clusters_kubernetes_namespaces", "clusters", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("clusters_kubernetes_namespaces", "environments", {:on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("clusters_kubernetes_namespaces", "projects", {:on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("commit_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("container_expiration_policies", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("container_repositories", "projects")
   -> 0.0017s
-- add_foreign_key("dependency_proxy_blobs", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("dependency_proxy_group_settings", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("deploy_keys_projects", "projects", {:name=>"fk_58a901ca7e", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("deployment_merge_requests", "deployments", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("deployment_merge_requests", "merge_requests", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("deployments", "clusters", {:name=>"fk_289bba3222", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("deployments", "projects", {:name=>"fk_b9a3851b82", :on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("description_versions", "epics", {:on_delete=>:cascade})
   -> 0.0066s
-- add_foreign_key("description_versions", "issues", {:on_delete=>:cascade})
   -> 0.0065s
-- add_foreign_key("description_versions", "merge_requests", {:on_delete=>:cascade})
   -> 0.0066s
-- add_foreign_key("design_management_designs", "issues", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("design_management_designs", "projects", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("design_management_designs_versions", "design_management_designs", {:column=>"design_id", :name=>"fk_03c671965c", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("design_management_designs_versions", "design_management_versions", {:column=>"version_id", :name=>"fk_f4d25ba00c", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("design_management_versions", "issues", {:on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("design_management_versions", "users", {:column=>"author_id", :name=>"fk_c1440b4896", :on_delete=>:nullify})
   -> 0.0050s
-- add_foreign_key("design_user_mentions", "design_management_designs", {:column=>"design_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("design_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("draft_notes", "merge_requests", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("draft_notes", "users", {:column=>"author_id", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("elasticsearch_indexed_namespaces", "namespaces", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("elasticsearch_indexed_projects", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("environments", "projects", {:name=>"fk_d1c8c1da6a", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("epic_issues", "epics", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("epic_issues", "issues", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("epic_metrics", "epics", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("epic_user_mentions", "epics", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("epic_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("epics", "epics", {:column=>"due_date_sourcing_epic_id", :name=>"fk_013c9f36ca", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("epics", "epics", {:column=>"parent_id", :name=>"fk_25b99c1be3", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("epics", "epics", {:column=>"start_date_sourcing_epic_id", :name=>"fk_9d480c64b2", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("epics", "milestones", {:on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("epics", "namespaces", {:column=>"group_id", :name=>"fk_f081aa4489", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("epics", "users", {:column=>"assignee_id", :name=>"fk_dccd3f98fc", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("epics", "users", {:column=>"author_id", :name=>"fk_3654b61b03", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("epics", "users", {:column=>"closed_by_id", :name=>"fk_aa5798e761", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("events", "namespaces", {:column=>"group_id", :name=>"fk_61fbf6ca48", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("events", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("events", "users", {:column=>"author_id", :name=>"fk_edfd187b6f", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("evidences", "releases", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("external_pull_requests", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("fork_network_members", "fork_networks", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("fork_network_members", "projects", {:column=>"forked_from_project_id", :name=>"fk_b01280dae4", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("fork_network_members", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("fork_networks", "projects", {:column=>"root_project_id", :name=>"fk_e7b436b2b5", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("forked_project_links", "projects", {:column=>"forked_to_project_id", :name=>"fk_434510edb0", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("geo_container_repository_updated_events", "container_repositories", {:name=>"fk_212c89c706", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_cache_invalidation_events", {:column=>"cache_invalidation_event_id", :name=>"fk_42c3b54bed", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("geo_event_log", "geo_container_repository_updated_events", {:column=>"container_repository_updated_event_id", :name=>"fk_6ada82d42a", :on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("geo_event_log", "geo_hashed_storage_migrated_events", {:column=>"hashed_storage_migrated_event_id", :name=>"fk_27548c6db3", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_job_artifact_deleted_events", {:column=>"job_artifact_deleted_event_id", :name=>"fk_176d3fbb5d", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("geo_event_log", "geo_lfs_object_deleted_events", {:column=>"lfs_object_deleted_event_id", :name=>"fk_d5af95fcd9", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_repositories_changed_events", {:column=>"repositories_changed_event_id", :name=>"fk_4a99ebfd60", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("geo_event_log", "geo_repository_created_events", {:column=>"repository_created_event_id", :name=>"fk_9b9afb1916", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_repository_deleted_events", {:column=>"repository_deleted_event_id", :name=>"fk_c4b1c1f66e", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_repository_renamed_events", {:column=>"repository_renamed_event_id", :name=>"fk_86c84214ec", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_repository_updated_events", {:column=>"repository_updated_event_id", :name=>"fk_78a6492f68", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("geo_event_log", "geo_reset_checksum_events", {:column=>"reset_checksum_event_id", :name=>"fk_cff7185ad2", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("geo_event_log", "geo_upload_deleted_events", {:column=>"upload_deleted_event_id", :name=>"fk_c1f241c70d", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("geo_hashed_storage_attachments_events", "projects", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("geo_hashed_storage_migrated_events", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("geo_node_namespace_links", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("geo_node_namespace_links", "namespaces", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_node_statuses", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("geo_repositories_changed_events", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_repository_created_events", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("geo_repository_renamed_events", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("geo_repository_updated_events", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("geo_reset_checksum_events", "projects", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("gitlab_subscriptions", "namespaces", {:name=>"fk_e2595d00a1", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("gitlab_subscriptions", "plans", {:column=>"hosted_plan_id", :name=>"fk_bd0c4019c3", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("gpg_key_subkeys", "gpg_keys", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("gpg_keys", "users", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("gpg_signatures", "gpg_key_subkeys", {:on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("gpg_signatures", "gpg_keys", {:on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("gpg_signatures", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("grafana_integrations", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("group_custom_attributes", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("group_deletion_schedules", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("group_deletion_schedules", "users", {:name=>"fk_11e3ebfcdd", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("group_group_links", "namespaces", {:column=>"shared_group_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("group_group_links", "namespaces", {:column=>"shared_with_group_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("identities", "saml_providers", {:name=>"fk_aade90f0fc", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("import_export_uploads", "namespaces", {:column=>"group_id", :name=>"fk_83319d9721", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("import_export_uploads", "projects", {:on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("index_statuses", "projects", {:name=>"fk_74b2492545", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("insights", "namespaces", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("insights", "projects", {:on_delete=>:cascade})
   -> 0.0071s
-- add_foreign_key("internal_ids", "namespaces", {:name=>"fk_162941d509", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("internal_ids", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("ip_restrictions", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("issue_assignees", "issues", {:name=>"fk_b7d881734a", :on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("issue_assignees", "users", {:name=>"fk_5e0c8d9154", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("issue_links", "issues", {:column=>"source_id", :name=>"fk_c900194ff2", :on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("issue_links", "issues", {:column=>"target_id", :name=>"fk_e71bb44f1f", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("issue_metrics", "issues", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("issue_tracker_data", "services", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("issue_user_mentions", "issues", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("issue_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("issues", "epics", {:column=>"promoted_to_epic_id", :name=>"fk_df75a7c8b8", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("issues", "issues", {:column=>"duplicated_to_id", :name=>"fk_9c4516d665", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("issues", "issues", {:column=>"moved_to_id", :name=>"fk_a194299be1", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("issues", "milestones", {:name=>"fk_96b1dd429c", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("issues", "projects", {:name=>"fk_899c8f3231", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("issues", "users", {:column=>"author_id", :name=>"fk_05f1e72feb", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("issues", "users", {:column=>"closed_by_id", :name=>"fk_c63cbf6c25", :on_delete=>:nullify})
   -> 0.0032s
-- add_foreign_key("issues", "users", {:column=>"updated_by_id", :name=>"fk_ffed080f01", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("issues_prometheus_alert_events", "issues", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("issues_prometheus_alert_events", "prometheus_alert_events", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("issues_self_managed_prometheus_alert_events", "issues", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("issues_self_managed_prometheus_alert_events", "self_managed_prometheus_alert_events", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("jira_connect_subscriptions", "jira_connect_installations", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("jira_connect_subscriptions", "namespaces", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("jira_tracker_data", "services", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("label_links", "labels", {:name=>"fk_d97dd08678", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("label_priorities", "labels", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("label_priorities", "projects", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("labels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("labels", "projects", {:name=>"fk_7de4989a69", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("lfs_file_locks", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("lfs_file_locks", "users", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("list_user_preferences", "lists", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("list_user_preferences", "users", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("lists", "boards", {:name=>"fk_0d3f677137", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("lists", "labels", {:name=>"fk_7a5553d60f", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("lists", "milestones", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("lists", "users", {:name=>"fk_d6cf4279f7", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("members", "users", {:name=>"fk_2e88fb7ce9", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("merge_request_assignees", "merge_requests", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("merge_request_assignees", "users", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("merge_request_blocks", "merge_requests", {:column=>"blocked_merge_request_id", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("merge_request_blocks", "merge_requests", {:column=>"blocking_merge_request_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("merge_request_diff_commits", "merge_request_diffs", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("merge_request_diff_files", "merge_request_diffs", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("merge_request_diffs", "merge_requests", {:name=>"fk_8483f3258f", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("merge_request_metrics", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("merge_request_metrics", "merge_requests", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("merge_request_metrics", "users", {:column=>"latest_closed_by_id", :name=>"fk_ae440388cc", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("merge_request_metrics", "users", {:column=>"merged_by_id", :name=>"fk_7f28d925f3", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("merge_request_user_mentions", "merge_requests", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("merge_request_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("merge_requests", "ci_pipelines", {:column=>"head_pipeline_id", :name=>"fk_fd82eae0b9", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("merge_requests", "merge_request_diffs", {:column=>"latest_merge_request_diff_id", :name=>"fk_06067f5644", :on_delete=>:nullify})
   -> 0.0014s
-- add_foreign_key("merge_requests", "milestones", {:name=>"fk_6a5165a692", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("merge_requests", "projects", {:column=>"source_project_id", :name=>"fk_3308fe130c", :on_delete=>:nullify})
   -> 0.0027s
-- add_foreign_key("merge_requests", "projects", {:column=>"target_project_id", :name=>"fk_a6963e8447", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("merge_requests", "users", {:column=>"assignee_id", :name=>"fk_6149611a04", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("merge_requests", "users", {:column=>"author_id", :name=>"fk_e719a85f8a", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("merge_requests", "users", {:column=>"merge_user_id", :name=>"fk_ad525e1f87", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("merge_requests", "users", {:column=>"updated_by_id", :name=>"fk_641731faff", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("merge_requests_closing_issues", "issues", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("merge_requests_closing_issues", "merge_requests", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("merge_trains", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("merge_trains", "merge_requests", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("merge_trains", "projects", {:column=>"target_project_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("merge_trains", "users", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("milestone_releases", "milestones", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("milestone_releases", "releases", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("milestones", "namespaces", {:column=>"group_id", :name=>"fk_95650a40d4", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("milestones", "projects", {:name=>"fk_9bd0a0c791", :on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("namespace_aggregation_schedules", "namespaces", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("namespace_root_storage_statistics", "namespaces", {:on_delete=>:cascade})
   -> 0.0058s
-- add_foreign_key("namespace_statistics", "namespaces", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("namespaces", "namespaces", {:column=>"custom_project_templates_group_id", :name=>"fk_e7a0b20a6b", :on_delete=>:nullify})
   -> 0.0047s
-- add_foreign_key("namespaces", "plans", {:name=>"fk_fdd12e5b80", :on_delete=>:nullify})
   -> 0.0046s
-- add_foreign_key("namespaces", "projects", {:column=>"file_template_project_id", :name=>"fk_319256d87a", :on_delete=>:nullify})
   -> 0.0058s
-- add_foreign_key("note_diff_files", "notes", {:column=>"diff_note_id", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("notes", "projects", {:name=>"fk_99e097b079", :on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("notes", "reviews", {:name=>"fk_2e82291620", :on_delete=>:nullify})
   -> 0.0045s
-- add_foreign_key("notification_settings", "users", {:name=>"fk_0c95e91db7", :on_delete=>:cascade})
   -> 0.0056s
-- add_foreign_key("oauth_openid_requests", "oauth_access_grants", {:column=>"access_grant_id", :name=>"fk_77114b3b09", :on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("operations_feature_flag_scopes", "operations_feature_flags", {:column=>"feature_flag_id", :on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("operations_feature_flags", "projects", {:on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("operations_feature_flags_clients", "projects", {:on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("packages_build_infos", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0043s
-- add_foreign_key("packages_build_infos", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("packages_conan_file_metadata", "packages_package_files", {:column=>"package_file_id", :on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("packages_conan_metadata", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("packages_dependency_links", "packages_dependencies", {:column=>"dependency_id", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("packages_dependency_links", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("packages_maven_metadata", "packages_packages", {:column=>"package_id", :name=>"fk_be88aed360", :on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("packages_package_files", "packages_packages", {:column=>"package_id", :name=>"fk_86f0f182f8", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("packages_package_tags", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("packages_packages", "projects", {:on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("pages_domain_acme_orders", "pages_domains", {:on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("pages_domains", "projects", {:name=>"fk_ea2f6dfc6f", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("path_locks", "projects", {:name=>"fk_5265c98f24", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("path_locks", "users")
   -> 0.0038s
-- add_foreign_key("personal_access_tokens", "users")
   -> 0.0039s
-- add_foreign_key("plan_limits", "plans", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("pool_repositories", "projects", {:column=>"source_project_id", :on_delete=>:nullify})
   -> 0.0040s
-- add_foreign_key("pool_repositories", "shards", {:on_delete=>:restrict})
   -> 0.0034s
-- add_foreign_key("project_alerting_settings", "projects", {:on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("project_aliases", "projects", {:on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("project_authorizations", "projects", {:on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("project_authorizations", "users", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("project_auto_devops", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("project_ci_cd_settings", "projects", {:name=>"fk_24c15d2f2e", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("project_custom_attributes", "projects", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("project_daily_statistics", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("project_deploy_tokens", "deploy_tokens", {:on_delete=>:cascade})
   -> 0.0037s
-- add_foreign_key("project_deploy_tokens", "projects", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("project_error_tracking_settings", "projects", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("project_feature_usages", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("project_features", "projects", {:name=>"fk_18513d9b92", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("project_group_links", "projects", {:name=>"fk_daa8cee94c", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("project_import_data", "projects", {:name=>"fk_ffb9ee3a10", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("project_incident_management_settings", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("project_metrics_settings", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("project_mirror_data", "projects", {:name=>"fk_d1aad367d7", :on_delete=>:cascade})
   -> 0.0056s
-- add_foreign_key("project_pages_metadata", "projects", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("project_repositories", "projects", {:on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("project_repositories", "shards", {:on_delete=>:restrict})
   -> 0.0039s
-- add_foreign_key("project_repository_states", "projects", {:on_delete=>:cascade})
   -> 0.0058s
-- add_foreign_key("project_statistics", "projects", {:on_delete=>:cascade})
   -> 0.0056s
-- add_foreign_key("project_tracing_settings", "projects", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("projects", "pool_repositories", {:name=>"fk_6e5c14658a", :on_delete=>:nullify})
   -> 0.0053s
-- add_foreign_key("projects", "users", {:column=>"marked_for_deletion_by_user_id", :name=>"fk_25d8780d11", :on_delete=>:nullify})
   -> 0.0062s
-- add_foreign_key("prometheus_alert_events", "projects", {:on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("prometheus_alert_events", "prometheus_alerts", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("prometheus_alerts", "environments", {:on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("prometheus_alerts", "projects", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("prometheus_alerts", "prometheus_metrics", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("prometheus_metrics", "projects", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("protected_branch_merge_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_98f3d044fe", :on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("protected_branch_merge_access_levels", "protected_branches", {:name=>"fk_8a3072ccb3", :on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("protected_branch_merge_access_levels", "users")
   -> 0.0051s
-- add_foreign_key("protected_branch_push_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_7111b68cdb", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("protected_branch_push_access_levels", "protected_branches", {:name=>"fk_9ffc86a3d9", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("protected_branch_push_access_levels", "users")
   -> 0.0052s
-- add_foreign_key("protected_branch_unprotect_access_levels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("protected_branch_unprotect_access_levels", "protected_branches", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("protected_branch_unprotect_access_levels", "users", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("protected_branches", "projects", {:name=>"fk_7a9c6d93e7", :on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("protected_environment_deploy_access_levels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("protected_environment_deploy_access_levels", "protected_environments", {:on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("protected_environment_deploy_access_levels", "users", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("protected_environments", "projects", {:on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("protected_tag_create_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_b4eb82fe3c", :on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("protected_tag_create_access_levels", "protected_tags", {:name=>"fk_f7dfda8c51", :on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("protected_tag_create_access_levels", "users")
   -> 0.0049s
-- add_foreign_key("protected_tags", "projects", {:name=>"fk_8e4af87648", :on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("push_event_payloads", "events", {:name=>"fk_36c74129da", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("push_rules", "projects", {:name=>"fk_83b29894de", :on_delete=>:cascade})
   -> 0.0064s
-- add_foreign_key("release_links", "releases", {:on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("releases", "projects", {:name=>"fk_47fe2a0596", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("releases", "users", {:column=>"author_id", :name=>"fk_8e4456f90f", :on_delete=>:nullify})
   -> 0.0049s
-- add_foreign_key("remote_mirrors", "projects", {:name=>"fk_43a9aa4ca8", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("repository_languages", "projects", {:on_delete=>:cascade})
   -> 0.0062s
-- add_foreign_key("resource_label_events", "epics", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("resource_label_events", "issues", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("resource_label_events", "labels", {:on_delete=>:nullify})
   -> 0.0042s
-- add_foreign_key("resource_label_events", "merge_requests", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("resource_label_events", "users", {:on_delete=>:nullify})
   -> 0.0051s
-- add_foreign_key("reviews", "merge_requests", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("reviews", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("reviews", "users", {:column=>"author_id", :on_delete=>:nullify})
   -> 0.0060s
-- add_foreign_key("saml_providers", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("scim_oauth_access_tokens", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("self_managed_prometheus_alert_events", "environments", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("self_managed_prometheus_alert_events", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("sentry_issues", "issues", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("serverless_domain_cluster", "clusters_applications_knative", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("serverless_domain_cluster", "pages_domains", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("serverless_domain_cluster", "users", {:column=>"creator_id", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("service_desk_settings", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("services", "projects", {:name=>"fk_71cce407f9", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("slack_integrations", "services", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("smartcard_identities", "users", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("snippet_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("snippet_user_mentions", "snippets", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("snippets", "projects", {:name=>"fk_be41fd4bb7", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("software_license_policies", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("software_license_policies", "software_licenses", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("subscriptions", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("suggestions", "notes", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("system_note_metadata", "description_versions", {:name=>"fk_fbd87415c9", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("system_note_metadata", "notes", {:name=>"fk_d83a918cb1", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("term_agreements", "application_setting_terms", {:column=>"term_id"})
   -> 0.0015s
-- add_foreign_key("term_agreements", "users", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("timelogs", "issues", {:name=>"fk_timelogs_issues_issue_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("timelogs", "merge_requests", {:name=>"fk_timelogs_merge_requests_merge_request_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("todos", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("todos", "notes", {:name=>"fk_91d1f47b13", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("todos", "projects", {:name=>"fk_45054f9c45", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("todos", "users", {:column=>"author_id", :name=>"fk_ccf0373936", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("todos", "users", {:name=>"fk_d94154aa95", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("trending_projects", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("u2f_registrations", "users")
   -> 0.0017s
-- add_foreign_key("user_callouts", "users", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("user_custom_attributes", "users", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("user_interacted_projects", "projects", {:name=>"fk_722ceba4f7", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("user_interacted_projects", "users", {:name=>"fk_0894651f08", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("user_preferences", "users", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("user_statuses", "users", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("user_synced_attributes_metadata", "users", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("users", "application_setting_terms", {:column=>"accepted_term_id", :name=>"fk_789cd90b35", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("users", "namespaces", {:column=>"managing_group_id", :name=>"fk_a4b8fefe3e", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("users_ops_dashboard_projects", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("users_ops_dashboard_projects", "users", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("users_security_dashboard_projects", "projects", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("users_security_dashboard_projects", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("users_star_projects", "projects", {:name=>"fk_22cd27ddfc", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("vulnerabilities", "epics", {:name=>"fk_1d37cddf91", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("vulnerabilities", "milestones", {:column=>"due_date_sourcing_milestone_id", :name=>"fk_7c5bb22a22", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("vulnerabilities", "milestones", {:column=>"start_date_sourcing_milestone_id", :name=>"fk_88b4d546ef", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerabilities", "milestones", {:name=>"fk_131d289c65", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("vulnerabilities", "projects", {:name=>"fk_efb96ab1e2", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("vulnerabilities", "users", {:column=>"author_id", :name=>"fk_b1de915a15", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerabilities", "users", {:column=>"closed_by_id", :name=>"fk_cf5c60acbf", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerabilities", "users", {:column=>"last_edited_by_id", :name=>"fk_1302949740", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("vulnerabilities", "users", {:column=>"resolved_by_id", :name=>"fk_76bc5f5455", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerabilities", "users", {:column=>"updated_by_id", :name=>"fk_7ac31eacb9", :on_delete=>:nullify})
   -> 0.0030s
-- add_foreign_key("vulnerability_feedback", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerability_feedback", "issues", {:on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerability_feedback", "merge_requests", {:name=>"fk_563ff1912e", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("vulnerability_feedback", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("vulnerability_feedback", "users", {:column=>"author_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("vulnerability_feedback", "users", {:column=>"comment_author_id", :name=>"fk_94f7c8a81e", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("vulnerability_identifiers", "projects", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("vulnerability_issue_links", "issues", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("vulnerability_issue_links", "vulnerabilities", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("vulnerability_occurrence_identifiers", "vulnerability_identifiers", {:column=>"identifier_id", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("vulnerability_occurrence_identifiers", "vulnerability_occurrences", {:column=>"occurrence_id", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("vulnerability_occurrence_pipelines", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("vulnerability_occurrence_pipelines", "vulnerability_occurrences", {:column=>"occurrence_id", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("vulnerability_occurrences", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("vulnerability_occurrences", "vulnerabilities", {:name=>"fk_97ffe77653", :on_delete=>:nullify})
   -> 0.0014s
-- add_foreign_key("vulnerability_occurrences", "vulnerability_identifiers", {:column=>"primary_identifier_id", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("vulnerability_occurrences", "vulnerability_scanners", {:column=>"scanner_id", :on_delete=>:cascade})
   -> 0.0013s
-- add_foreign_key("vulnerability_scanners", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("web_hook_logs", "web_hooks", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("web_hooks", "projects", {:name=>"fk_0c8ca6d9d1", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("zoom_meetings", "issues", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("zoom_meetings", "projects", {:on_delete=>:cascade})
   -> 0.0015s
Database re-creation done in 10.721709933015518
.....................................................................................*........................The application_settings table has 1303 columns.
Recreating the database
Dropped database 'gitlabhq_test'
Created database 'gitlabhq_test'
-- enable_extension("pg_trgm")
   -> 0.0266s
-- enable_extension("plpgsql")
   -> 0.0220s
-- create_table("abuse_reports", {:id=>:serial, :force=>:cascade})
   -> 0.0274s
-- create_table("alerts_service_data", {:force=>:cascade})
   -> 0.0223s
-- create_table("allowed_email_domains", {:force=>:cascade})
   -> 0.0168s
-- create_table("analytics_cycle_analytics_group_stages", {:force=>:cascade})
   -> 0.0496s
-- create_table("analytics_cycle_analytics_project_stages", {:force=>:cascade})
   -> 0.0265s
-- create_table("analytics_language_trend_repository_languages", {:id=>false, :force=>:cascade})
   -> 0.0099s
-- create_table("analytics_repository_file_commits", {:force=>:cascade})
   -> 0.0138s
-- create_table("analytics_repository_file_edits", {:force=>:cascade})
   -> 0.0110s
-- create_table("analytics_repository_files", {:force=>:cascade})
   -> 0.0105s
-- create_table("appearances", {:id=>:serial, :force=>:cascade})
   -> 0.0071s
-- create_table("application_setting_terms", {:id=>:serial, :force=>:cascade})
   -> 0.0066s
-- create_table("application_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0752s
-- create_table("approval_merge_request_rule_sources", {:force=>:cascade})
   -> 0.0219s
-- create_table("approval_merge_request_rules", {:force=>:cascade})
   -> 0.0369s
-- create_table("approval_merge_request_rules_approved_approvers", {:force=>:cascade})
   -> 0.0225s
-- create_table("approval_merge_request_rules_groups", {:force=>:cascade})
   -> 0.0153s
-- create_table("approval_merge_request_rules_users", {:force=>:cascade})
   -> 0.0136s
-- create_table("approval_project_rules", {:force=>:cascade})
   -> 0.0268s
-- create_table("approval_project_rules_groups", {:force=>:cascade})
   -> 0.0273s
-- create_table("approval_project_rules_users", {:force=>:cascade})
   -> 0.0234s
-- create_table("approvals", {:id=>:serial, :force=>:cascade})
   -> 0.0154s
-- create_table("approver_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0236s
-- create_table("approvers", {:id=>:serial, :force=>:cascade})
   -> 0.0246s
-- create_table("audit_events", {:id=>:serial, :force=>:cascade})
   -> 0.0301s
-- create_table("award_emoji", {:id=>:serial, :force=>:cascade})
   -> 0.0321s
-- create_table("aws_roles", {:primary_key=>"user_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0219s
-- create_table("badges", {:id=>:serial, :force=>:cascade})
   -> 0.0202s
-- create_table("board_assignees", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("board_group_recent_visits", {:force=>:cascade})
   -> 0.0424s
-- create_table("board_labels", {:id=>:serial, :force=>:cascade})
   -> 0.0155s
-- create_table("board_project_recent_visits", {:force=>:cascade})
   -> 0.0221s
-- create_table("boards", {:id=>:serial, :force=>:cascade})
   -> 0.0197s
-- create_table("broadcast_messages", {:id=>:serial, :force=>:cascade})
   -> 0.0117s
-- create_table("chat_names", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("chat_teams", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("ci_build_needs", {:id=>:serial, :force=>:cascade})
   -> 0.0229s
-- create_table("ci_build_trace_chunks", {:force=>:cascade})
   -> 0.0213s
-- create_table("ci_build_trace_section_names", {:id=>:serial, :force=>:cascade})
   -> 0.0196s
-- create_table("ci_build_trace_sections", {:id=>false, :force=>:cascade})
   -> 0.0173s
-- create_table("ci_builds", {:id=>:serial, :force=>:cascade})
   -> 0.1521s
-- create_table("ci_builds_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0329s
-- create_table("ci_builds_runner_session", {:force=>:cascade})
   -> 0.0162s
-- create_table("ci_group_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0178s
-- create_table("ci_job_artifacts", {:id=>:serial, :force=>:cascade})
   -> 0.0378s
-- create_table("ci_job_variables", {:force=>:cascade})
   -> 0.0153s
-- create_table("ci_pipeline_chat_data", {:force=>:cascade})
   -> 0.0200s
-- create_table("ci_pipeline_schedule_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0247s
-- create_table("ci_pipeline_schedules", {:id=>:serial, :force=>:cascade})
   -> 0.0217s
-- create_table("ci_pipeline_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0159s
-- create_table("ci_pipelines", {:id=>:serial, :force=>:cascade})
   -> 0.0934s
-- create_table("ci_resource_groups", {:force=>:cascade})
   -> 0.0118s
-- create_table("ci_resources", {:force=>:cascade})
   -> 0.0138s
-- create_table("ci_runner_namespaces", {:id=>:serial, :force=>:cascade})
   -> 0.0115s
-- create_table("ci_runner_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0126s
-- create_table("ci_runners", {:id=>:serial, :force=>:cascade})
   -> 0.0306s
-- create_table("ci_sources_pipelines", {:id=>:serial, :force=>:cascade})
   -> 0.0308s
-- create_table("ci_stages", {:id=>:serial, :force=>:cascade})
   -> 0.0483s
-- create_table("ci_subscriptions_projects", {:force=>:cascade})
   -> 0.0304s
-- create_table("ci_trigger_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0258s
-- create_table("ci_triggers", {:id=>:serial, :force=>:cascade})
   -> 0.0153s
-- create_table("ci_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0155s
-- create_table("cluster_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0175s
-- create_table("cluster_platforms_kubernetes", {:id=>:serial, :force=>:cascade})
   -> 0.0239s
-- create_table("cluster_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0270s
-- create_table("cluster_providers_aws", {:force=>:cascade})
   -> 0.0419s
-- create_table("cluster_providers_gcp", {:id=>:serial, :force=>:cascade})
   -> 0.0328s
-- create_table("clusters", {:id=>:serial, :force=>:cascade})
   -> 0.0471s
-- create_table("clusters_applications_cert_managers", {:id=>:serial, :force=>:cascade})
   -> 0.0232s
-- create_table("clusters_applications_crossplane", {:id=>:serial, :force=>:cascade})
   -> 0.0230s
-- create_table("clusters_applications_elastic_stacks", {:force=>:cascade})
   -> 0.0229s
-- create_table("clusters_applications_helm", {:id=>:serial, :force=>:cascade})
   -> 0.0230s
-- create_table("clusters_applications_ingress", {:id=>:serial, :force=>:cascade})
   -> 0.0225s
-- create_table("clusters_applications_jupyter", {:id=>:serial, :force=>:cascade})
   -> 0.0312s
-- create_table("clusters_applications_knative", {:id=>:serial, :force=>:cascade})
   -> 0.0209s
-- create_table("clusters_applications_prometheus", {:id=>:serial, :force=>:cascade})
   -> 0.0228s
-- create_table("clusters_applications_runners", {:id=>:serial, :force=>:cascade})
   -> 0.0329s
-- create_table("clusters_kubernetes_namespaces", {:force=>:cascade})
   -> 0.0677s
-- create_table("commit_user_mentions", {:force=>:cascade})
   -> 0.0415s
-- create_table("container_expiration_policies", {:primary_key=>"project_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0195s
-- create_table("container_repositories", {:id=>:serial, :force=>:cascade})
   -> 0.0311s
-- create_table("conversational_development_index_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0213s
-- create_table("dependency_proxy_blobs", {:id=>:serial, :force=>:cascade})
   -> 0.0143s
-- create_table("dependency_proxy_group_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0109s
-- create_table("deploy_keys_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0125s
-- create_table("deploy_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0354s
-- create_table("deployment_merge_requests", {:id=>false, :force=>:cascade})
   -> 0.0228s
-- create_table("deployments", {:id=>:serial, :force=>:cascade})
   -> 0.1116s
-- create_table("description_versions", {:force=>:cascade})
   -> 0.0383s
-- create_table("design_management_designs", {:force=>:cascade})
   -> 0.0322s
-- create_table("design_management_designs_versions", {:id=>false, :force=>:cascade})
   -> 0.0389s
-- create_table("design_management_versions", {:force=>:cascade})
   -> 0.0381s
-- create_table("design_user_mentions", {:force=>:cascade})
   -> 0.0309s
-- create_table("draft_notes", {:force=>:cascade})
   -> 0.0414s
-- create_table("elasticsearch_indexed_namespaces", {:id=>false, :force=>:cascade})
   -> 0.0130s
-- create_table("elasticsearch_indexed_projects", {:id=>false, :force=>:cascade})
   -> 0.0072s
-- create_table("emails", {:id=>:serial, :force=>:cascade})
   -> 0.0198s
-- create_table("environments", {:id=>:serial, :force=>:cascade})
   -> 0.0253s
-- create_table("epic_issues", {:id=>:serial, :force=>:cascade})
   -> 0.0255s
-- create_table("epic_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0172s
-- create_table("epic_user_mentions", {:force=>:cascade})
   -> 0.0406s
-- create_table("epics", {:id=>:serial, :force=>:cascade})
   -> 0.0655s
-- create_table("events", {:id=>:serial, :force=>:cascade})
   -> 0.0532s
-- create_table("evidences", {:force=>:cascade})
   -> 0.0110s
-- create_table("external_pull_requests", {:force=>:cascade})
   -> 0.0246s
-- create_table("feature_gates", {:id=>:serial, :force=>:cascade})
   -> 0.0206s
-- create_table("features", {:id=>:serial, :force=>:cascade})
   -> 0.0138s
-- create_table("fork_network_members", {:id=>:serial, :force=>:cascade})
   -> 0.0300s
-- create_table("fork_networks", {:id=>:serial, :force=>:cascade})
   -> 0.0220s
-- create_table("forked_project_links", {:id=>:serial, :force=>:cascade})
   -> 0.0186s
-- create_table("geo_cache_invalidation_events", {:force=>:cascade})
   -> 0.0125s
-- create_table("geo_container_repository_updated_events", {:force=>:cascade})
   -> 0.0181s
-- create_table("geo_event_log", {:force=>:cascade})
   -> 0.1093s
-- create_table("geo_hashed_storage_attachments_events", {:force=>:cascade})
   -> 0.0112s
-- create_table("geo_hashed_storage_migrated_events", {:force=>:cascade})
   -> 0.0108s
-- create_table("geo_job_artifact_deleted_events", {:force=>:cascade})
   -> 0.0099s
-- create_table("geo_lfs_object_deleted_events", {:force=>:cascade})
   -> 0.0104s
-- create_table("geo_node_namespace_links", {:id=>:serial, :force=>:cascade})
   -> 0.0166s
-- create_table("geo_node_statuses", {:id=>:serial, :force=>:cascade})
   -> 0.0108s
-- create_table("geo_nodes", {:id=>:serial, :force=>:cascade})
   -> 0.0191s
-- create_table("geo_repositories_changed_events", {:force=>:cascade})
   -> 0.0086s
-- create_table("geo_repository_created_events", {:force=>:cascade})
   -> 0.0090s
-- create_table("geo_repository_deleted_events", {:force=>:cascade})
   -> 0.0113s
-- create_table("geo_repository_renamed_events", {:force=>:cascade})
   -> 0.0116s
-- create_table("geo_repository_updated_events", {:force=>:cascade})
   -> 0.0151s
-- create_table("geo_reset_checksum_events", {:force=>:cascade})
   -> 0.0094s
-- create_table("geo_upload_deleted_events", {:force=>:cascade})
   -> 0.0092s
-- create_table("gitlab_subscription_histories", {:force=>:cascade})
   -> 0.0107s
-- create_table("gitlab_subscriptions", {:force=>:cascade})
   -> 0.0135s
-- create_table("gpg_key_subkeys", {:id=>:serial, :force=>:cascade})
   -> 0.0164s
-- create_table("gpg_keys", {:id=>:serial, :force=>:cascade})
   -> 0.0177s
-- create_table("gpg_signatures", {:id=>:serial, :force=>:cascade})
   -> 0.0258s
-- create_table("grafana_integrations", {:force=>:cascade})
   -> 0.0146s
-- create_table("group_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("group_deletion_schedules", {:primary_key=>"group_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0109s
-- create_table("group_group_links", {:force=>:cascade})
   -> 0.0129s
-- create_table("historical_data", {:id=>:serial, :force=>:cascade})
   -> 0.0038s
-- create_table("identities", {:id=>:serial, :force=>:cascade})
   -> 0.0173s
-- create_table("import_export_uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0190s
-- create_table("import_failures", {:force=>:cascade})
   -> 0.0251s
-- create_table("index_statuses", {:id=>:serial, :force=>:cascade})
   -> 0.0230s
-- create_table("insights", {:id=>:serial, :force=>:cascade})
   -> 0.0250s
-- create_table("internal_ids", {:force=>:cascade})
   -> 0.0459s
-- create_table("ip_restrictions", {:force=>:cascade})
   -> 0.0221s
-- create_table("issue_assignees", {:id=>false, :force=>:cascade})
   -> 0.0224s
-- create_table("issue_links", {:id=>:serial, :force=>:cascade})
   -> 0.0365s
-- create_table("issue_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0272s
-- create_table("issue_tracker_data", {:force=>:cascade})
   -> 0.0245s
-- create_table("issue_user_mentions", {:force=>:cascade})
   -> 0.0396s
-- create_table("issues", {:id=>:serial, :force=>:cascade})
   -> 0.1703s
-- create_table("issues_prometheus_alert_events", {:id=>false, :force=>:cascade})
   -> 0.0102s
-- create_table("issues_self_managed_prometheus_alert_events", {:id=>false, :force=>:cascade})
   -> 0.0107s
-- create_table("jira_connect_installations", {:force=>:cascade})
   -> 0.0111s
-- create_table("jira_connect_subscriptions", {:force=>:cascade})
   -> 0.0150s
-- create_table("jira_tracker_data", {:force=>:cascade})
   -> 0.0113s
-- create_table("keys", {:id=>:serial, :force=>:cascade})
   -> 0.0518s
-- create_table("label_links", {:id=>:serial, :force=>:cascade})
   -> 0.0312s
-- create_table("label_priorities", {:id=>:serial, :force=>:cascade})
   -> 0.0359s
-- create_table("labels", {:id=>:serial, :force=>:cascade})
   -> 0.0632s
-- create_table("ldap_group_links", {:id=>:serial, :force=>:cascade})
   -> 0.0060s
-- create_table("lfs_file_locks", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("lfs_objects", {:id=>:serial, :force=>:cascade})
   -> 0.0237s
-- create_table("lfs_objects_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0286s
-- create_table("licenses", {:id=>:serial, :force=>:cascade})
   -> 0.0130s
-- create_table("list_user_preferences", {:force=>:cascade})
   -> 0.0229s
-- create_table("lists", {:id=>:serial, :force=>:cascade})
   -> 0.0259s
-- create_table("members", {:id=>:serial, :force=>:cascade})
   -> 0.0687s
-- create_table("merge_request_assignees", {:force=>:cascade})
   -> 0.0288s
-- create_table("merge_request_blocks", {:force=>:cascade})
   -> 0.0272s
-- create_table("merge_request_diff_commits", {:id=>false, :force=>:cascade})
   -> 0.0261s
-- create_table("merge_request_diff_files", {:id=>false, :force=>:cascade})
   -> 0.0178s
-- create_table("merge_request_diffs", {:id=>:serial, :force=>:cascade})
   -> 0.0305s
-- create_table("merge_request_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0795s
-- create_table("merge_request_user_mentions", {:force=>:cascade})
   -> 0.0390s
-- create_table("merge_requests", {:id=>:serial, :force=>:cascade})
   -> 0.1364s
-- create_table("merge_requests_closing_issues", {:id=>:serial, :force=>:cascade})
   -> 0.0111s
-- create_table("merge_trains", {:force=>:cascade})
   -> 0.0234s
-- create_table("milestone_releases", {:id=>false, :force=>:cascade})
   -> 0.0093s
-- create_table("milestones", {:id=>:serial, :force=>:cascade})
   -> 0.0347s
-- create_table("namespace_aggregation_schedules", {:primary_key=>"namespace_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0091s
-- create_table("namespace_root_storage_statistics", {:primary_key=>"namespace_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0102s
-- create_table("namespace_statistics", {:id=>:serial, :force=>:cascade})
   -> 0.0121s
-- create_table("namespaces", {:id=>:serial, :force=>:cascade})
   -> 0.1299s
-- create_table("note_diff_files", {:id=>:serial, :force=>:cascade})
   -> 0.0200s
-- create_table("notes", {:id=>:serial, :force=>:cascade})
   -> 0.0483s
-- create_table("notification_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0337s
-- create_table("oauth_access_grants", {:id=>:serial, :force=>:cascade})
   -> 0.0225s
-- create_table("oauth_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0453s
-- create_table("oauth_applications", {:id=>:serial, :force=>:cascade})
   -> 0.0350s
-- create_table("oauth_openid_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0150s
-- create_table("operations_feature_flag_scopes", {:force=>:cascade})
   -> 0.0126s
-- create_table("operations_feature_flags", {:force=>:cascade})
   -> 0.0099s
-- create_table("operations_feature_flags_clients", {:force=>:cascade})
   -> 0.0109s
-- create_table("packages_build_infos", {:force=>:cascade})
   -> 0.0120s
-- create_table("packages_conan_file_metadata", {:force=>:cascade})
   -> 0.0115s
-- create_table("packages_conan_metadata", {:force=>:cascade})
   -> 0.0103s
-- create_table("packages_dependencies", {:force=>:cascade})
   -> 0.0122s
-- create_table("packages_dependency_links", {:force=>:cascade})
   -> 0.0127s
-- create_table("packages_maven_metadata", {:force=>:cascade})
   -> 0.0114s
-- create_table("packages_package_files", {:force=>:cascade})
   -> 0.0113s
-- create_table("packages_package_tags", {:force=>:cascade})
   -> 0.0084s
-- create_table("packages_packages", {:force=>:cascade})
   -> 0.0169s
-- create_table("pages_domain_acme_orders", {:force=>:cascade})
   -> 0.0152s
-- create_table("pages_domains", {:id=>:serial, :force=>:cascade})
   -> 0.0719s
-- create_table("path_locks", {:id=>:serial, :force=>:cascade})
   -> 0.0192s
-- create_table("personal_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0200s
-- create_table("plan_limits", {:force=>:cascade})
   -> 0.0087s
-- create_table("plans", {:id=>:serial, :force=>:cascade})
   -> 0.0089s
-- create_table("pool_repositories", {:force=>:cascade})
   -> 0.0184s
-- create_table("programming_languages", {:id=>:serial, :force=>:cascade})
   -> 0.0087s
-- create_table("project_alerting_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0059s
-- create_table("project_aliases", {:force=>:cascade})
   -> 0.0140s
-- create_table("project_authorizations", {:id=>false, :force=>:cascade})
   -> 0.0086s
-- create_table("project_auto_devops", {:id=>:serial, :force=>:cascade})
   -> 0.0087s
-- create_table("project_ci_cd_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0084s
-- create_table("project_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0177s
-- create_table("project_daily_statistics", {:force=>:cascade})
   -> 0.0102s
-- create_table("project_deploy_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0143s
-- create_table("project_error_tracking_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0074s
-- create_table("project_feature_usages", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0153s
-- create_table("project_features", {:id=>:serial, :force=>:cascade})
   -> 0.0078s
-- create_table("project_group_links", {:id=>:serial, :force=>:cascade})
   -> 0.0125s
-- create_table("project_import_data", {:id=>:serial, :force=>:cascade})
   -> 0.0102s
-- create_table("project_incident_management_settings", {:primary_key=>"project_id", :id=>:serial, :force=>:cascade})
   -> 0.0058s
-- create_table("project_metrics_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0058s
-- create_table("project_mirror_data", {:id=>:serial, :force=>:cascade})
   -> 0.0301s
-- create_table("project_pages_metadata", {:id=>false, :force=>:cascade})
   -> 0.0087s
-- create_table("project_repositories", {:force=>:cascade})
   -> 0.0182s
-- create_table("project_repository_states", {:id=>:serial, :force=>:cascade})
   -> 0.0303s
-- create_table("project_statistics", {:id=>:serial, :force=>:cascade})
   -> 0.0130s
-- create_table("project_tracing_settings", {:force=>:cascade})
   -> 0.0090s
-- create_table("projects", {:id=>:serial, :force=>:cascade})
   -> 0.1207s
-- create_table("prometheus_alert_events", {:force=>:cascade})
   -> 0.0140s
-- create_table("prometheus_alerts", {:id=>:serial, :force=>:cascade})
   -> 0.0150s
-- create_table("prometheus_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0238s
-- create_table("protected_branch_merge_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0143s
-- create_table("protected_branch_push_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0153s
-- create_table("protected_branch_unprotect_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0148s
-- create_table("protected_branches", {:id=>:serial, :force=>:cascade})
   -> 0.0127s
-- create_table("protected_environment_deploy_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0156s
-- create_table("protected_environments", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("protected_tag_create_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("protected_tags", {:id=>:serial, :force=>:cascade})
   -> 0.0154s
-- create_table("push_event_payloads", {:id=>false, :force=>:cascade})
   -> 0.0084s
-- create_table("push_rules", {:id=>:serial, :force=>:cascade})
   -> 0.0156s
-- create_table("redirect_routes", {:id=>:serial, :force=>:cascade})
   -> 0.0172s
-- create_table("release_links", {:force=>:cascade})
   -> 0.0132s
-- create_table("releases", {:id=>:serial, :force=>:cascade})
   -> 0.0143s
-- create_table("remote_mirrors", {:id=>:serial, :force=>:cascade})
   -> 0.0149s
-- create_table("repository_languages", {:id=>false, :force=>:cascade})
   -> 0.0064s
-- create_table("resource_label_events", {:force=>:cascade})
   -> 0.0248s
-- create_table("reviews", {:force=>:cascade})
   -> 0.5530s
-- create_table("routes", {:id=>:serial, :force=>:cascade})
   -> 0.0326s
-- create_table("saml_providers", {:id=>:serial, :force=>:cascade})
   -> 0.0244s
-- create_table("scim_oauth_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0172s
-- create_table("self_managed_prometheus_alert_events", {:force=>:cascade})
   -> 0.0172s
-- create_table("sent_notifications", {:id=>:serial, :force=>:cascade})
   -> 0.0112s
-- create_table("sentry_issues", {:force=>:cascade})
   -> 0.0114s
-- create_table("serverless_domain_cluster", {:primary_key=>"uuid", :id=>:string, :limit=>14, :force=>:cascade})
   -> 0.0224s
-- create_table("service_desk_settings", {:primary_key=>"project_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0075s
-- create_table("services", {:id=>:serial, :force=>:cascade})
   -> 0.0347s
-- create_table("shards", {:id=>:serial, :force=>:cascade})
   -> 0.0102s
-- create_table("slack_integrations", {:id=>:serial, :force=>:cascade})
   -> 0.0153s
-- create_table("smartcard_identities", {:force=>:cascade})
   -> 0.0290s
-- create_table("snippet_user_mentions", {:force=>:cascade})
   -> 0.0230s
-- create_table("snippets", {:id=>:serial, :force=>:cascade})
   -> 0.0502s
-- create_table("software_license_policies", {:id=>:serial, :force=>:cascade})
   -> 0.0249s
-- create_table("software_licenses", {:id=>:serial, :force=>:cascade})
   -> 0.0293s
-- create_table("spam_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0122s
-- create_table("subscriptions", {:id=>:serial, :force=>:cascade})
   -> 0.0179s
-- create_table("suggestions", {:force=>:cascade})
   -> 0.0143s
-- create_table("system_note_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0161s
-- create_table("taggings", {:id=>:serial, :force=>:cascade})
   -> 0.0240s
-- create_table("tags", {:id=>:serial, :force=>:cascade})
   -> 0.0130s
-- create_table("term_agreements", {:id=>:serial, :force=>:cascade})
   -> 0.0177s
-- create_table("timelogs", {:id=>:serial, :force=>:cascade})
   -> 0.0201s
-- create_table("todos", {:id=>:serial, :force=>:cascade})
   -> 0.0451s
-- create_table("trending_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0100s
-- create_table("u2f_registrations", {:id=>:serial, :force=>:cascade})
   -> 0.0171s
-- create_table("uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0252s
-- create_table("user_agent_details", {:id=>:serial, :force=>:cascade})
   -> 0.0109s
-- create_table("user_callouts", {:id=>:serial, :force=>:cascade})
   -> 0.0162s
-- create_table("user_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0277s
-- create_table("user_interacted_projects", {:id=>false, :force=>:cascade})
   -> 0.0127s
-- create_table("user_preferences", {:id=>:serial, :force=>:cascade})
   -> 0.0151s
-- create_table("user_statuses", {:primary_key=>"user_id", :id=>:serial, :force=>:cascade})
   -> 0.0128s
-- create_table("user_synced_attributes_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0133s
-- create_table("users", {:id=>:serial, :force=>:cascade})
   -> 0.1682s
-- create_table("users_ops_dashboard_projects", {:force=>:cascade})
   -> 0.0172s
-- create_table("users_security_dashboard_projects", {:id=>false, :force=>:cascade})
   -> 0.0098s
-- create_table("users_star_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0136s
-- create_table("vulnerabilities", {:force=>:cascade})
   -> 0.0716s
-- create_table("vulnerability_feedback", {:id=>:serial, :force=>:cascade})
   -> 0.0362s
-- create_table("vulnerability_identifiers", {:force=>:cascade})
   -> 0.0101s
-- create_table("vulnerability_issue_links", {:force=>:cascade})
   -> 0.0160s
-- create_table("vulnerability_occurrence_identifiers", {:force=>:cascade})
   -> 0.0171s
-- create_table("vulnerability_occurrence_pipelines", {:force=>:cascade})
   -> 0.0109s
-- create_table("vulnerability_occurrences", {:force=>:cascade})
   -> 0.0261s
-- create_table("vulnerability_scanners", {:force=>:cascade})
   -> 0.0099s
-- create_table("web_hook_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0253s
-- create_table("web_hooks", {:id=>:serial, :force=>:cascade})
   -> 0.0362s
-- create_table("zoom_meetings", {:force=>:cascade})
   -> 0.0255s
-- add_foreign_key("alerts_service_data", "services", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("allowed_email_domains", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "labels", {:column=>"end_event_label_id", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "labels", {:column=>"start_event_label_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "labels", {:column=>"end_event_label_id", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "labels", {:column=>"start_event_label_id", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "projects", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("analytics_language_trend_repository_languages", "programming_languages", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("analytics_language_trend_repository_languages", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("analytics_repository_file_commits", "analytics_repository_files", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("analytics_repository_file_commits", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("analytics_repository_file_edits", "analytics_repository_files", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("analytics_repository_file_edits", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("analytics_repository_files", "projects", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("application_settings", "namespaces", {:column=>"custom_project_templates_group_id", :on_delete=>:nullify})
   -> 0.0037s
-- add_foreign_key("application_settings", "projects", {:column=>"file_template_project_id", :name=>"fk_ec757bd087", :on_delete=>:nullify})
   -> 0.0029s
-- add_foreign_key("application_settings", "projects", {:column=>"instance_administration_project_id", :on_delete=>:nullify})
   -> 0.0028s
-- add_foreign_key("application_settings", "users", {:column=>"usage_stats_set_by_user_id", :name=>"fk_964370041d", :on_delete=>:nullify})
   -> 0.0047s
-- add_foreign_key("approval_merge_request_rule_sources", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("approval_merge_request_rule_sources", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("approval_merge_request_rules", "merge_requests", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("approval_merge_request_rules_approved_approvers", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_merge_request_rules_approved_approvers", "users", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_merge_request_rules_groups", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("approval_merge_request_rules_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_merge_request_rules_users", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("approval_merge_request_rules_users", "users", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("approval_project_rules", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("approval_project_rules_groups", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("approval_project_rules_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_project_rules_users", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("approval_project_rules_users", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approvals", "merge_requests", {:name=>"fk_310d714958", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approver_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("aws_roles", "users", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("badges", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("badges", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("board_assignees", "boards", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("board_assignees", "users", {:column=>"assignee_id", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("board_group_recent_visits", "boards", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("board_group_recent_visits", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("board_group_recent_visits", "users", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("board_labels", "boards", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("board_labels", "labels", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("board_project_recent_visits", "boards", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("board_project_recent_visits", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("board_project_recent_visits", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("boards", "namespaces", {:column=>"group_id", :name=>"fk_1e9a074a35", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("boards", "projects", {:name=>"fk_f15266b5f9", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("chat_teams", "namespaces", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_build_needs", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("ci_build_trace_chunks", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_build_trace_section_names", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_build_trace_sections", "ci_build_trace_section_names", {:column=>"section_name_id", :name=>"fk_264e112c66", :on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("ci_build_trace_sections", "ci_builds", {:column=>"build_id", :name=>"fk_4ebe41f502", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_build_trace_sections", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"auto_canceled_by_id", :name=>"fk_a2141b1522", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"commit_id", :name=>"fk_d3130c9a7f", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"upstream_pipeline_id", :name=>"fk_87f4cefcda", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_builds", "ci_resource_groups", {:column=>"resource_group_id", :name=>"fk_6661f4f0e8", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("ci_builds", "ci_stages", {:column=>"stage_id", :name=>"fk_3a9eaa254d", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_builds", "projects", {:name=>"fk_befce0568a", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_builds_metadata", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_builds_metadata", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_builds_runner_session", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_group_variables", "namespaces", {:column=>"group_id", :name=>"fk_33ae4d58d8", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_job_artifacts", "ci_builds", {:column=>"job_id", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("ci_job_artifacts", "projects", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("ci_job_variables", "ci_builds", {:column=>"job_id", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("ci_pipeline_chat_data", "chat_names", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("ci_pipeline_chat_data", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("ci_pipeline_schedule_variables", "ci_pipeline_schedules", {:column=>"pipeline_schedule_id", :name=>"fk_41c35fda51", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("ci_pipeline_schedules", "projects", {:name=>"fk_8ead60fcc4", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("ci_pipeline_schedules", "users", {:column=>"owner_id", :name=>"fk_9ea99f58d2", :on_delete=>:nullify})
   -> 0.0037s
-- add_foreign_key("ci_pipeline_variables", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_f29c5f4380", :on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("ci_pipelines", "ci_pipeline_schedules", {:column=>"pipeline_schedule_id", :name=>"fk_3d34ab2e06", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("ci_pipelines", "ci_pipelines", {:column=>"auto_canceled_by_id", :name=>"fk_262d4c2d19", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("ci_pipelines", "external_pull_requests", {:name=>"fk_190998ef09", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("ci_pipelines", "merge_requests", {:name=>"fk_a23be95014", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_pipelines", "projects", {:name=>"fk_86635dbd80", :on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("ci_resource_groups", "projects", {:name=>"fk_774722d144", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("ci_resources", "ci_builds", {:column=>"build_id", :name=>"fk_e169a8e3d5", :on_delete=>:nullify})
   -> 0.0025s
-- add_foreign_key("ci_resources", "ci_resource_groups", {:column=>"resource_group_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_runner_namespaces", "ci_runners", {:column=>"runner_id", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("ci_runner_namespaces", "namespaces", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_runner_projects", "projects", {:name=>"fk_4478a6f1e4", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("ci_sources_pipelines", "ci_builds", {:column=>"source_job_id", :name=>"fk_be5624bf37", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("ci_sources_pipelines", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_e1bad85861", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_sources_pipelines", "ci_pipelines", {:column=>"source_pipeline_id", :name=>"fk_d4e29af7d7", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_sources_pipelines", "projects", {:column=>"source_project_id", :name=>"fk_acd9737679", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_sources_pipelines", "projects", {:name=>"fk_1e53c97c0a", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_stages", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_fb57e6cc56", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("ci_stages", "projects", {:name=>"fk_2360681d1d", :on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("ci_subscriptions_projects", "projects", {:column=>"downstream_project_id", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("ci_subscriptions_projects", "projects", {:column=>"upstream_project_id", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_trigger_requests", "ci_triggers", {:column=>"trigger_id", :name=>"fk_b8ec8b7245", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_triggers", "projects", {:name=>"fk_e3e63f966e", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_triggers", "users", {:column=>"owner_id", :name=>"fk_e8e10d1964", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_variables", "projects", {:name=>"fk_ada5eb64b3", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("cluster_groups", "clusters", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("cluster_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("cluster_platforms_kubernetes", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("cluster_projects", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("cluster_projects", "projects", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("cluster_providers_aws", "clusters", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("cluster_providers_aws", "users", {:column=>"created_by_user_id", :on_delete=>:nullify})
   -> 0.0027s
-- add_foreign_key("cluster_providers_gcp", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters", "projects", {:column=>"management_project_id", :name=>"fk_f05c5e5a42", :on_delete=>:nullify})
   -> 0.0025s
-- add_foreign_key("clusters", "users", {:on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("clusters_applications_cert_managers", "clusters", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("clusters_applications_crossplane", "clusters", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("clusters_applications_elastic_stacks", "clusters", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("clusters_applications_helm", "clusters", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("clusters_applications_ingress", "clusters", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("clusters_applications_jupyter", "clusters", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("clusters_applications_jupyter", "oauth_applications", {:on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("clusters_applications_knative", "clusters", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("clusters_applications_prometheus", "clusters", {:name=>"fk_557e773639", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_runners", "ci_runners", {:column=>"runner_id", :name=>"fk_02de2ded36", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("clusters_applications_runners", "clusters", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("clusters_kubernetes_namespaces", "cluster_projects", {:on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("clusters_kubernetes_namespaces", "clusters", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("clusters_kubernetes_namespaces", "environments", {:on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("clusters_kubernetes_namespaces", "projects", {:on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("commit_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("container_expiration_policies", "projects", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("container_repositories", "projects")
   -> 0.0029s
-- add_foreign_key("dependency_proxy_blobs", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("dependency_proxy_group_settings", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("deploy_keys_projects", "projects", {:name=>"fk_58a901ca7e", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("deployment_merge_requests", "deployments", {:on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("deployment_merge_requests", "merge_requests", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("deployments", "clusters", {:name=>"fk_289bba3222", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("deployments", "projects", {:name=>"fk_b9a3851b82", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("description_versions", "epics", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("description_versions", "issues", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("description_versions", "merge_requests", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("design_management_designs", "issues", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("design_management_designs", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("design_management_designs_versions", "design_management_designs", {:column=>"design_id", :name=>"fk_03c671965c", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("design_management_designs_versions", "design_management_versions", {:column=>"version_id", :name=>"fk_f4d25ba00c", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("design_management_versions", "issues", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("design_management_versions", "users", {:column=>"author_id", :name=>"fk_c1440b4896", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("design_user_mentions", "design_management_designs", {:column=>"design_id", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("design_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("draft_notes", "merge_requests", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("draft_notes", "users", {:column=>"author_id", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("elasticsearch_indexed_namespaces", "namespaces", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("elasticsearch_indexed_projects", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("environments", "projects", {:name=>"fk_d1c8c1da6a", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("epic_issues", "epics", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("epic_issues", "issues", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("epic_metrics", "epics", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("epic_user_mentions", "epics", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("epic_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("epics", "epics", {:column=>"due_date_sourcing_epic_id", :name=>"fk_013c9f36ca", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("epics", "epics", {:column=>"parent_id", :name=>"fk_25b99c1be3", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("epics", "epics", {:column=>"start_date_sourcing_epic_id", :name=>"fk_9d480c64b2", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("epics", "milestones", {:on_delete=>:nullify})
   -> 0.0034s
-- add_foreign_key("epics", "namespaces", {:column=>"group_id", :name=>"fk_f081aa4489", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("epics", "users", {:column=>"assignee_id", :name=>"fk_dccd3f98fc", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("epics", "users", {:column=>"author_id", :name=>"fk_3654b61b03", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("epics", "users", {:column=>"closed_by_id", :name=>"fk_aa5798e761", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("events", "namespaces", {:column=>"group_id", :name=>"fk_61fbf6ca48", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("events", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("events", "users", {:column=>"author_id", :name=>"fk_edfd187b6f", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("evidences", "releases", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("external_pull_requests", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("fork_network_members", "fork_networks", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("fork_network_members", "projects", {:column=>"forked_from_project_id", :name=>"fk_b01280dae4", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("fork_network_members", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("fork_networks", "projects", {:column=>"root_project_id", :name=>"fk_e7b436b2b5", :on_delete=>:nullify})
   -> 0.0025s
-- add_foreign_key("forked_project_links", "projects", {:column=>"forked_to_project_id", :name=>"fk_434510edb0", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("geo_container_repository_updated_events", "container_repositories", {:name=>"fk_212c89c706", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("geo_event_log", "geo_cache_invalidation_events", {:column=>"cache_invalidation_event_id", :name=>"fk_42c3b54bed", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("geo_event_log", "geo_container_repository_updated_events", {:column=>"container_repository_updated_event_id", :name=>"fk_6ada82d42a", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("geo_event_log", "geo_hashed_storage_migrated_events", {:column=>"hashed_storage_migrated_event_id", :name=>"fk_27548c6db3", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_job_artifact_deleted_events", {:column=>"job_artifact_deleted_event_id", :name=>"fk_176d3fbb5d", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("geo_event_log", "geo_lfs_object_deleted_events", {:column=>"lfs_object_deleted_event_id", :name=>"fk_d5af95fcd9", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("geo_event_log", "geo_repositories_changed_events", {:column=>"repositories_changed_event_id", :name=>"fk_4a99ebfd60", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("geo_event_log", "geo_repository_created_events", {:column=>"repository_created_event_id", :name=>"fk_9b9afb1916", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_repository_deleted_events", {:column=>"repository_deleted_event_id", :name=>"fk_c4b1c1f66e", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("geo_event_log", "geo_repository_renamed_events", {:column=>"repository_renamed_event_id", :name=>"fk_86c84214ec", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_repository_updated_events", {:column=>"repository_updated_event_id", :name=>"fk_78a6492f68", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("geo_event_log", "geo_reset_checksum_events", {:column=>"reset_checksum_event_id", :name=>"fk_cff7185ad2", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_event_log", "geo_upload_deleted_events", {:column=>"upload_deleted_event_id", :name=>"fk_c1f241c70d", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("geo_hashed_storage_attachments_events", "projects", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("geo_hashed_storage_migrated_events", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("geo_node_namespace_links", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("geo_node_namespace_links", "namespaces", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("geo_node_statuses", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("geo_repositories_changed_events", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("geo_repository_created_events", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("geo_repository_renamed_events", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("geo_repository_updated_events", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("geo_reset_checksum_events", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("gitlab_subscriptions", "namespaces", {:name=>"fk_e2595d00a1", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("gitlab_subscriptions", "plans", {:column=>"hosted_plan_id", :name=>"fk_bd0c4019c3", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("gpg_key_subkeys", "gpg_keys", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("gpg_keys", "users", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("gpg_signatures", "gpg_key_subkeys", {:on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("gpg_signatures", "gpg_keys", {:on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("gpg_signatures", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("grafana_integrations", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("group_custom_attributes", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("group_deletion_schedules", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("group_deletion_schedules", "users", {:name=>"fk_11e3ebfcdd", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("group_group_links", "namespaces", {:column=>"shared_group_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("group_group_links", "namespaces", {:column=>"shared_with_group_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("identities", "saml_providers", {:name=>"fk_aade90f0fc", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("import_export_uploads", "namespaces", {:column=>"group_id", :name=>"fk_83319d9721", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("import_export_uploads", "projects", {:on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("index_statuses", "projects", {:name=>"fk_74b2492545", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("insights", "namespaces", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("insights", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("internal_ids", "namespaces", {:name=>"fk_162941d509", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("internal_ids", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ip_restrictions", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("issue_assignees", "issues", {:name=>"fk_b7d881734a", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("issue_assignees", "users", {:name=>"fk_5e0c8d9154", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("issue_links", "issues", {:column=>"source_id", :name=>"fk_c900194ff2", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("issue_links", "issues", {:column=>"target_id", :name=>"fk_e71bb44f1f", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("issue_metrics", "issues", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("issue_tracker_data", "services", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("issue_user_mentions", "issues", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("issue_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("issues", "epics", {:column=>"promoted_to_epic_id", :name=>"fk_df75a7c8b8", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("issues", "issues", {:column=>"duplicated_to_id", :name=>"fk_9c4516d665", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("issues", "issues", {:column=>"moved_to_id", :name=>"fk_a194299be1", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("issues", "milestones", {:name=>"fk_96b1dd429c", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("issues", "projects", {:name=>"fk_899c8f3231", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("issues", "users", {:column=>"author_id", :name=>"fk_05f1e72feb", :on_delete=>:nullify})
   -> 0.0039s
-- add_foreign_key("issues", "users", {:column=>"closed_by_id", :name=>"fk_c63cbf6c25", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("issues", "users", {:column=>"updated_by_id", :name=>"fk_ffed080f01", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("issues_prometheus_alert_events", "issues", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("issues_prometheus_alert_events", "prometheus_alert_events", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("issues_self_managed_prometheus_alert_events", "issues", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("issues_self_managed_prometheus_alert_events", "self_managed_prometheus_alert_events", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("jira_connect_subscriptions", "jira_connect_installations", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("jira_connect_subscriptions", "namespaces", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("jira_tracker_data", "services", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("label_links", "labels", {:name=>"fk_d97dd08678", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("label_priorities", "labels", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("label_priorities", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("labels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("labels", "projects", {:name=>"fk_7de4989a69", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("lfs_file_locks", "projects", {:on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("lfs_file_locks", "users", {:on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("list_user_preferences", "lists", {:on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("list_user_preferences", "users", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("lists", "boards", {:name=>"fk_0d3f677137", :on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("lists", "labels", {:name=>"fk_7a5553d60f", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("lists", "milestones", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("lists", "users", {:name=>"fk_d6cf4279f7", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("members", "users", {:name=>"fk_2e88fb7ce9", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("merge_request_assignees", "merge_requests", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("merge_request_assignees", "users", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("merge_request_blocks", "merge_requests", {:column=>"blocked_merge_request_id", :on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("merge_request_blocks", "merge_requests", {:column=>"blocking_merge_request_id", :on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("merge_request_diff_commits", "merge_request_diffs", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("merge_request_diff_files", "merge_request_diffs", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("merge_request_diffs", "merge_requests", {:name=>"fk_8483f3258f", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("merge_request_metrics", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("merge_request_metrics", "merge_requests", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("merge_request_metrics", "users", {:column=>"latest_closed_by_id", :name=>"fk_ae440388cc", :on_delete=>:nullify})
   -> 0.0030s
-- add_foreign_key("merge_request_metrics", "users", {:column=>"merged_by_id", :name=>"fk_7f28d925f3", :on_delete=>:nullify})
   -> 0.0053s
-- add_foreign_key("merge_request_user_mentions", "merge_requests", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("merge_request_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("merge_requests", "ci_pipelines", {:column=>"head_pipeline_id", :name=>"fk_fd82eae0b9", :on_delete=>:nullify})
   -> 0.0037s
-- add_foreign_key("merge_requests", "merge_request_diffs", {:column=>"latest_merge_request_diff_id", :name=>"fk_06067f5644", :on_delete=>:nullify})
   -> 0.0034s
-- add_foreign_key("merge_requests", "milestones", {:name=>"fk_6a5165a692", :on_delete=>:nullify})
   -> 0.0044s
-- add_foreign_key("merge_requests", "projects", {:column=>"source_project_id", :name=>"fk_3308fe130c", :on_delete=>:nullify})
   -> 0.0034s
-- add_foreign_key("merge_requests", "projects", {:column=>"target_project_id", :name=>"fk_a6963e8447", :on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("merge_requests", "users", {:column=>"assignee_id", :name=>"fk_6149611a04", :on_delete=>:nullify})
   -> 0.0027s
-- add_foreign_key("merge_requests", "users", {:column=>"author_id", :name=>"fk_e719a85f8a", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("merge_requests", "users", {:column=>"merge_user_id", :name=>"fk_ad525e1f87", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("merge_requests", "users", {:column=>"updated_by_id", :name=>"fk_641731faff", :on_delete=>:nullify})
   -> 0.0027s
-- add_foreign_key("merge_requests_closing_issues", "issues", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("merge_requests_closing_issues", "merge_requests", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("merge_trains", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0051s
-- add_foreign_key("merge_trains", "merge_requests", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("merge_trains", "projects", {:column=>"target_project_id", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("merge_trains", "users", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("milestone_releases", "milestones", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("milestone_releases", "releases", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("milestones", "namespaces", {:column=>"group_id", :name=>"fk_95650a40d4", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("milestones", "projects", {:name=>"fk_9bd0a0c791", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("namespace_aggregation_schedules", "namespaces", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("namespace_root_storage_statistics", "namespaces", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("namespace_statistics", "namespaces", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("namespaces", "namespaces", {:column=>"custom_project_templates_group_id", :name=>"fk_e7a0b20a6b", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("namespaces", "plans", {:name=>"fk_fdd12e5b80", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("namespaces", "projects", {:column=>"file_template_project_id", :name=>"fk_319256d87a", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("note_diff_files", "notes", {:column=>"diff_note_id", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("notes", "projects", {:name=>"fk_99e097b079", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("notes", "reviews", {:name=>"fk_2e82291620", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("notification_settings", "users", {:name=>"fk_0c95e91db7", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("oauth_openid_requests", "oauth_access_grants", {:column=>"access_grant_id", :name=>"fk_77114b3b09", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("operations_feature_flag_scopes", "operations_feature_flags", {:column=>"feature_flag_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("operations_feature_flags", "projects", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("operations_feature_flags_clients", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("packages_build_infos", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("packages_build_infos", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("packages_conan_file_metadata", "packages_package_files", {:column=>"package_file_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("packages_conan_metadata", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("packages_dependency_links", "packages_dependencies", {:column=>"dependency_id", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("packages_dependency_links", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("packages_maven_metadata", "packages_packages", {:column=>"package_id", :name=>"fk_be88aed360", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("packages_package_files", "packages_packages", {:column=>"package_id", :name=>"fk_86f0f182f8", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("packages_package_tags", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("packages_packages", "projects", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("pages_domain_acme_orders", "pages_domains", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("pages_domains", "projects", {:name=>"fk_ea2f6dfc6f", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("path_locks", "projects", {:name=>"fk_5265c98f24", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("path_locks", "users")
   -> 0.0019s
-- add_foreign_key("personal_access_tokens", "users")
   -> 0.0020s
-- add_foreign_key("plan_limits", "plans", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("pool_repositories", "projects", {:column=>"source_project_id", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("pool_repositories", "shards", {:on_delete=>:restrict})
   -> 0.0017s
-- add_foreign_key("project_alerting_settings", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("project_aliases", "projects", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("project_authorizations", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("project_authorizations", "users", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("project_auto_devops", "projects", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("project_ci_cd_settings", "projects", {:name=>"fk_24c15d2f2e", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("project_custom_attributes", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("project_daily_statistics", "projects", {:on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("project_deploy_tokens", "deploy_tokens", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("project_deploy_tokens", "projects", {:on_delete=>:cascade})
   -> 0.0056s
-- add_foreign_key("project_error_tracking_settings", "projects", {:on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("project_feature_usages", "projects", {:on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("project_features", "projects", {:name=>"fk_18513d9b92", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("project_group_links", "projects", {:name=>"fk_daa8cee94c", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("project_import_data", "projects", {:name=>"fk_ffb9ee3a10", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("project_incident_management_settings", "projects", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("project_metrics_settings", "projects", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("project_mirror_data", "projects", {:name=>"fk_d1aad367d7", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("project_pages_metadata", "projects", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("project_repositories", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("project_repositories", "shards", {:on_delete=>:restrict})
   -> 0.0019s
-- add_foreign_key("project_repository_states", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("project_statistics", "projects", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("project_tracing_settings", "projects", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("projects", "pool_repositories", {:name=>"fk_6e5c14658a", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("projects", "users", {:column=>"marked_for_deletion_by_user_id", :name=>"fk_25d8780d11", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("prometheus_alert_events", "projects", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("prometheus_alert_events", "prometheus_alerts", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("prometheus_alerts", "environments", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("prometheus_alerts", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("prometheus_alerts", "prometheus_metrics", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("prometheus_metrics", "projects", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("protected_branch_merge_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_98f3d044fe", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("protected_branch_merge_access_levels", "protected_branches", {:name=>"fk_8a3072ccb3", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("protected_branch_merge_access_levels", "users")
   -> 0.0018s
-- add_foreign_key("protected_branch_push_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_7111b68cdb", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("protected_branch_push_access_levels", "protected_branches", {:name=>"fk_9ffc86a3d9", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("protected_branch_push_access_levels", "users")
   -> 0.0042s
-- add_foreign_key("protected_branch_unprotect_access_levels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("protected_branch_unprotect_access_levels", "protected_branches", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("protected_branch_unprotect_access_levels", "users", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("protected_branches", "projects", {:name=>"fk_7a9c6d93e7", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("protected_environment_deploy_access_levels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("protected_environment_deploy_access_levels", "protected_environments", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("protected_environment_deploy_access_levels", "users", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("protected_environments", "projects", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("protected_tag_create_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_b4eb82fe3c", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("protected_tag_create_access_levels", "protected_tags", {:name=>"fk_f7dfda8c51", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("protected_tag_create_access_levels", "users")
   -> 0.0027s
-- add_foreign_key("protected_tags", "projects", {:name=>"fk_8e4af87648", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("push_event_payloads", "events", {:name=>"fk_36c74129da", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("push_rules", "projects", {:name=>"fk_83b29894de", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("release_links", "releases", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("releases", "projects", {:name=>"fk_47fe2a0596", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("releases", "users", {:column=>"author_id", :name=>"fk_8e4456f90f", :on_delete=>:nullify})
   -> 0.0049s
-- add_foreign_key("remote_mirrors", "projects", {:name=>"fk_43a9aa4ca8", :on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("repository_languages", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("resource_label_events", "epics", {:on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("resource_label_events", "issues", {:on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("resource_label_events", "labels", {:on_delete=>:nullify})
   -> 0.0032s
-- add_foreign_key("resource_label_events", "merge_requests", {:on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("resource_label_events", "users", {:on_delete=>:nullify})
   -> 0.0031s
-- add_foreign_key("reviews", "merge_requests", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("reviews", "projects", {:on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("reviews", "users", {:column=>"author_id", :on_delete=>:nullify})
   -> 0.0030s
-- add_foreign_key("saml_providers", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("scim_oauth_access_tokens", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("self_managed_prometheus_alert_events", "environments", {:on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("self_managed_prometheus_alert_events", "projects", {:on_delete=>:cascade})
   -> 0.0059s
-- add_foreign_key("sentry_issues", "issues", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("serverless_domain_cluster", "clusters_applications_knative", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("serverless_domain_cluster", "pages_domains", {:on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("serverless_domain_cluster", "users", {:column=>"creator_id", :on_delete=>:nullify})
   -> 0.0035s
-- add_foreign_key("service_desk_settings", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("services", "projects", {:name=>"fk_71cce407f9", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("slack_integrations", "services", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("smartcard_identities", "users", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("snippet_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("snippet_user_mentions", "snippets", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("snippets", "projects", {:name=>"fk_be41fd4bb7", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("software_license_policies", "projects", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("software_license_policies", "software_licenses", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("subscriptions", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("suggestions", "notes", {:on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("system_note_metadata", "description_versions", {:name=>"fk_fbd87415c9", :on_delete=>:nullify})
   -> 0.0025s
-- add_foreign_key("system_note_metadata", "notes", {:name=>"fk_d83a918cb1", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("term_agreements", "application_setting_terms", {:column=>"term_id"})
   -> 0.0023s
-- add_foreign_key("term_agreements", "users", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("timelogs", "issues", {:name=>"fk_timelogs_issues_issue_id", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("timelogs", "merge_requests", {:name=>"fk_timelogs_merge_requests_merge_request_id", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("todos", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("todos", "notes", {:name=>"fk_91d1f47b13", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("todos", "projects", {:name=>"fk_45054f9c45", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("todos", "users", {:column=>"author_id", :name=>"fk_ccf0373936", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("todos", "users", {:name=>"fk_d94154aa95", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("trending_projects", "projects", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("u2f_registrations", "users")
   -> 0.0027s
-- add_foreign_key("user_callouts", "users", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("user_custom_attributes", "users", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("user_interacted_projects", "projects", {:name=>"fk_722ceba4f7", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("user_interacted_projects", "users", {:name=>"fk_0894651f08", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("user_preferences", "users", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("user_statuses", "users", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("user_synced_attributes_metadata", "users", {:on_delete=>:cascade})
   -> 0.0037s
-- add_foreign_key("users", "application_setting_terms", {:column=>"accepted_term_id", :name=>"fk_789cd90b35", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("users", "namespaces", {:column=>"managing_group_id", :name=>"fk_a4b8fefe3e", :on_delete=>:nullify})
   -> 0.0030s
-- add_foreign_key("users_ops_dashboard_projects", "projects", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("users_ops_dashboard_projects", "users", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("users_security_dashboard_projects", "projects", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("users_security_dashboard_projects", "users", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("users_star_projects", "projects", {:name=>"fk_22cd27ddfc", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("vulnerabilities", "epics", {:name=>"fk_1d37cddf91", :on_delete=>:nullify})
   -> 0.0028s
-- add_foreign_key("vulnerabilities", "milestones", {:column=>"due_date_sourcing_milestone_id", :name=>"fk_7c5bb22a22", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("vulnerabilities", "milestones", {:column=>"start_date_sourcing_milestone_id", :name=>"fk_88b4d546ef", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("vulnerabilities", "milestones", {:name=>"fk_131d289c65", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("vulnerabilities", "projects", {:name=>"fk_efb96ab1e2", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("vulnerabilities", "users", {:column=>"author_id", :name=>"fk_b1de915a15", :on_delete=>:nullify})
   -> 0.0032s
-- add_foreign_key("vulnerabilities", "users", {:column=>"closed_by_id", :name=>"fk_cf5c60acbf", :on_delete=>:nullify})
   -> 0.0050s
-- add_foreign_key("vulnerabilities", "users", {:column=>"last_edited_by_id", :name=>"fk_1302949740", :on_delete=>:nullify})
   -> 0.0052s
-- add_foreign_key("vulnerabilities", "users", {:column=>"resolved_by_id", :name=>"fk_76bc5f5455", :on_delete=>:nullify})
   -> 0.0052s
-- add_foreign_key("vulnerabilities", "users", {:column=>"updated_by_id", :name=>"fk_7ac31eacb9", :on_delete=>:nullify})
   -> 0.0054s
-- add_foreign_key("vulnerability_feedback", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0051s
-- add_foreign_key("vulnerability_feedback", "issues", {:on_delete=>:nullify})
   -> 0.0063s
-- add_foreign_key("vulnerability_feedback", "merge_requests", {:name=>"fk_563ff1912e", :on_delete=>:nullify})
   -> 0.0041s
-- add_foreign_key("vulnerability_feedback", "projects", {:on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("vulnerability_feedback", "users", {:column=>"author_id", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("vulnerability_feedback", "users", {:column=>"comment_author_id", :name=>"fk_94f7c8a81e", :on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("vulnerability_identifiers", "projects", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("vulnerability_issue_links", "issues", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("vulnerability_issue_links", "vulnerabilities", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("vulnerability_occurrence_identifiers", "vulnerability_identifiers", {:column=>"identifier_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("vulnerability_occurrence_identifiers", "vulnerability_occurrences", {:column=>"occurrence_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("vulnerability_occurrence_pipelines", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("vulnerability_occurrence_pipelines", "vulnerability_occurrences", {:column=>"occurrence_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("vulnerability_occurrences", "projects", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("vulnerability_occurrences", "vulnerabilities", {:name=>"fk_97ffe77653", :on_delete=>:nullify})
   -> 0.0021s
-- add_foreign_key("vulnerability_occurrences", "vulnerability_identifiers", {:column=>"primary_identifier_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("vulnerability_occurrences", "vulnerability_scanners", {:column=>"scanner_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("vulnerability_scanners", "projects", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("web_hook_logs", "web_hooks", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("web_hooks", "projects", {:name=>"fk_0c8ca6d9d1", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("zoom_meetings", "issues", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("zoom_meetings", "projects", {:on_delete=>:cascade})
   -> 0.0038s
Database re-creation done in 9.895093736005947
..................................................................................The application_settings table has 1237 columns.
Recreating the database
Dropped database 'gitlabhq_test'
Created database 'gitlabhq_test'
-- enable_extension("pg_trgm")
   -> 0.0140s
-- enable_extension("plpgsql")
   -> 0.0012s
-- create_table("abuse_reports", {:id=>:serial, :force=>:cascade})
   -> 0.0203s
-- create_table("alerts_service_data", {:force=>:cascade})
   -> 0.0212s
-- create_table("allowed_email_domains", {:force=>:cascade})
   -> 0.0172s
-- create_table("analytics_cycle_analytics_group_stages", {:force=>:cascade})
   -> 0.0522s
-- create_table("analytics_cycle_analytics_project_stages", {:force=>:cascade})
   -> 0.0510s
-- create_table("analytics_language_trend_repository_languages", {:id=>false, :force=>:cascade})
   -> 0.0235s
-- create_table("analytics_repository_file_commits", {:force=>:cascade})
   -> 0.0258s
-- create_table("analytics_repository_file_edits", {:force=>:cascade})
   -> 0.0260s
-- create_table("analytics_repository_files", {:force=>:cascade})
   -> 0.0143s
-- create_table("appearances", {:id=>:serial, :force=>:cascade})
   -> 0.0081s
-- create_table("application_setting_terms", {:id=>:serial, :force=>:cascade})
   -> 0.0080s
-- create_table("application_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0648s
-- create_table("approval_merge_request_rule_sources", {:force=>:cascade})
   -> 0.0131s
-- create_table("approval_merge_request_rules", {:force=>:cascade})
   -> 0.0250s
-- create_table("approval_merge_request_rules_approved_approvers", {:force=>:cascade})
   -> 0.0116s
-- create_table("approval_merge_request_rules_groups", {:force=>:cascade})
   -> 0.0130s
-- create_table("approval_merge_request_rules_users", {:force=>:cascade})
   -> 0.0099s
-- create_table("approval_project_rules", {:force=>:cascade})
   -> 0.0183s
-- create_table("approval_project_rules_groups", {:force=>:cascade})
   -> 0.0111s
-- create_table("approval_project_rules_users", {:force=>:cascade})
   -> 0.0174s
-- create_table("approvals", {:id=>:serial, :force=>:cascade})
   -> 0.0232s
-- create_table("approver_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0275s
-- create_table("approvers", {:id=>:serial, :force=>:cascade})
   -> 0.0286s
-- create_table("audit_events", {:id=>:serial, :force=>:cascade})
   -> 0.0292s
-- create_table("award_emoji", {:id=>:serial, :force=>:cascade})
   -> 0.0277s
-- create_table("aws_roles", {:primary_key=>"user_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0232s
-- create_table("badges", {:id=>:serial, :force=>:cascade})
   -> 0.0169s
-- create_table("board_assignees", {:id=>:serial, :force=>:cascade})
   -> 0.0130s
-- create_table("board_group_recent_visits", {:force=>:cascade})
   -> 0.0222s
-- create_table("board_labels", {:id=>:serial, :force=>:cascade})
   -> 0.0151s
-- create_table("board_project_recent_visits", {:force=>:cascade})
   -> 0.0263s
-- create_table("boards", {:id=>:serial, :force=>:cascade})
   -> 0.0179s
-- create_table("broadcast_messages", {:id=>:serial, :force=>:cascade})
   -> 0.0101s
-- create_table("chat_names", {:id=>:serial, :force=>:cascade})
   -> 0.0146s
-- create_table("chat_teams", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("ci_build_needs", {:id=>:serial, :force=>:cascade})
   -> 0.0218s
-- create_table("ci_build_trace_chunks", {:force=>:cascade})
   -> 0.0215s
-- create_table("ci_build_trace_section_names", {:id=>:serial, :force=>:cascade})
   -> 0.0197s
-- create_table("ci_build_trace_sections", {:id=>false, :force=>:cascade})
   -> 0.0284s
-- create_table("ci_builds", {:id=>:serial, :force=>:cascade})
   -> 0.1554s
-- create_table("ci_builds_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0211s
-- create_table("ci_builds_runner_session", {:force=>:cascade})
   -> 0.0088s
-- create_table("ci_group_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0106s
-- create_table("ci_job_artifacts", {:id=>:serial, :force=>:cascade})
   -> 0.0268s
-- create_table("ci_job_variables", {:force=>:cascade})
   -> 0.0141s
-- create_table("ci_pipeline_chat_data", {:force=>:cascade})
   -> 0.0139s
-- create_table("ci_pipeline_schedule_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0099s
-- create_table("ci_pipeline_schedules", {:id=>:serial, :force=>:cascade})
   -> 0.0236s
-- create_table("ci_pipeline_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0239s
-- create_table("ci_pipelines", {:id=>:serial, :force=>:cascade})
   -> 0.0641s
-- create_table("ci_resource_groups", {:force=>:cascade})
   -> 0.0079s
-- create_table("ci_resources", {:force=>:cascade})
   -> 0.0104s
-- create_table("ci_runner_namespaces", {:id=>:serial, :force=>:cascade})
   -> 0.0109s
-- create_table("ci_runner_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0101s
-- create_table("ci_runners", {:id=>:serial, :force=>:cascade})
   -> 0.0293s
-- create_table("ci_sources_pipelines", {:id=>:serial, :force=>:cascade})
   -> 0.0281s
-- create_table("ci_stages", {:id=>:serial, :force=>:cascade})
   -> 0.0403s
-- create_table("ci_subscriptions_projects", {:force=>:cascade})
   -> 0.0141s
-- create_table("ci_trigger_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0152s
-- create_table("ci_triggers", {:id=>:serial, :force=>:cascade})
   -> 0.0139s
-- create_table("ci_variables", {:id=>:serial, :force=>:cascade})
   -> 0.0148s
-- create_table("cluster_groups", {:id=>:serial, :force=>:cascade})
   -> 0.0120s
-- create_table("cluster_platforms_kubernetes", {:id=>:serial, :force=>:cascade})
   -> 0.0102s
-- create_table("cluster_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0112s
-- create_table("cluster_providers_aws", {:force=>:cascade})
   -> 0.0170s
-- create_table("cluster_providers_gcp", {:id=>:serial, :force=>:cascade})
   -> 0.0144s
-- create_table("clusters", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("clusters_applications_cert_managers", {:id=>:serial, :force=>:cascade})
   -> 0.0106s
-- create_table("clusters_applications_crossplane", {:id=>:serial, :force=>:cascade})
   -> 0.0101s
-- create_table("clusters_applications_elastic_stacks", {:force=>:cascade})
   -> 0.0100s
-- create_table("clusters_applications_helm", {:id=>:serial, :force=>:cascade})
   -> 0.0099s
-- create_table("clusters_applications_ingress", {:id=>:serial, :force=>:cascade})
   -> 0.0090s
-- create_table("clusters_applications_jupyter", {:id=>:serial, :force=>:cascade})
   -> 0.0134s
-- create_table("clusters_applications_knative", {:id=>:serial, :force=>:cascade})
   -> 0.0102s
-- create_table("clusters_applications_prometheus", {:id=>:serial, :force=>:cascade})
   -> 0.0098s
-- create_table("clusters_applications_runners", {:id=>:serial, :force=>:cascade})
   -> 0.0121s
-- create_table("clusters_kubernetes_namespaces", {:force=>:cascade})
   -> 0.0325s
-- create_table("commit_user_mentions", {:force=>:cascade})
   -> 0.0207s
-- create_table("container_expiration_policies", {:primary_key=>"project_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0158s
-- create_table("container_repositories", {:id=>:serial, :force=>:cascade})
   -> 0.0271s
-- create_table("conversational_development_index_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0172s
-- create_table("dependency_proxy_blobs", {:id=>:serial, :force=>:cascade})
   -> 0.0134s
-- create_table("dependency_proxy_group_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0084s
-- create_table("deploy_keys_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0123s
-- create_table("deploy_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0182s
-- create_table("deployment_merge_requests", {:id=>false, :force=>:cascade})
   -> 0.0082s
-- create_table("deployments", {:id=>:serial, :force=>:cascade})
   -> 0.0749s
-- create_table("description_versions", {:force=>:cascade})
   -> 0.0171s
-- create_table("design_management_designs", {:force=>:cascade})
   -> 0.0133s
-- create_table("design_management_designs_versions", {:id=>false, :force=>:cascade})
   -> 0.0160s
-- create_table("design_management_versions", {:force=>:cascade})
   -> 0.0178s
-- create_table("design_user_mentions", {:force=>:cascade})
   -> 0.0129s
-- create_table("draft_notes", {:force=>:cascade})
   -> 0.0179s
-- create_table("elasticsearch_indexed_namespaces", {:id=>false, :force=>:cascade})
   -> 0.0046s
-- create_table("elasticsearch_indexed_projects", {:id=>false, :force=>:cascade})
   -> 0.0068s
-- create_table("emails", {:id=>:serial, :force=>:cascade})
   -> 0.0164s
-- create_table("environments", {:id=>:serial, :force=>:cascade})
   -> 0.0213s
-- create_table("epic_issues", {:id=>:serial, :force=>:cascade})
   -> 0.0108s
-- create_table("epic_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0090s
-- create_table("epic_user_mentions", {:force=>:cascade})
   -> 0.0173s
-- create_table("epics", {:id=>:serial, :force=>:cascade})
   -> 0.0462s
-- create_table("events", {:id=>:serial, :force=>:cascade})
   -> 0.0317s
-- create_table("evidences", {:force=>:cascade})
   -> 0.0092s
-- create_table("external_pull_requests", {:force=>:cascade})
   -> 0.0112s
-- create_table("feature_gates", {:id=>:serial, :force=>:cascade})
   -> 0.0099s
-- create_table("features", {:id=>:serial, :force=>:cascade})
   -> 0.0098s
-- create_table("fork_network_members", {:id=>:serial, :force=>:cascade})
   -> 0.0152s
-- create_table("fork_networks", {:id=>:serial, :force=>:cascade})
   -> 0.0098s
-- create_table("forked_project_links", {:id=>:serial, :force=>:cascade})
   -> 0.0072s
-- create_table("geo_cache_invalidation_events", {:force=>:cascade})
   -> 0.0070s
-- create_table("geo_container_repository_updated_events", {:force=>:cascade})
   -> 0.0076s
-- create_table("geo_event_log", {:force=>:cascade})
   -> 0.0515s
-- create_table("geo_hashed_storage_attachments_events", {:force=>:cascade})
   -> 0.0096s
-- create_table("geo_hashed_storage_migrated_events", {:force=>:cascade})
   -> 0.0084s
-- create_table("geo_job_artifact_deleted_events", {:force=>:cascade})
   -> 0.0105s
-- create_table("geo_lfs_object_deleted_events", {:force=>:cascade})
   -> 0.0104s
-- create_table("geo_node_namespace_links", {:id=>:serial, :force=>:cascade})
   -> 0.0153s
-- create_table("geo_node_statuses", {:id=>:serial, :force=>:cascade})
   -> 0.0111s
-- create_table("geo_nodes", {:id=>:serial, :force=>:cascade})
   -> 0.0167s
-- create_table("geo_repositories_changed_events", {:force=>:cascade})
   -> 0.0087s
-- create_table("geo_repository_created_events", {:force=>:cascade})
   -> 0.0104s
-- create_table("geo_repository_deleted_events", {:force=>:cascade})
   -> 0.0089s
-- create_table("geo_repository_renamed_events", {:force=>:cascade})
   -> 0.0095s
-- create_table("geo_repository_updated_events", {:force=>:cascade})
   -> 0.0136s
-- create_table("geo_reset_checksum_events", {:force=>:cascade})
   -> 0.0100s
-- create_table("geo_upload_deleted_events", {:force=>:cascade})
   -> 0.0096s
-- create_table("gitlab_subscription_histories", {:force=>:cascade})
   -> 0.0087s
-- create_table("gitlab_subscriptions", {:force=>:cascade})
   -> 0.0108s
-- create_table("gpg_key_subkeys", {:id=>:serial, :force=>:cascade})
   -> 0.0154s
-- create_table("gpg_keys", {:id=>:serial, :force=>:cascade})
   -> 0.0160s
-- create_table("gpg_signatures", {:id=>:serial, :force=>:cascade})
   -> 0.0234s
-- create_table("grafana_integrations", {:force=>:cascade})
   -> 0.0137s
-- create_table("group_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0133s
-- create_table("group_deletion_schedules", {:primary_key=>"group_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0114s
-- create_table("group_group_links", {:force=>:cascade})
   -> 0.0104s
-- create_table("historical_data", {:id=>:serial, :force=>:cascade})
   -> 0.0034s
-- create_table("identities", {:id=>:serial, :force=>:cascade})
   -> 0.0164s
-- create_table("import_export_uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0158s
-- create_table("import_failures", {:force=>:cascade})
   -> 0.0135s
-- create_table("index_statuses", {:id=>:serial, :force=>:cascade})
   -> 0.0095s
-- create_table("insights", {:id=>:serial, :force=>:cascade})
   -> 0.0109s
-- create_table("internal_ids", {:force=>:cascade})
   -> 0.0178s
-- create_table("ip_restrictions", {:force=>:cascade})
   -> 0.0109s
-- create_table("issue_assignees", {:id=>false, :force=>:cascade})
   -> 0.0084s
-- create_table("issue_links", {:id=>:serial, :force=>:cascade})
   -> 0.0147s
-- create_table("issue_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0112s
-- create_table("issue_tracker_data", {:force=>:cascade})
   -> 0.0090s
-- create_table("issue_user_mentions", {:force=>:cascade})
   -> 0.0198s
-- create_table("issues", {:id=>:serial, :force=>:cascade})
   -> 0.0875s
-- create_table("issues_prometheus_alert_events", {:id=>false, :force=>:cascade})
   -> 0.0088s
-- create_table("issues_self_managed_prometheus_alert_events", {:id=>false, :force=>:cascade})
   -> 0.0093s
-- create_table("jira_connect_installations", {:force=>:cascade})
   -> 0.0088s
-- create_table("jira_connect_subscriptions", {:force=>:cascade})
   -> 0.0141s
-- create_table("jira_tracker_data", {:force=>:cascade})
   -> 0.0104s
-- create_table("keys", {:id=>:serial, :force=>:cascade})
   -> 0.0241s
-- create_table("label_links", {:id=>:serial, :force=>:cascade})
   -> 0.0122s
-- create_table("label_priorities", {:id=>:serial, :force=>:cascade})
   -> 0.0143s
-- create_table("labels", {:id=>:serial, :force=>:cascade})
   -> 0.0305s
-- create_table("ldap_group_links", {:id=>:serial, :force=>:cascade})
   -> 0.0063s
-- create_table("lfs_file_locks", {:id=>:serial, :force=>:cascade})
   -> 0.0129s
-- create_table("lfs_objects", {:id=>:serial, :force=>:cascade})
   -> 0.0131s
-- create_table("lfs_objects_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0117s
-- create_table("licenses", {:id=>:serial, :force=>:cascade})
   -> 0.0066s
-- create_table("list_user_preferences", {:force=>:cascade})
   -> 0.0163s
-- create_table("lists", {:id=>:serial, :force=>:cascade})
   -> 0.0227s
-- create_table("members", {:id=>:serial, :force=>:cascade})
   -> 0.0459s
-- create_table("merge_request_assignees", {:force=>:cascade})
   -> 0.0149s
-- create_table("merge_request_blocks", {:force=>:cascade})
   -> 0.0120s
-- create_table("merge_request_diff_commits", {:id=>false, :force=>:cascade})
   -> 0.0189s
-- create_table("merge_request_diff_files", {:id=>false, :force=>:cascade})
   -> 0.0075s
-- create_table("merge_request_diffs", {:id=>:serial, :force=>:cascade})
   -> 0.0137s
-- create_table("merge_request_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0333s
-- create_table("merge_request_user_mentions", {:force=>:cascade})
   -> 0.0187s
-- create_table("merge_requests", {:id=>:serial, :force=>:cascade})
   -> 0.1824s
-- create_table("merge_requests_closing_issues", {:id=>:serial, :force=>:cascade})
   -> 0.0240s
-- create_table("merge_trains", {:force=>:cascade})
   -> 0.0425s
-- create_table("milestone_releases", {:id=>false, :force=>:cascade})
   -> 0.0197s
-- create_table("milestones", {:id=>:serial, :force=>:cascade})
   -> 0.0561s
-- create_table("namespace_aggregation_schedules", {:primary_key=>"namespace_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0133s
-- create_table("namespace_root_storage_statistics", {:primary_key=>"namespace_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0212s
-- create_table("namespace_statistics", {:id=>:serial, :force=>:cascade})
   -> 0.0168s
-- create_table("namespaces", {:id=>:serial, :force=>:cascade})
   -> 0.1647s
-- create_table("note_diff_files", {:id=>:serial, :force=>:cascade})
   -> 0.0227s
-- create_table("notes", {:id=>:serial, :force=>:cascade})
   -> 0.0924s
-- create_table("notification_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0404s
-- create_table("oauth_access_grants", {:id=>:serial, :force=>:cascade})
   -> 0.0209s
-- create_table("oauth_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0441s
-- create_table("oauth_applications", {:id=>:serial, :force=>:cascade})
   -> 0.0306s
-- create_table("oauth_openid_requests", {:id=>:serial, :force=>:cascade})
   -> 0.0205s
-- create_table("operations_feature_flag_scopes", {:force=>:cascade})
   -> 0.0167s
-- create_table("operations_feature_flags", {:force=>:cascade})
   -> 0.0136s
-- create_table("operations_feature_flags_clients", {:force=>:cascade})
   -> 0.0122s
-- create_table("packages_build_infos", {:force=>:cascade})
   -> 0.0146s
-- create_table("packages_conan_file_metadata", {:force=>:cascade})
   -> 0.0147s
-- create_table("packages_conan_metadata", {:force=>:cascade})
   -> 0.0168s
-- create_table("packages_dependencies", {:force=>:cascade})
   -> 0.0172s
-- create_table("packages_dependency_links", {:force=>:cascade})
   -> 0.0184s
-- create_table("packages_maven_metadata", {:force=>:cascade})
   -> 0.0154s
-- create_table("packages_package_files", {:force=>:cascade})
   -> 0.0146s
-- create_table("packages_package_tags", {:force=>:cascade})
   -> 0.0109s
-- create_table("packages_packages", {:force=>:cascade})
   -> 0.0236s
-- create_table("pages_domain_acme_orders", {:force=>:cascade})
   -> 0.0200s
-- create_table("pages_domains", {:id=>:serial, :force=>:cascade})
   -> 0.0619s
-- create_table("path_locks", {:id=>:serial, :force=>:cascade})
   -> 0.0257s
-- create_table("personal_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0319s
-- create_table("plan_limits", {:force=>:cascade})
   -> 0.0156s
-- create_table("plans", {:id=>:serial, :force=>:cascade})
   -> 0.0202s
-- create_table("pool_repositories", {:force=>:cascade})
   -> 0.0359s
-- create_table("programming_languages", {:id=>:serial, :force=>:cascade})
   -> 0.0199s
-- create_table("project_alerting_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0101s
-- create_table("project_aliases", {:force=>:cascade})
   -> 0.0320s
-- create_table("project_authorizations", {:id=>false, :force=>:cascade})
   -> 0.0203s
-- create_table("project_auto_devops", {:id=>:serial, :force=>:cascade})
   -> 0.0170s
-- create_table("project_ci_cd_settings", {:id=>:serial, :force=>:cascade})
   -> 0.0188s
-- create_table("project_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0313s
-- create_table("project_daily_statistics", {:force=>:cascade})
   -> 0.0162s
-- create_table("project_deploy_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0248s
-- create_table("project_error_tracking_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0056s
-- create_table("project_feature_usages", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0283s
-- create_table("project_features", {:id=>:serial, :force=>:cascade})
   -> 0.0195s
-- create_table("project_group_links", {:id=>:serial, :force=>:cascade})
   -> 0.0261s
-- create_table("project_import_data", {:id=>:serial, :force=>:cascade})
   -> 0.0200s
-- create_table("project_incident_management_settings", {:primary_key=>"project_id", :id=>:serial, :force=>:cascade})
   -> 0.0137s
-- create_table("project_metrics_settings", {:primary_key=>"project_id", :id=>:integer, :default=>nil, :force=>:cascade})
   -> 0.0110s
-- create_table("project_mirror_data", {:id=>:serial, :force=>:cascade})
   -> 0.0625s
-- create_table("project_pages_metadata", {:id=>false, :force=>:cascade})
   -> 0.0208s
-- create_table("project_repositories", {:force=>:cascade})
   -> 0.0363s
-- create_table("project_repository_states", {:id=>:serial, :force=>:cascade})
   -> 0.0628s
-- create_table("project_statistics", {:id=>:serial, :force=>:cascade})
   -> 0.0322s
-- create_table("project_tracing_settings", {:force=>:cascade})
   -> 0.0206s
-- create_table("projects", {:id=>:serial, :force=>:cascade})
   -> 0.2608s
-- create_table("prometheus_alert_events", {:force=>:cascade})
   -> 0.0290s
-- create_table("prometheus_alerts", {:id=>:serial, :force=>:cascade})
   -> 0.0342s
-- create_table("prometheus_metrics", {:id=>:serial, :force=>:cascade})
   -> 0.0476s
-- create_table("protected_branch_merge_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0366s
-- create_table("protected_branch_push_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0338s
-- create_table("protected_branch_unprotect_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0346s
-- create_table("protected_branches", {:id=>:serial, :force=>:cascade})
   -> 0.0299s
-- create_table("protected_environment_deploy_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0350s
-- create_table("protected_environments", {:id=>:serial, :force=>:cascade})
   -> 0.0291s
-- create_table("protected_tag_create_access_levels", {:id=>:serial, :force=>:cascade})
   -> 0.0347s
-- create_table("protected_tags", {:id=>:serial, :force=>:cascade})
   -> 0.0283s
-- create_table("push_event_payloads", {:id=>false, :force=>:cascade})
   -> 0.0140s
-- create_table("push_rules", {:id=>:serial, :force=>:cascade})
   -> 0.0178s
-- create_table("redirect_routes", {:id=>:serial, :force=>:cascade})
   -> 0.0178s
-- create_table("release_links", {:force=>:cascade})
   -> 0.0245s
-- create_table("releases", {:id=>:serial, :force=>:cascade})
   -> 0.0296s
-- create_table("remote_mirrors", {:id=>:serial, :force=>:cascade})
   -> 0.0306s
-- create_table("repository_languages", {:id=>false, :force=>:cascade})
   -> 0.0117s
-- create_table("resource_label_events", {:force=>:cascade})
   -> 0.0531s
-- create_table("reviews", {:force=>:cascade})
   -> 0.0322s
-- create_table("routes", {:id=>:serial, :force=>:cascade})
   -> 0.0365s
-- create_table("saml_providers", {:id=>:serial, :force=>:cascade})
   -> 0.0229s
-- create_table("scim_oauth_access_tokens", {:id=>:serial, :force=>:cascade})
   -> 0.0207s
-- create_table("self_managed_prometheus_alert_events", {:force=>:cascade})
   -> 0.0281s
-- create_table("sent_notifications", {:id=>:serial, :force=>:cascade})
   -> 0.0210s
-- create_table("sentry_issues", {:force=>:cascade})
   -> 0.0157s
-- create_table("serverless_domain_cluster", {:primary_key=>"uuid", :id=>:string, :limit=>14, :force=>:cascade})
   -> 0.0310s
-- create_table("service_desk_settings", {:primary_key=>"project_id", :id=>:bigint, :default=>nil, :force=>:cascade})
   -> 0.0112s
-- create_table("services", {:id=>:serial, :force=>:cascade})
   -> 0.0522s
-- create_table("shards", {:id=>:serial, :force=>:cascade})
   -> 0.0200s
-- create_table("slack_integrations", {:id=>:serial, :force=>:cascade})
   -> 0.0289s
-- create_table("smartcard_identities", {:force=>:cascade})
   -> 0.0298s
-- create_table("snippet_user_mentions", {:force=>:cascade})
   -> 0.0350s
-- create_table("snippets", {:id=>:serial, :force=>:cascade})
   -> 0.0732s
-- create_table("software_license_policies", {:id=>:serial, :force=>:cascade})
   -> 0.0259s
-- create_table("software_licenses", {:id=>:serial, :force=>:cascade})
   -> 0.0283s
-- create_table("spam_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0145s
-- create_table("subscriptions", {:id=>:serial, :force=>:cascade})
   -> 0.0298s
-- create_table("suggestions", {:force=>:cascade})
   -> 0.0214s
-- create_table("system_note_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0147s
-- create_table("taggings", {:id=>:serial, :force=>:cascade})
   -> 0.0213s
-- create_table("tags", {:id=>:serial, :force=>:cascade})
   -> 0.0116s
-- create_table("term_agreements", {:id=>:serial, :force=>:cascade})
   -> 0.0148s
-- create_table("timelogs", {:id=>:serial, :force=>:cascade})
   -> 0.0372s
-- create_table("todos", {:id=>:serial, :force=>:cascade})
   -> 0.0849s
-- create_table("trending_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0158s
-- create_table("u2f_registrations", {:id=>:serial, :force=>:cascade})
   -> 0.0285s
-- create_table("uploads", {:id=>:serial, :force=>:cascade})
   -> 0.0458s
-- create_table("user_agent_details", {:id=>:serial, :force=>:cascade})
   -> 0.0226s
-- create_table("user_callouts", {:id=>:serial, :force=>:cascade})
   -> 0.0260s
-- create_table("user_custom_attributes", {:id=>:serial, :force=>:cascade})
   -> 0.0285s
-- create_table("user_interacted_projects", {:id=>false, :force=>:cascade})
   -> 0.0208s
-- create_table("user_preferences", {:id=>:serial, :force=>:cascade})
   -> 0.0244s
-- create_table("user_statuses", {:primary_key=>"user_id", :id=>:serial, :force=>:cascade})
   -> 0.0231s
-- create_table("user_synced_attributes_metadata", {:id=>:serial, :force=>:cascade})
   -> 0.0250s
-- create_table("users", {:id=>:serial, :force=>:cascade})
   -> 0.1986s
-- create_table("users_ops_dashboard_projects", {:force=>:cascade})
   -> 0.0273s
-- create_table("users_security_dashboard_projects", {:id=>false, :force=>:cascade})
   -> 0.0202s
-- create_table("users_star_projects", {:id=>:serial, :force=>:cascade})
   -> 0.0261s
-- create_table("vulnerabilities", {:force=>:cascade})
   -> 0.0858s
-- create_table("vulnerability_feedback", {:id=>:serial, :force=>:cascade})
   -> 0.0316s
-- create_table("vulnerability_identifiers", {:force=>:cascade})
   -> 0.0105s
-- create_table("vulnerability_issue_links", {:force=>:cascade})
   -> 0.0193s
-- create_table("vulnerability_occurrence_identifiers", {:force=>:cascade})
   -> 0.0171s
-- create_table("vulnerability_occurrence_pipelines", {:force=>:cascade})
   -> 0.0208s
-- create_table("vulnerability_occurrences", {:force=>:cascade})
   -> 0.0493s
-- create_table("vulnerability_scanners", {:force=>:cascade})
   -> 0.0210s
-- create_table("web_hook_logs", {:id=>:serial, :force=>:cascade})
   -> 0.0206s
-- create_table("web_hooks", {:id=>:serial, :force=>:cascade})
   -> 0.0172s
-- create_table("zoom_meetings", {:force=>:cascade})
   -> 0.0187s
-- add_foreign_key("alerts_service_data", "services", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("allowed_email_domains", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "labels", {:column=>"end_event_label_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "labels", {:column=>"start_event_label_id", :on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("analytics_cycle_analytics_group_stages", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "labels", {:column=>"end_event_label_id", :on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "labels", {:column=>"start_event_label_id", :on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("analytics_cycle_analytics_project_stages", "projects", {:on_delete=>:cascade})
   -> 0.0057s
-- add_foreign_key("analytics_language_trend_repository_languages", "programming_languages", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("analytics_language_trend_repository_languages", "projects", {:on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("analytics_repository_file_commits", "analytics_repository_files", {:on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("analytics_repository_file_commits", "projects", {:on_delete=>:cascade})
   -> 0.0037s
-- add_foreign_key("analytics_repository_file_edits", "analytics_repository_files", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("analytics_repository_file_edits", "projects", {:on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("analytics_repository_files", "projects", {:on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("application_settings", "namespaces", {:column=>"custom_project_templates_group_id", :on_delete=>:nullify})
   -> 0.0061s
-- add_foreign_key("application_settings", "projects", {:column=>"file_template_project_id", :name=>"fk_ec757bd087", :on_delete=>:nullify})
   -> 0.0049s
-- add_foreign_key("application_settings", "projects", {:column=>"instance_administration_project_id", :on_delete=>:nullify})
   -> 0.0047s
-- add_foreign_key("application_settings", "users", {:column=>"usage_stats_set_by_user_id", :name=>"fk_964370041d", :on_delete=>:nullify})
   -> 0.0055s
-- add_foreign_key("approval_merge_request_rule_sources", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("approval_merge_request_rule_sources", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("approval_merge_request_rules", "merge_requests", {:on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("approval_merge_request_rules_approved_approvers", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("approval_merge_request_rules_approved_approvers", "users", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("approval_merge_request_rules_groups", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approval_merge_request_rules_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("approval_merge_request_rules_users", "approval_merge_request_rules", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("approval_merge_request_rules_users", "users", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("approval_project_rules", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("approval_project_rules_groups", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("approval_project_rules_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approval_project_rules_users", "approval_project_rules", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("approval_project_rules_users", "users", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("approvals", "merge_requests", {:name=>"fk_310d714958", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("approver_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("aws_roles", "users", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("badges", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("badges", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("board_assignees", "boards", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("board_assignees", "users", {:column=>"assignee_id", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("board_group_recent_visits", "boards", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("board_group_recent_visits", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("board_group_recent_visits", "users", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("board_labels", "boards", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("board_labels", "labels", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("board_project_recent_visits", "boards", {:on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("board_project_recent_visits", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("board_project_recent_visits", "users", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("boards", "namespaces", {:column=>"group_id", :name=>"fk_1e9a074a35", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("boards", "projects", {:name=>"fk_f15266b5f9", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("chat_teams", "namespaces", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_build_needs", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0036s
-- add_foreign_key("ci_build_trace_chunks", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_build_trace_section_names", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_build_trace_sections", "ci_build_trace_section_names", {:column=>"section_name_id", :name=>"fk_264e112c66", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("ci_build_trace_sections", "ci_builds", {:column=>"build_id", :name=>"fk_4ebe41f502", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_build_trace_sections", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"auto_canceled_by_id", :name=>"fk_a2141b1522", :on_delete=>:nullify})
   -> 0.0030s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"commit_id", :name=>"fk_d3130c9a7f", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_builds", "ci_pipelines", {:column=>"upstream_pipeline_id", :name=>"fk_87f4cefcda", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_builds", "ci_resource_groups", {:column=>"resource_group_id", :name=>"fk_6661f4f0e8", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("ci_builds", "ci_stages", {:column=>"stage_id", :name=>"fk_3a9eaa254d", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_builds", "projects", {:name=>"fk_befce0568a", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("ci_builds_metadata", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_builds_metadata", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_builds_runner_session", "ci_builds", {:column=>"build_id", :on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("ci_group_variables", "namespaces", {:column=>"group_id", :name=>"fk_33ae4d58d8", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_job_artifacts", "ci_builds", {:column=>"job_id", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_job_artifacts", "projects", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_job_variables", "ci_builds", {:column=>"job_id", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_pipeline_chat_data", "chat_names", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_pipeline_chat_data", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("ci_pipeline_schedule_variables", "ci_pipeline_schedules", {:column=>"pipeline_schedule_id", :name=>"fk_41c35fda51", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_pipeline_schedules", "projects", {:name=>"fk_8ead60fcc4", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_pipeline_schedules", "users", {:column=>"owner_id", :name=>"fk_9ea99f58d2", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("ci_pipeline_variables", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_f29c5f4380", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_pipelines", "ci_pipeline_schedules", {:column=>"pipeline_schedule_id", :name=>"fk_3d34ab2e06", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("ci_pipelines", "ci_pipelines", {:column=>"auto_canceled_by_id", :name=>"fk_262d4c2d19", :on_delete=>:nullify})
   -> 0.0022s
-- add_foreign_key("ci_pipelines", "external_pull_requests", {:name=>"fk_190998ef09", :on_delete=>:nullify})
   -> 0.0029s
-- add_foreign_key("ci_pipelines", "merge_requests", {:name=>"fk_a23be95014", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_pipelines", "projects", {:name=>"fk_86635dbd80", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("ci_resource_groups", "projects", {:name=>"fk_774722d144", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_resources", "ci_builds", {:column=>"build_id", :name=>"fk_e169a8e3d5", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("ci_resources", "ci_resource_groups", {:column=>"resource_group_id", :on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("ci_runner_namespaces", "ci_runners", {:column=>"runner_id", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("ci_runner_namespaces", "namespaces", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_runner_projects", "projects", {:name=>"fk_4478a6f1e4", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_sources_pipelines", "ci_builds", {:column=>"source_job_id", :name=>"fk_be5624bf37", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_sources_pipelines", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_e1bad85861", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_sources_pipelines", "ci_pipelines", {:column=>"source_pipeline_id", :name=>"fk_d4e29af7d7", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_sources_pipelines", "projects", {:column=>"source_project_id", :name=>"fk_acd9737679", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_sources_pipelines", "projects", {:name=>"fk_1e53c97c0a", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("ci_stages", "ci_pipelines", {:column=>"pipeline_id", :name=>"fk_fb57e6cc56", :on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("ci_stages", "projects", {:name=>"fk_2360681d1d", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_subscriptions_projects", "projects", {:column=>"downstream_project_id", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_subscriptions_projects", "projects", {:column=>"upstream_project_id", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("ci_trigger_requests", "ci_triggers", {:column=>"trigger_id", :name=>"fk_b8ec8b7245", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("ci_triggers", "projects", {:name=>"fk_e3e63f966e", :on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("ci_triggers", "users", {:column=>"owner_id", :name=>"fk_e8e10d1964", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("ci_variables", "projects", {:name=>"fk_ada5eb64b3", :on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("cluster_groups", "clusters", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("cluster_groups", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("cluster_platforms_kubernetes", "clusters", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("cluster_projects", "clusters", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("cluster_projects", "projects", {:on_delete=>:cascade})
   -> 0.0037s
-- add_foreign_key("cluster_providers_aws", "clusters", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("cluster_providers_aws", "users", {:column=>"created_by_user_id", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("cluster_providers_gcp", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters", "projects", {:column=>"management_project_id", :name=>"fk_f05c5e5a42", :on_delete=>:nullify})
   -> 0.0025s
-- add_foreign_key("clusters", "users", {:on_delete=>:nullify})
   -> 0.0026s
-- add_foreign_key("clusters_applications_cert_managers", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_crossplane", "clusters", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("clusters_applications_elastic_stacks", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_helm", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_ingress", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_jupyter", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_jupyter", "oauth_applications", {:on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("clusters_applications_knative", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_applications_prometheus", "clusters", {:name=>"fk_557e773639", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("clusters_applications_runners", "ci_runners", {:column=>"runner_id", :name=>"fk_02de2ded36", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("clusters_applications_runners", "clusters", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("clusters_kubernetes_namespaces", "cluster_projects", {:on_delete=>:nullify})
   -> 0.0028s
-- add_foreign_key("clusters_kubernetes_namespaces", "clusters", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("clusters_kubernetes_namespaces", "environments", {:on_delete=>:nullify})
   -> 0.0057s
-- add_foreign_key("clusters_kubernetes_namespaces", "projects", {:on_delete=>:nullify})
   -> 0.0051s
-- add_foreign_key("commit_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("container_expiration_policies", "projects", {:on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("container_repositories", "projects")
   -> 0.0016s
-- add_foreign_key("dependency_proxy_blobs", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("dependency_proxy_group_settings", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("deploy_keys_projects", "projects", {:name=>"fk_58a901ca7e", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("deployment_merge_requests", "deployments", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("deployment_merge_requests", "merge_requests", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("deployments", "clusters", {:name=>"fk_289bba3222", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("deployments", "projects", {:name=>"fk_b9a3851b82", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("description_versions", "epics", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("description_versions", "issues", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("description_versions", "merge_requests", {:on_delete=>:cascade})
   -> 0.0021s
-- add_foreign_key("design_management_designs", "issues", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("design_management_designs", "projects", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("design_management_designs_versions", "design_management_designs", {:column=>"design_id", :name=>"fk_03c671965c", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("design_management_designs_versions", "design_management_versions", {:column=>"version_id", :name=>"fk_f4d25ba00c", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("design_management_versions", "issues", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("design_management_versions", "users", {:column=>"author_id", :name=>"fk_c1440b4896", :on_delete=>:nullify})
   -> 0.0049s
-- add_foreign_key("design_user_mentions", "design_management_designs", {:column=>"design_id", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("design_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("draft_notes", "merge_requests", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("draft_notes", "users", {:column=>"author_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("elasticsearch_indexed_namespaces", "namespaces", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("elasticsearch_indexed_projects", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("environments", "projects", {:name=>"fk_d1c8c1da6a", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("epic_issues", "epics", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("epic_issues", "issues", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("epic_metrics", "epics", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("epic_user_mentions", "epics", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("epic_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("epics", "epics", {:column=>"due_date_sourcing_epic_id", :name=>"fk_013c9f36ca", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("epics", "epics", {:column=>"parent_id", :name=>"fk_25b99c1be3", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("epics", "epics", {:column=>"start_date_sourcing_epic_id", :name=>"fk_9d480c64b2", :on_delete=>:nullify})
   -> 0.0014s
-- add_foreign_key("epics", "milestones", {:on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("epics", "namespaces", {:column=>"group_id", :name=>"fk_f081aa4489", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("epics", "users", {:column=>"assignee_id", :name=>"fk_dccd3f98fc", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("epics", "users", {:column=>"author_id", :name=>"fk_3654b61b03", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("epics", "users", {:column=>"closed_by_id", :name=>"fk_aa5798e761", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("events", "namespaces", {:column=>"group_id", :name=>"fk_61fbf6ca48", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("events", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("events", "users", {:column=>"author_id", :name=>"fk_edfd187b6f", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("evidences", "releases", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("external_pull_requests", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("fork_network_members", "fork_networks", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("fork_network_members", "projects", {:column=>"forked_from_project_id", :name=>"fk_b01280dae4", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("fork_network_members", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("fork_networks", "projects", {:column=>"root_project_id", :name=>"fk_e7b436b2b5", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("forked_project_links", "projects", {:column=>"forked_to_project_id", :name=>"fk_434510edb0", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_container_repository_updated_events", "container_repositories", {:name=>"fk_212c89c706", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("geo_event_log", "geo_cache_invalidation_events", {:column=>"cache_invalidation_event_id", :name=>"fk_42c3b54bed", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("geo_event_log", "geo_container_repository_updated_events", {:column=>"container_repository_updated_event_id", :name=>"fk_6ada82d42a", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("geo_event_log", "geo_hashed_storage_migrated_events", {:column=>"hashed_storage_migrated_event_id", :name=>"fk_27548c6db3", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("geo_event_log", "geo_job_artifact_deleted_events", {:column=>"job_artifact_deleted_event_id", :name=>"fk_176d3fbb5d", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("geo_event_log", "geo_lfs_object_deleted_events", {:column=>"lfs_object_deleted_event_id", :name=>"fk_d5af95fcd9", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("geo_event_log", "geo_repositories_changed_events", {:column=>"repositories_changed_event_id", :name=>"fk_4a99ebfd60", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("geo_event_log", "geo_repository_created_events", {:column=>"repository_created_event_id", :name=>"fk_9b9afb1916", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("geo_event_log", "geo_repository_deleted_events", {:column=>"repository_deleted_event_id", :name=>"fk_c4b1c1f66e", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("geo_event_log", "geo_repository_renamed_events", {:column=>"repository_renamed_event_id", :name=>"fk_86c84214ec", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("geo_event_log", "geo_repository_updated_events", {:column=>"repository_updated_event_id", :name=>"fk_78a6492f68", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_event_log", "geo_reset_checksum_events", {:column=>"reset_checksum_event_id", :name=>"fk_cff7185ad2", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("geo_event_log", "geo_upload_deleted_events", {:column=>"upload_deleted_event_id", :name=>"fk_c1f241c70d", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("geo_hashed_storage_attachments_events", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_hashed_storage_migrated_events", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_node_namespace_links", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("geo_node_namespace_links", "namespaces", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("geo_node_statuses", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("geo_repositories_changed_events", "geo_nodes", {:on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("geo_repository_created_events", "projects", {:on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("geo_repository_renamed_events", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("geo_repository_updated_events", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("geo_reset_checksum_events", "projects", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("gitlab_subscriptions", "namespaces", {:name=>"fk_e2595d00a1", :on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("gitlab_subscriptions", "plans", {:column=>"hosted_plan_id", :name=>"fk_bd0c4019c3", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("gpg_key_subkeys", "gpg_keys", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("gpg_keys", "users", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("gpg_signatures", "gpg_key_subkeys", {:on_delete=>:nullify})
   -> 0.0055s
-- add_foreign_key("gpg_signatures", "gpg_keys", {:on_delete=>:nullify})
   -> 0.0040s
-- add_foreign_key("gpg_signatures", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("grafana_integrations", "projects", {:on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("group_custom_attributes", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("group_deletion_schedules", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("group_deletion_schedules", "users", {:name=>"fk_11e3ebfcdd", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("group_group_links", "namespaces", {:column=>"shared_group_id", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("group_group_links", "namespaces", {:column=>"shared_with_group_id", :on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("identities", "saml_providers", {:name=>"fk_aade90f0fc", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("import_export_uploads", "namespaces", {:column=>"group_id", :name=>"fk_83319d9721", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("import_export_uploads", "projects", {:on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("index_statuses", "projects", {:name=>"fk_74b2492545", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("insights", "namespaces", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("insights", "projects", {:on_delete=>:cascade})
   -> 0.0058s
-- add_foreign_key("internal_ids", "namespaces", {:name=>"fk_162941d509", :on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("internal_ids", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("ip_restrictions", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("issue_assignees", "issues", {:name=>"fk_b7d881734a", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("issue_assignees", "users", {:name=>"fk_5e0c8d9154", :on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("issue_links", "issues", {:column=>"source_id", :name=>"fk_c900194ff2", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("issue_links", "issues", {:column=>"target_id", :name=>"fk_e71bb44f1f", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("issue_metrics", "issues", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("issue_tracker_data", "services", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("issue_user_mentions", "issues", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("issue_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("issues", "epics", {:column=>"promoted_to_epic_id", :name=>"fk_df75a7c8b8", :on_delete=>:nullify})
   -> 0.0014s
-- add_foreign_key("issues", "issues", {:column=>"duplicated_to_id", :name=>"fk_9c4516d665", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("issues", "issues", {:column=>"moved_to_id", :name=>"fk_a194299be1", :on_delete=>:nullify})
   -> 0.0014s
-- add_foreign_key("issues", "milestones", {:name=>"fk_96b1dd429c", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("issues", "projects", {:name=>"fk_899c8f3231", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("issues", "users", {:column=>"author_id", :name=>"fk_05f1e72feb", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("issues", "users", {:column=>"closed_by_id", :name=>"fk_c63cbf6c25", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("issues", "users", {:column=>"updated_by_id", :name=>"fk_ffed080f01", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("issues_prometheus_alert_events", "issues", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("issues_prometheus_alert_events", "prometheus_alert_events", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("issues_self_managed_prometheus_alert_events", "issues", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("issues_self_managed_prometheus_alert_events", "self_managed_prometheus_alert_events", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("jira_connect_subscriptions", "jira_connect_installations", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("jira_connect_subscriptions", "namespaces", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("jira_tracker_data", "services", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("label_links", "labels", {:name=>"fk_d97dd08678", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("label_priorities", "labels", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("label_priorities", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("labels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("labels", "projects", {:name=>"fk_7de4989a69", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("lfs_file_locks", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("lfs_file_locks", "users", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("list_user_preferences", "lists", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("list_user_preferences", "users", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("lists", "boards", {:name=>"fk_0d3f677137", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("lists", "labels", {:name=>"fk_7a5553d60f", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("lists", "milestones", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("lists", "users", {:name=>"fk_d6cf4279f7", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("members", "users", {:name=>"fk_2e88fb7ce9", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("merge_request_assignees", "merge_requests", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("merge_request_assignees", "users", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("merge_request_blocks", "merge_requests", {:column=>"blocked_merge_request_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("merge_request_blocks", "merge_requests", {:column=>"blocking_merge_request_id", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("merge_request_diff_commits", "merge_request_diffs", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("merge_request_diff_files", "merge_request_diffs", {:on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("merge_request_diffs", "merge_requests", {:name=>"fk_8483f3258f", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("merge_request_metrics", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("merge_request_metrics", "merge_requests", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("merge_request_metrics", "users", {:column=>"latest_closed_by_id", :name=>"fk_ae440388cc", :on_delete=>:nullify})
   -> 0.0049s
-- add_foreign_key("merge_request_metrics", "users", {:column=>"merged_by_id", :name=>"fk_7f28d925f3", :on_delete=>:nullify})
   -> 0.0038s
-- add_foreign_key("merge_request_user_mentions", "merge_requests", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("merge_request_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("merge_requests", "ci_pipelines", {:column=>"head_pipeline_id", :name=>"fk_fd82eae0b9", :on_delete=>:nullify})
   -> 0.0025s
-- add_foreign_key("merge_requests", "merge_request_diffs", {:column=>"latest_merge_request_diff_id", :name=>"fk_06067f5644", :on_delete=>:nullify})
   -> 0.0024s
-- add_foreign_key("merge_requests", "milestones", {:name=>"fk_6a5165a692", :on_delete=>:nullify})
   -> 0.0023s
-- add_foreign_key("merge_requests", "projects", {:column=>"source_project_id", :name=>"fk_3308fe130c", :on_delete=>:nullify})
   -> 0.0031s
-- add_foreign_key("merge_requests", "projects", {:column=>"target_project_id", :name=>"fk_a6963e8447", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("merge_requests", "users", {:column=>"assignee_id", :name=>"fk_6149611a04", :on_delete=>:nullify})
   -> 0.0054s
-- add_foreign_key("merge_requests", "users", {:column=>"author_id", :name=>"fk_e719a85f8a", :on_delete=>:nullify})
   -> 0.0053s
-- add_foreign_key("merge_requests", "users", {:column=>"merge_user_id", :name=>"fk_ad525e1f87", :on_delete=>:nullify})
   -> 0.0052s
-- add_foreign_key("merge_requests", "users", {:column=>"updated_by_id", :name=>"fk_641731faff", :on_delete=>:nullify})
   -> 0.0052s
-- add_foreign_key("merge_requests_closing_issues", "issues", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("merge_requests_closing_issues", "merge_requests", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("merge_trains", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0048s
-- add_foreign_key("merge_trains", "merge_requests", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("merge_trains", "projects", {:column=>"target_project_id", :on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("merge_trains", "users", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("milestone_releases", "milestones", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("milestone_releases", "releases", {:on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("milestones", "namespaces", {:column=>"group_id", :name=>"fk_95650a40d4", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("milestones", "projects", {:name=>"fk_9bd0a0c791", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("namespace_aggregation_schedules", "namespaces", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("namespace_root_storage_statistics", "namespaces", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("namespace_statistics", "namespaces", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("namespaces", "namespaces", {:column=>"custom_project_templates_group_id", :name=>"fk_e7a0b20a6b", :on_delete=>:nullify})
   -> 0.0047s
-- add_foreign_key("namespaces", "plans", {:name=>"fk_fdd12e5b80", :on_delete=>:nullify})
   -> 0.0049s
-- add_foreign_key("namespaces", "projects", {:column=>"file_template_project_id", :name=>"fk_319256d87a", :on_delete=>:nullify})
   -> 0.0072s
-- add_foreign_key("note_diff_files", "notes", {:column=>"diff_note_id", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("notes", "projects", {:name=>"fk_99e097b079", :on_delete=>:cascade})
   -> 0.0059s
-- add_foreign_key("notes", "reviews", {:name=>"fk_2e82291620", :on_delete=>:nullify})
   -> 0.0046s
-- add_foreign_key("notification_settings", "users", {:name=>"fk_0c95e91db7", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("oauth_openid_requests", "oauth_access_grants", {:column=>"access_grant_id", :name=>"fk_77114b3b09", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("operations_feature_flag_scopes", "operations_feature_flags", {:column=>"feature_flag_id", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("operations_feature_flags", "projects", {:on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("operations_feature_flags_clients", "projects", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("packages_build_infos", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0045s
-- add_foreign_key("packages_build_infos", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("packages_conan_file_metadata", "packages_package_files", {:column=>"package_file_id", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("packages_conan_metadata", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("packages_dependency_links", "packages_dependencies", {:column=>"dependency_id", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("packages_dependency_links", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("packages_maven_metadata", "packages_packages", {:column=>"package_id", :name=>"fk_be88aed360", :on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("packages_package_files", "packages_packages", {:column=>"package_id", :name=>"fk_86f0f182f8", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("packages_package_tags", "packages_packages", {:column=>"package_id", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("packages_packages", "projects", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("pages_domain_acme_orders", "pages_domains", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("pages_domains", "projects", {:name=>"fk_ea2f6dfc6f", :on_delete=>:cascade})
   -> 0.0063s
-- add_foreign_key("path_locks", "projects", {:name=>"fk_5265c98f24", :on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("path_locks", "users")
   -> 0.0050s
-- add_foreign_key("personal_access_tokens", "users")
   -> 0.0052s
-- add_foreign_key("plan_limits", "plans", {:on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("pool_repositories", "projects", {:column=>"source_project_id", :on_delete=>:nullify})
   -> 0.0052s
-- add_foreign_key("pool_repositories", "shards", {:on_delete=>:restrict})
   -> 0.0042s
-- add_foreign_key("project_alerting_settings", "projects", {:on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("project_aliases", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("project_authorizations", "projects", {:on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("project_authorizations", "users", {:on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("project_auto_devops", "projects", {:on_delete=>:cascade})
   -> 0.0053s
-- add_foreign_key("project_ci_cd_settings", "projects", {:name=>"fk_24c15d2f2e", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("project_custom_attributes", "projects", {:on_delete=>:cascade})
   -> 0.0051s
-- add_foreign_key("project_daily_statistics", "projects", {:on_delete=>:cascade})
   -> 0.0045s
-- add_foreign_key("project_deploy_tokens", "deploy_tokens", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("project_deploy_tokens", "projects", {:on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("project_error_tracking_settings", "projects", {:on_delete=>:cascade})
   -> 0.0038s
-- add_foreign_key("project_feature_usages", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("project_features", "projects", {:name=>"fk_18513d9b92", :on_delete=>:cascade})
   -> 0.0044s
-- add_foreign_key("project_group_links", "projects", {:name=>"fk_daa8cee94c", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("project_import_data", "projects", {:name=>"fk_ffb9ee3a10", :on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("project_incident_management_settings", "projects", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("project_metrics_settings", "projects", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("project_mirror_data", "projects", {:name=>"fk_d1aad367d7", :on_delete=>:cascade})
   -> 0.0034s
-- add_foreign_key("project_pages_metadata", "projects", {:on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("project_repositories", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("project_repositories", "shards", {:on_delete=>:restrict})
   -> 0.0025s
-- add_foreign_key("project_repository_states", "projects", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("project_statistics", "projects", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("project_tracing_settings", "projects", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("projects", "pool_repositories", {:name=>"fk_6e5c14658a", :on_delete=>:nullify})
   -> 0.0034s
-- add_foreign_key("projects", "users", {:column=>"marked_for_deletion_by_user_id", :name=>"fk_25d8780d11", :on_delete=>:nullify})
   -> 0.0037s
-- add_foreign_key("prometheus_alert_events", "projects", {:on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("prometheus_alert_events", "prometheus_alerts", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("prometheus_alerts", "environments", {:on_delete=>:cascade})
   -> 0.0025s
-- add_foreign_key("prometheus_alerts", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("prometheus_alerts", "prometheus_metrics", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("prometheus_metrics", "projects", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("protected_branch_merge_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_98f3d044fe", :on_delete=>:cascade})
   -> 0.0040s
-- add_foreign_key("protected_branch_merge_access_levels", "protected_branches", {:name=>"fk_8a3072ccb3", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("protected_branch_merge_access_levels", "users")
   -> 0.0030s
-- add_foreign_key("protected_branch_push_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_7111b68cdb", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("protected_branch_push_access_levels", "protected_branches", {:name=>"fk_9ffc86a3d9", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("protected_branch_push_access_levels", "users")
   -> 0.0032s
-- add_foreign_key("protected_branch_unprotect_access_levels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("protected_branch_unprotect_access_levels", "protected_branches", {:on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("protected_branch_unprotect_access_levels", "users", {:on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("protected_branches", "projects", {:name=>"fk_7a9c6d93e7", :on_delete=>:cascade})
   -> 0.0031s
-- add_foreign_key("protected_environment_deploy_access_levels", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("protected_environment_deploy_access_levels", "protected_environments", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("protected_environment_deploy_access_levels", "users", {:on_delete=>:cascade})
   -> 0.0030s
-- add_foreign_key("protected_environments", "projects", {:on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("protected_tag_create_access_levels", "namespaces", {:column=>"group_id", :name=>"fk_b4eb82fe3c", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("protected_tag_create_access_levels", "protected_tags", {:name=>"fk_f7dfda8c51", :on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("protected_tag_create_access_levels", "users")
   -> 0.0017s
-- add_foreign_key("protected_tags", "projects", {:name=>"fk_8e4af87648", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("push_event_payloads", "events", {:name=>"fk_36c74129da", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("push_rules", "projects", {:name=>"fk_83b29894de", :on_delete=>:cascade})
   -> 0.0027s
-- add_foreign_key("release_links", "releases", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("releases", "projects", {:name=>"fk_47fe2a0596", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("releases", "users", {:column=>"author_id", :name=>"fk_8e4456f90f", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("remote_mirrors", "projects", {:name=>"fk_43a9aa4ca8", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("repository_languages", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("resource_label_events", "epics", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("resource_label_events", "issues", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("resource_label_events", "labels", {:on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("resource_label_events", "merge_requests", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("resource_label_events", "users", {:on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("reviews", "merge_requests", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("reviews", "projects", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("reviews", "users", {:column=>"author_id", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("saml_providers", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("scim_oauth_access_tokens", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("self_managed_prometheus_alert_events", "environments", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("self_managed_prometheus_alert_events", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("sentry_issues", "issues", {:on_delete=>:cascade})
   -> 0.0015s
-- add_foreign_key("serverless_domain_cluster", "clusters_applications_knative", {:on_delete=>:cascade})
   -> 0.0014s
-- add_foreign_key("serverless_domain_cluster", "pages_domains", {:on_delete=>:cascade})
   -> 0.0035s
-- add_foreign_key("serverless_domain_cluster", "users", {:column=>"creator_id", :on_delete=>:nullify})
   -> 0.0048s
-- add_foreign_key("service_desk_settings", "projects", {:on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("services", "projects", {:name=>"fk_71cce407f9", :on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("slack_integrations", "services", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("smartcard_identities", "users", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("snippet_user_mentions", "notes", {:on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("snippet_user_mentions", "snippets", {:on_delete=>:cascade})
   -> 0.0049s
-- add_foreign_key("snippets", "projects", {:name=>"fk_be41fd4bb7", :on_delete=>:cascade})
   -> 0.0056s
-- add_foreign_key("software_license_policies", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("software_license_policies", "software_licenses", {:on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("subscriptions", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("suggestions", "notes", {:on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("system_note_metadata", "description_versions", {:name=>"fk_fbd87415c9", :on_delete=>:nullify})
   -> 0.0048s
-- add_foreign_key("system_note_metadata", "notes", {:name=>"fk_d83a918cb1", :on_delete=>:cascade})
   -> 0.0042s
-- add_foreign_key("term_agreements", "application_setting_terms", {:column=>"term_id"})
   -> 0.0043s
-- add_foreign_key("term_agreements", "users", {:on_delete=>:cascade})
   -> 0.0050s
-- add_foreign_key("timelogs", "issues", {:name=>"fk_timelogs_issues_issue_id", :on_delete=>:cascade})
   -> 0.0061s
-- add_foreign_key("timelogs", "merge_requests", {:name=>"fk_timelogs_merge_requests_merge_request_id", :on_delete=>:cascade})
   -> 0.0047s
-- add_foreign_key("todos", "namespaces", {:column=>"group_id", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("todos", "notes", {:name=>"fk_91d1f47b13", :on_delete=>:cascade})
   -> 0.0043s
-- add_foreign_key("todos", "projects", {:name=>"fk_45054f9c45", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("todos", "users", {:column=>"author_id", :name=>"fk_ccf0373936", :on_delete=>:cascade})
   -> 0.0052s
-- add_foreign_key("todos", "users", {:name=>"fk_d94154aa95", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("trending_projects", "projects", {:on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("u2f_registrations", "users")
   -> 0.0033s
-- add_foreign_key("user_callouts", "users", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("user_custom_attributes", "users", {:on_delete=>:cascade})
   -> 0.0026s
-- add_foreign_key("user_interacted_projects", "projects", {:name=>"fk_722ceba4f7", :on_delete=>:cascade})
   -> 0.0024s
-- add_foreign_key("user_interacted_projects", "users", {:name=>"fk_0894651f08", :on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("user_preferences", "users", {:on_delete=>:cascade})
   -> 0.0023s
-- add_foreign_key("user_statuses", "users", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("user_synced_attributes_metadata", "users", {:on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("users", "application_setting_terms", {:column=>"accepted_term_id", :name=>"fk_789cd90b35", :on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("users", "namespaces", {:column=>"managing_group_id", :name=>"fk_a4b8fefe3e", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("users_ops_dashboard_projects", "projects", {:on_delete=>:cascade})
   -> 0.0022s
-- add_foreign_key("users_ops_dashboard_projects", "users", {:on_delete=>:cascade})
   -> 0.0019s
-- add_foreign_key("users_security_dashboard_projects", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("users_security_dashboard_projects", "users", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("users_star_projects", "projects", {:name=>"fk_22cd27ddfc", :on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("vulnerabilities", "epics", {:name=>"fk_1d37cddf91", :on_delete=>:nullify})
   -> 0.0019s
-- add_foreign_key("vulnerabilities", "milestones", {:column=>"due_date_sourcing_milestone_id", :name=>"fk_7c5bb22a22", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerabilities", "milestones", {:column=>"start_date_sourcing_milestone_id", :name=>"fk_88b4d546ef", :on_delete=>:nullify})
   -> 0.0016s
-- add_foreign_key("vulnerabilities", "milestones", {:name=>"fk_131d289c65", :on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("vulnerabilities", "projects", {:name=>"fk_efb96ab1e2", :on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("vulnerabilities", "users", {:column=>"author_id", :name=>"fk_b1de915a15", :on_delete=>:nullify})
   -> 0.0018s
-- add_foreign_key("vulnerabilities", "users", {:column=>"closed_by_id", :name=>"fk_cf5c60acbf", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerabilities", "users", {:column=>"last_edited_by_id", :name=>"fk_1302949740", :on_delete=>:nullify})
   -> 0.0020s
-- add_foreign_key("vulnerabilities", "users", {:column=>"resolved_by_id", :name=>"fk_76bc5f5455", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerabilities", "users", {:column=>"updated_by_id", :name=>"fk_7ac31eacb9", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerability_feedback", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerability_feedback", "issues", {:on_delete=>:nullify})
   -> 0.0015s
-- add_foreign_key("vulnerability_feedback", "merge_requests", {:name=>"fk_563ff1912e", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerability_feedback", "projects", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("vulnerability_feedback", "users", {:column=>"author_id", :on_delete=>:cascade})
   -> 0.0029s
-- add_foreign_key("vulnerability_feedback", "users", {:column=>"comment_author_id", :name=>"fk_94f7c8a81e", :on_delete=>:nullify})
   -> 0.0017s
-- add_foreign_key("vulnerability_identifiers", "projects", {:on_delete=>:cascade})
   -> 0.0018s
-- add_foreign_key("vulnerability_issue_links", "issues", {:on_delete=>:cascade})
   -> 0.0017s
-- add_foreign_key("vulnerability_issue_links", "vulnerabilities", {:on_delete=>:cascade})
   -> 0.0016s
-- add_foreign_key("vulnerability_occurrence_identifiers", "vulnerability_identifiers", {:column=>"identifier_id", :on_delete=>:cascade})
   -> 0.0020s
-- add_foreign_key("vulnerability_occurrence_identifiers", "vulnerability_occurrences", {:column=>"occurrence_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("vulnerability_occurrence_pipelines", "ci_pipelines", {:column=>"pipeline_id", :on_delete=>:cascade})
   -> 0.0048s
-- add_foreign_key("vulnerability_occurrence_pipelines", "vulnerability_occurrences", {:column=>"occurrence_id", :on_delete=>:cascade})
   -> 0.0039s
-- add_foreign_key("vulnerability_occurrences", "projects", {:on_delete=>:cascade})
   -> 0.0054s
-- add_foreign_key("vulnerability_occurrences", "vulnerabilities", {:name=>"fk_97ffe77653", :on_delete=>:nullify})
   -> 0.0045s
-- add_foreign_key("vulnerability_occurrences", "vulnerability_identifiers", {:column=>"primary_identifier_id", :on_delete=>:cascade})
   -> 0.0046s
-- add_foreign_key("vulnerability_occurrences", "vulnerability_scanners", {:column=>"scanner_id", :on_delete=>:cascade})
   -> 0.0055s
-- add_foreign_key("vulnerability_scanners", "projects", {:on_delete=>:cascade})
   -> 0.0041s
-- add_foreign_key("web_hook_logs", "web_hooks", {:on_delete=>:cascade})
   -> 0.0032s
-- add_foreign_key("web_hooks", "projects", {:name=>"fk_0c8ca6d9d1", :on_delete=>:cascade})
   -> 0.0033s
-- add_foreign_key("zoom_meetings", "issues", {:on_delete=>:cascade})
   -> 0.0028s
-- add_foreign_key("zoom_meetings", "projects", {:on_delete=>:cascade})
   -> 0.0028s
Database re-creation done in 9.51358858589083
......F..............................................................2019-12-20T13:41:22.527Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>10}
.2019-12-20T13:41:22.886Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>11}
.2019-12-20T13:41:23.131Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>12}
2019-12-20T13:41:23.286Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>13}
.2019-12-20T13:41:23.620Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>14}
2019-12-20T13:41:23.762Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>15}
gsupnmk3l WARN: {:message=>"The job does not have archived trace but going to be destroyed.", :job_id=>443}
.2019-12-20T13:45:07.557Z 29485 TID-gsupnmk3l WARN: {:message=>"The job does not have archived trace but going to be destroyed.", :job_id=>443}
gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>575}
.2019-12-20T13:47:13.225Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>578}
.2019-12-20T13:47:14.863Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>581}
.2019-12-20T13:47:16.685Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>584}
.2019-12-20T13:47:18.689Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>587}
.2019-12-20T13:47:20.227Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>590}
.2019-12-20T13:47:21.948Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>593}
.2019-12-20T13:47:23.524Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>596}
.2019-12-20T13:47:25.106Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>599}
.2019-12-20T13:47:26.752Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>602}
.2019-12-20T13:47:28.512Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>605}
.2019-12-20T13:47:30.585Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>608}
.2019-12-20T13:47:31.974Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>609}
.2019-12-20T13:47:33.335Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>610}
.2019-12-20T13:47:34.694Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>611}
.2019-12-20T13:47:36.126Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>612}
.2019-12-20T13:47:37.493Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>613}
.2019-12-20T13:47:38.872Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>614}
.2019-12-20T13:47:40.971Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>615}
.2019-12-20T13:47:42.359Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>616}
....................................................................................................................................2019-12-20T13:48:39.000Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>690}
2019-12-20T13:48:39.000Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>691}
2019-12-20T13:48:39.000Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>693}
2019-12-20T13:48:39.000Z 29485 TID-gsupnmk3l WARN: {:class=>"ArchiveTraceWorker", :message=>"The job does not have live trace but going to be archived.", :job_id=>694}
reparing worktree (detached HEAD 4b4918a)
HEAD is now at 4b4918a Merge branch 'master' into 'master'
gsupnmk3l INFO: Skipped attachments move from '/home/robotmay/Development/gitlab/gitlab-development-kit/gitlab/tmp/tests/public/uploads/namespace4400/project4526' to '/home/robotmay/Development/gitlab/gitlab-development-kit/gitlab/tmp/tests/public/uploads/@hashed/da/c0/dac0bab9c931418b10c258135f98636edbaa80a760212c8587517653da59da72', source path doesn't exist or is not a directory (PROJECT_ID=3088)
2019-12-20T13:54:34.377Z 29485 TID-gsupnmk3l INFO: Skipped attachments move from '/home/robotmay/Development/gitlab/gitlab-development-kit/gitlab/tmp/tests/public/uploads/namespace4401/project4527' to '/home/robotmay/Development/gitlab/gitlab-development-kit/gitlab/tmp/tests/public/uploads/@hashed/93/ec/93ec5f036cae289c830e104b443f7bd5ddb4a9348c216e6a6c82b98ba5166789', source path doesn't exist or is not a directory (PROJECT_ID=3089)
.......2019-12-20T13:54:35.581Z 29485 TID-gsupnmk3l INFO: Skipped attachments move from '/home/robotmay/Development/gitlab/gitlab-development-kit/gitlab/tmp/tests/public/uploads/namespace4412/project4538' to '/home/robotmay/Development/gitlab/gitlab-development-kit/gitlab/tmp/tests/public/uploads/@hashed/47/01/47012d6a8e8c18e60526a997caabc66257cac6b3457b51186968fc68c9c48673', source path doesn't exist or is not a directory (PROJECT_ID=3100)
gsupnmk3l ERROR: {:class=>"Gitlab::Metrics::Exporter::SidekiqExporter", :message=>"Cannot start sidekiq_exporter", :exception=>"Address already in use - bind(2) for 127.0.0.1:9992"}
gsupnmk3l WARN: {:class=>"Gitlab::SidekiqDaemon::Monitor", :action=>"run", :queue=>"queue", :jid=>"4217e0a47e236745f974f3aa7587358c", :canceled=>true}
.2019-12-20T13:57:27.158Z 29485 TID-gsupnmk3l WARN: {:class=>"Gitlab::SidekiqDaemon::Monitor", :action=>"run", :queue=>"queue", :jid=>"72dcfdac9d4c5b6d7102a74bdb9716d1", :canceled=>true}
.............2019-12-20T13:57:27.184Z 29485 TID-gsuwwfrwh WARN: {:class=>"Gitlab::SidekiqDaemon::Monitor", :action=>"cancel", :message=>"Canceling thread with CancelledError", :jid=>"my-jid", :thread_id=>47399247989220}
.....................2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>nil, :message=>"Sidekiq worker PID-999 current RSS 10240 exceeds maximum RSS 5120 after finishing job ProjectCacheWorker JID-123"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>nil, :message=>"Sidekiq worker PID-999 will stop fetching new jobs in 900 seconds, and will be shut down 30 seconds later"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>"SIGTSTP", :message=>"waiting 900 seconds before sending Sidekiq worker PID-999 SIGTSTP (stop fetching new jobs)"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>"SIGTSTP", :message=>"sending Sidekiq worker PID-999 SIGTSTP (stop fetching new jobs)"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>"SIGTERM", :message=>"waiting 30 seconds before sending Sidekiq worker PID-999 SIGTERM (gracefully shut down)"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>"SIGTERM", :message=>"sending Sidekiq worker PID-999 SIGTERM (gracefully shut down)"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>"SIGKILL", :message=>"waiting 10 seconds before sending Sidekiq worker PGRP-999 SIGKILL (die)"}
2019-12-20T13:57:28.284Z 29485 TID-gsuydyt75 WARN: {:class=>"ProjectCacheWorker", :pid=>999, :signal=>"SIGKILL", :message=>"sending Sidekiq worker PGRP-999 SIGKILL (die)"}
...............................................................2019-12-20T13:57:30.273Z 29485 TID-gsupnmk3l INFO: arguments: [0.01]
........................2019-12-20T13:57:31.241Z 29485 TID-gsupnmk3l INFO: Listening on queues ["cronjob", "cronjob:adjourned_group_deletion", "cronjob:adjourned_projects_deletion_cron", "cronjob:admin_email", "cronjob:ci_archive_traces_cron", "cronjob:clear_shared_runners_minutes", "cronjob:expire_build_artifacts", "cronjob:geo_container_repository_sync_dispatch", "cronjob:geo_file_download_dispatch", "cronjob:geo_metrics_update", "cronjob:geo_migrated_local_files_clean_up", "cronjob:geo_prune_event_log", "cronjob:geo_repository_sync", "cronjob:geo_repository_verification_primary_batch", "cronjob:geo_repository_verification_secondary_scheduler", "cronjob:geo_repository_verification_secondary_shard", "cronjob:geo_scheduler_per_shard_scheduler", "cronjob:geo_scheduler_primary_per_shard_scheduler", "cronjob:geo_scheduler_secondary_per_shard_scheduler", "cronjob:geo_sidekiq_cron_config", "cronjob:gitlab_usage_ping", "cronjob:historical_data", "cronjob:import_export_project_cleanup", "cronjob:import_software_licenses", "cronjob:issue_due_scheduler", "cronjob:ldap_all_groups_sync", "cronjob:ldap_sync", "cronjob:namespaces_prune_aggregation_schedules", "cronjob:pages_domain_removal_cron", "cronjob:pages_domain_ssl_renewal_cron", "cronjob:pages_domain_verification_cron", "cronjob:personal_access_tokens_expiring", "cronjob:pipeline_schedule", "cronjob:prune_old_events", "cronjob:prune_web_hook_logs", "cronjob:pseudonymizer", "cronjob:remove_expired_group_links", "cronjob:remove_expired_members", "cronjob:remove_unreferenced_lfs_objects", "cronjob:repository_archive_cache", "cronjob:repository_check_dispatch", "cronjob:requests_profiles", "cronjob:schedule_migrate_external_diffs", "cronjob:stuck_ci_jobs", "cronjob:stuck_import_jobs", "cronjob:stuck_merge_jobs", "cronjob:trending_projects", "cronjob:update_all_mirrors", "cronjob:update_max_seats_used_for_gitlab_com_subscriptions", "post_receive", "repository_fork", "unknown"]
....FFFFFFFFFFFFFFFFF.FFFFF..FFFFFFF..........FFFFFFFFFFFF...FFF.FFF..............FFFFF.......FFFFFFFFFFFFFFFFFFFFF........FFFFF...................................................................................................................................................FFFFF.............FFFFFFFFFFFFFFFFFF....................................................FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF..............................F...F..F........................FF........................................F..F..FFFFF..F................................................................................................................................................FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF..............................................................................................................................................FFFFFFFF........FFFFFFFFFF.................................................FFFFF.............FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF................................................................FFFFFFFFFFFFFFFFFFFFFFFF............................F....FF..........FFFFFF.F....................................I, [2019-12-20T13:58:19.909505 #29485]  INFO -- omniauth: (saml) Request phase initiated.
.I, [2019-12-20T13:58:19.912409 #29485]  INFO -- omniauth: (saml) Request phase initiated.
.............F...............................F..........................................................................................................................FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF.FFFFFFFFFFFFFFFFFF..............................FF..........................................

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) Gitlab::BackgroundMigration::MigrateBuildStage recovers from unique constraint violation only twice
     # around hook at ./spec/spec_helper.rb:206 did not execute the example
     # ./spec/lib/gitlab/background_migration/migrate_build_stage_spec.rb:56

  2) Gitlab::Git::Commit move this test to gitaly-ruby
     # No reason given
     # ./spec/lib/gitlab/git/commit_spec.rb:542

  3) Gitlab::Git::Repository#squash sparse checkout
     # No reason given
     # ./spec/lib/gitlab/git/repository_spec.rb:2125

  4) Gitlab::Git::Repository#squash with an ASCII-8BIT diff
     # No reason given
     # ./spec/lib/gitlab/git/repository_spec.rb:2169

  5) Gitlab::Git::Repository#squash with trailing whitespace in an invalid patch
     # No reason given
     # ./spec/lib/gitlab/git/repository_spec.rb:2181

  6) Gitlab::Git::Wiki#preview_slug title: "", format: :markdown, expected_slug: ".md" matches the slug generated by gitaly
     # Gitaly cannot generate a slug for an empty title
     # ./spec/lib/gitlab/git/wiki_spec.rb:96

  7) Gitlab::Git::Wiki#preview_slug title: "", format: :md, expected_slug: ".md" matches the slug generated by gitaly
     # Gitaly cannot generate a slug for an empty title
     # ./spec/lib/gitlab/git/wiki_spec.rb:96

  8) Gitlab::Git::Wiki#preview_slug title: "", format: :txt, expected_slug: ".txt" matches the slug generated by gitaly
     # Gitaly cannot generate a slug for an empty title
     # ./spec/lib/gitlab/git/wiki_spec.rb:96

Failures:

  1) BitbucketServer::Client#repo requests a specific repository
     Failure/Error: super

     WebMock::NetConnectNotAllowedError:
       Real HTTP connections are disabled. Unregistered request: GET https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/stash/rest/api/1.0/projects/SOME-PROJECT/repos/my-repo with headers {'Accept'=>'application/json', 'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ='}

       You can stub this request with the following snippet:

       stub_request(:get, "https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/stash/rest/api/1.0/projects/SOME-PROJECT/repos/my-repo").
         with(
           headers: {
       	  'Accept'=>'application/json',
       	  'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ='
           }).
         to_return(status: 200, body: "", headers: {})

       registered request stubs:

       stub_request(:get, "https://test:7990/stash/rest/api/1.0/projects/SOME-PROJECT/repos/my-repo")

       ============================================================
     # ./lib/gitlab/http.rb:24:in `perform_request'
     # ./lib/bitbucket_server/connection.rb:33:in `get'
     # ./lib/bitbucket_server/client.rb:22:in `repo'
     # ./spec/lib/bitbucket_server/client_spec.rb:41:in `block (3 levels) in <main>'

  2) BitbucketServer::Client#create_branch requests Bitbucket to create a branch
     Failure/Error: super

     WebMock::NetConnectNotAllowedError:
       Real HTTP connections are disabled. Unregistered request: POST https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/stash/rest/api/1.0/projects/SOME-PROJECT/repos/my-repo/branches with body '{"name":"test-branch","startPoint":"12345678","message":"GitLab temporary branch for import"}' with headers {'Accept'=>'application/json', 'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=', 'Content-Type'=>'application/json'}

       You can stub this request with the following snippet:

       stub_request(:post, "https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/stash/rest/api/1.0/projects/SOME-PROJECT/repos/my-repo/branches").
         with(
           body: "{\"name\":\"test-branch\",\"startPoint\":\"12345678\",\"message\":\"GitLab temporary branch for import\"}",
           headers: {
       	  'Accept'=>'application/json',
       	  'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=',
       	  'Content-Type'=>'application/json'
           }).
         to_return(status: 200, body: "", headers: {})

       registered request stubs:

       stub_request(:post, "https://test:7990/stash/rest/api/1.0/projects/SOME-PROJECT/repos/my-repo/branches")

       ============================================================
     # ./lib/gitlab/http.rb:24:in `perform_request'
     # ./lib/bitbucket_server/connection.rb:46:in `post'
     # ./lib/bitbucket_server/client.rb:39:in `create_branch'
     # ./spec/lib/bitbucket_server/client_spec.rb:82:in `block (3 levels) in <main>'

  3) BitbucketServer::Client#delete_branch requests Bitbucket to create a branch
     Failure/Error: super

     WebMock::NetConnectNotAllowedError:
       Real HTTP connections are disabled. Unregistered request: DELETE https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/stash/rest/branch-utils/1.0/projects/SOME-PROJECT/repos/my-repo/branches with body '{"name":"refs/heads/test-branch","dryRun":false}' with headers {'Accept'=>'application/json', 'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=', 'Content-Type'=>'application/json'}

       You can stub this request with the following snippet:

       stub_request(:delete, "https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/stash/rest/branch-utils/1.0/projects/SOME-PROJECT/repos/my-repo/branches").
         with(
           body: "{\"name\":\"refs/heads/test-branch\",\"dryRun\":false}",
           headers: {
       	  'Accept'=>'application/json',
       	  'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=',
       	  'Content-Type'=>'application/json'
           }).
         to_return(status: 200, body: "", headers: {})

       registered request stubs:

       stub_request(:delete, "https://test:7990/stash/rest/branch-utils/1.0/projects/SOME-PROJECT/repos/my-repo/branches")

       ============================================================
     # ./lib/gitlab/http.rb:24:in `perform_request'
     # ./lib/bitbucket_server/connection.rb:65:in `delete'
     # ./lib/bitbucket_server/client.rb:48:in `delete_branch'
     # ./spec/lib/bitbucket_server/client_spec.rb:96:in `block (3 levels) in <main>'

  4) BitbucketServer::Connection#get returns JSON body
     Failure/Error: super

     WebMock::NetConnectNotAllowedError:
       Real HTTP connections are disabled. Unregistered request: GET https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/rest/api/1.0/test?something=1 with headers {'Accept'=>'application/json', 'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ='}

       You can stub this request with the following snippet:

       stub_request(:get, "https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/rest/api/1.0/test?something=1").
         with(
           headers: {
       	  'Accept'=>'application/json',
       	  'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ='
           }).
         to_return(status: 200, body: "", headers: {})

       registered request stubs:

       stub_request(:get, "https://test:7990/rest/api/1.0/test?something=1").
         with(
           headers: {
       	  'Accept'=>'application/json'
           })

       ============================================================
     # ./lib/gitlab/http.rb:24:in `perform_request'
     # ./lib/bitbucket_server/connection.rb:33:in `get'
     # ./spec/lib/bitbucket_server/connection_spec.rb:17:in `block (3 levels) in <main>'

  5) BitbucketServer::Connection#get throws an exception if the response is not 200
     Failure/Error: expect { subject.get(url) }.to raise_error(described_class::ConnectionError)

       expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: GET h...  'Accept'=>'application/json'
           })

       ============================================================> with backtrace:
         # ./lib/gitlab/http.rb:24:in `perform_request'
         # ./lib/bitbucket_server/connection.rb:33:in `get'
         # ./spec/lib/bitbucket_server/connection_spec.rb:23:in `block (4 levels) in <main>'
         # ./spec/lib/bitbucket_server/connection_spec.rb:23:in `block (3 levels) in <main>'
     # ./spec/lib/bitbucket_server/connection_spec.rb:23:in `block (3 levels) in <main>'

  6) BitbucketServer::Connection#get throws an exception if the response is not JSON
     Failure/Error: expect { subject.get(url) }.to raise_error(described_class::ConnectionError)

       expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: GET h...  'Accept'=>'application/json'
           })

       ============================================================> with backtrace:
         # ./lib/gitlab/http.rb:24:in `perform_request'
         # ./lib/bitbucket_server/connection.rb:33:in `get'
         # ./spec/lib/bitbucket_server/connection_spec.rb:29:in `block (4 levels) in <main>'
         # ./spec/lib/bitbucket_server/connection_spec.rb:29:in `block (3 levels) in <main>'
     # ./spec/lib/bitbucket_server/connection_spec.rb:29:in `block (3 levels) in <main>'

  7) BitbucketServer::Connection#get throws an exception upon a network error
     Failure/Error: expect { subject.get(url) }.to raise_error(described_class::ConnectionError)

       expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: GET h...  'Accept'=>'application/json'
           })

       ============================================================> with backtrace:
         # ./lib/gitlab/http.rb:24:in `perform_request'
         # ./lib/bitbucket_server/connection.rb:33:in `get'
         # ./spec/lib/bitbucket_server/connection_spec.rb:35:in `block (4 levels) in <main>'
         # ./spec/lib/bitbucket_server/connection_spec.rb:35:in `block (3 levels) in <main>'
     # ./spec/lib/bitbucket_server/connection_spec.rb:35:in `block (3 levels) in <main>'

  8) BitbucketServer::Connection#post returns JSON body
     Failure/Error: super

     WebMock::NetConnectNotAllowedError:
       Real HTTP connections are disabled. Unregistered request: POST https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/rest/api/1.0/test?something=1 with body 'test=1' with headers {'Accept'=>'application/json', 'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=', 'Content-Type'=>'application/json'}

       You can stub this request with the following snippet:

       stub_request(:post, "https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/rest/api/1.0/test?something=1").
         with(
           body: "test=1",
           headers: {
       	  'Accept'=>'application/json',
       	  'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=',
       	  'Content-Type'=>'application/json'
           }).
         to_return(status: 200, body: "", headers: {})

       registered request stubs:

       stub_request(:post, "https://test:7990/rest/api/1.0/test?something=1").
         with(
           headers: {
       	  'Accept'=>'application/json',
       	  'Content-Type'=>'application/json'
           })

       ============================================================
     # ./lib/gitlab/http.rb:24:in `perform_request'
     # ./lib/bitbucket_server/connection.rb:46:in `post'
     # ./spec/lib/bitbucket_server/connection_spec.rb:45:in `block (3 levels) in <main>'

  9) BitbucketServer::Connection#post throws an exception if the response is not 200
     Failure/Error: expect { subject.post(url, payload) }.to raise_error(described_class::ConnectionError)

       expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: POST ...tent-Type'=>'application/json'
           })

       ============================================================> with backtrace:
         # ./lib/gitlab/http.rb:24:in `perform_request'
         # ./lib/bitbucket_server/connection.rb:46:in `post'
         # ./spec/lib/bitbucket_server/connection_spec.rb:51:in `block (4 levels) in <main>'
         # ./spec/lib/bitbucket_server/connection_spec.rb:51:in `block (3 levels) in <main>'
     # ./spec/lib/bitbucket_server/connection_spec.rb:51:in `block (3 levels) in <main>'

  10) BitbucketServer::Connection#post throws an exception upon a network error
      Failure/Error: expect { subject.post(url, payload) }.to raise_error(described_class::ConnectionError)

        expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: POST ...  'Accept'=>'application/json'
            })

        ============================================================> with backtrace:
          # ./lib/gitlab/http.rb:24:in `perform_request'
          # ./lib/bitbucket_server/connection.rb:46:in `post'
          # ./spec/lib/bitbucket_server/connection_spec.rb:57:in `block (4 levels) in <main>'
          # ./spec/lib/bitbucket_server/connection_spec.rb:57:in `block (3 levels) in <main>'
      # ./spec/lib/bitbucket_server/connection_spec.rb:57:in `block (3 levels) in <main>'

  11) BitbucketServer::Connection#delete branch API returns JSON body
      Failure/Error: super

      WebMock::NetConnectNotAllowedError:
        Real HTTP connections are disabled. Unregistered request: DELETE https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/rest/branch-utils/1.0/projects/foo/repos/bar/branches with body 'test=1' with headers {'Accept'=>'application/json', 'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=', 'Content-Type'=>'application/json'}

        You can stub this request with the following snippet:

        stub_request(:delete, "https://2001:8b0:1111:1111:0:ffff:51bb:ac50:7990/rest/branch-utils/1.0/projects/foo/repos/bar/branches").
          with(
            body: "test=1",
            headers: {
        	  'Accept'=>'application/json',
        	  'Authorization'=>'Basic Yml0YnVja2V0Om15cGFzc3dvcmQ=',
        	  'Content-Type'=>'application/json'
            }).
          to_return(status: 200, body: "", headers: {})

        registered request stubs:

        stub_request(:delete, "https://test:7990/rest/branch-utils/1.0/projects/foo/repos/bar/branches").
          with(
            headers: {
        	  'Accept'=>'application/json',
        	  'Content-Type'=>'application/json'
            })

        ============================================================
      # ./lib/gitlab/http.rb:24:in `perform_request'
      # ./lib/bitbucket_server/connection.rb:65:in `delete'
      # ./spec/lib/bitbucket_server/connection_spec.rb:72:in `block (4 levels) in <main>'

  12) BitbucketServer::Connection#delete branch API throws an exception if the response is not 200
      Failure/Error: expect { subject.delete(:branches, branch_path, payload) }.to raise_error(described_class::ConnectionError)

        expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: DELET...tent-Type'=>'application/json'
            })

        ============================================================> with backtrace:
          # ./lib/gitlab/http.rb:24:in `perform_request'
          # ./lib/bitbucket_server/connection.rb:65:in `delete'
          # ./spec/lib/bitbucket_server/connection_spec.rb:78:in `block (5 levels) in <main>'
          # ./spec/lib/bitbucket_server/connection_spec.rb:78:in `block (4 levels) in <main>'
      # ./spec/lib/bitbucket_server/connection_spec.rb:78:in `block (4 levels) in <main>'

  13) BitbucketServer::Connection#delete branch API throws an exception upon a network error
      Failure/Error: expect { subject.delete(:branches, branch_path, payload) }.to raise_error(described_class::ConnectionError)

        expected BitbucketServer::Connection::ConnectionError, got #<WebMock::NetConnectNotAllowedError: Real HTTP connections are disabled. Unregistered request: DELET...tent-Type'=>'application/json'
            })

        ============================================================> with backtrace:
          # ./lib/gitlab/http.rb:24:in `perform_request'
          # ./lib/bitbucket_server/connection.rb:65:in `delete'
          # ./spec/lib/bitbucket_server/connection_spec.rb:84:in `block (5 levels) in <main>'
          # ./spec/lib/bitbucket_server/connection_spec.rb:84:in `block (4 levels) in <main>'
      # ./spec/lib/bitbucket_server/connection_spec.rb:84:in `block (4 levels) in <main>'

  14) Gitlab::BackgroundMigration.steal when there are enqueued and scheduled jobs present steals from the scheduled sets queue first
      Failure/Error:
        expect(described_class).to receive(:perform)
          .with('Object', [2]).ordered

        (Gitlab::BackgroundMigration).perform("Object", [2])
            expected: 1 time with arguments: ("Object", [2])
            received: 0 times
      # ./spec/lib/gitlab/background_migration_spec.rb:99:in `block (5 levels) in <main>'
      # ./spec/support/sidekiq.rb:6:in `block (2 levels) in <main>'

  15) Gitlab::HealthChecks::Probes::Collection#execute with all checks responds with readiness checks data
      Failure/Error: expect(subject.http_status).to eq(200)

        expected: 200
             got: 503

        (compared using ==)
      # ./spec/lib/gitlab/health_checks/probes/collection_spec.rb:24:in `block (4 levels) in <main>'

  16) Gitlab::Highlight#highlight with CRLF strips extra LFs
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/highlight_spec.rb:8:in `block (2 levels) in <main>'
      # ./spec/lib/gitlab/highlight_spec.rb:9:in `block (2 levels) in <main>'
      # ./spec/lib/gitlab/highlight_spec.rb:87:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/highlight_spec.rb:89:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/highlight_spec.rb:93:in `block (4 levels) in <main>'

  17) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains project data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "project hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:12
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:96
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:97:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:98:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/support/shared_examples/models/project_hook_data_shared_examples.rb:24:in `block (2 levels) in <main>'

  18) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains deprecated repository data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "deprecated repository hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:15
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:96
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:97:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:98:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/support/shared_examples/models/project_hook_data_shared_examples.rb:39:in `block (2 levels) in <main>'

  19) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue contains issuable data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:96
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:97:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:98:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:19:in `block (4 levels) in <main>'

  20) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue does not contain certain keys
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:96
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:97:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:98:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:28:in `block (4 levels) in <main>'

  21) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue changes are given populates the :changes hash
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:96
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:97:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:98:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:58:in `block (5 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:61:in `block (5 levels) in <main>'

  22) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue changes are given does not contain certain keys
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:96
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:97:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:98:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:58:in `block (5 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:84:in `block (5 levels) in <main>'

  23) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains project data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "project hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:12
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:101
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:102:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:103:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/support/shared_examples/models/project_hook_data_shared_examples.rb:24:in `block (2 levels) in <main>'

  24) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains deprecated repository data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "deprecated repository hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:15
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:101
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:102:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:103:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/support/shared_examples/models/project_hook_data_shared_examples.rb:39:in `block (2 levels) in <main>'

  25) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request contains issuable data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:101
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:102:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:103:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:19:in `block (4 levels) in <main>'

  26) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request does not contain certain keys
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:101
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:102:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:103:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:10:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:28:in `block (4 levels) in <main>'

  27) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request changes are given populates the :changes hash
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:101
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:102:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:103:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:58:in `block (5 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:61:in `block (5 levels) in <main>'

  28) Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request changes are given does not contain certain keys
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "issuable hook data" called from ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:101
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:102:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:103:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:58:in `block (5 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:84:in `block (5 levels) in <main>'

  29) Gitlab::HookData::IssuableBuilder#build issue is assigned returns correct hook data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:107:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:108:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:111:in `block (4 levels) in <main>'

  30) Gitlab::HookData::IssuableBuilder#build merge_request is assigned returns correct hook data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:118:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:119:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:122:in `block (4 levels) in <main>'

  31) Gitlab::HookData::IssueBuilder#build includes safe attribute
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issue_builder_spec.rb:6:in `block (2 levels) in <main>'

  32) Gitlab::HookData::IssueBuilder#build includes additional attrs
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issue_builder_spec.rb:6:in `block (2 levels) in <main>'

  33) Gitlab::HookData::IssueBuilder#build when the issue has an image in the description sets the image to use an absolute URL
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/issue_builder_spec.rb:6:in `block (2 levels) in <main>'

  34) Gitlab::HookData::MergeRequestBuilder#build includes safe attribute
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:6:in `block (2 levels) in <main>'

  35) Gitlab::HookData::MergeRequestBuilder#build includes additional attrs
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:6:in `block (2 levels) in <main>'

  36) Gitlab::HookData::MergeRequestBuilder#build source key contains project data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "project hook data" called from ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:47
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:6:in `block (2 levels) in <main>'

  37) Gitlab::HookData::MergeRequestBuilder#build target key contains project data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      Shared Example Group: "project hook data" called from ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:47
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:6:in `block (2 levels) in <main>'

  38) Gitlab::HookData::MergeRequestBuilder#build when the MR has an image in the description sets the image to use an absolute URL
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:6:in `block (2 levels) in <main>'

  39) Gitlab::Import::DatabaseHelpers.insert_and_return_id returns the ID returned by the query
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/database_helpers_spec.rb:16:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/import/database_helpers_spec.rb:24:in `block (3 levels) in <main>'

  40) Gitlab::Import::MergeRequestCreator#execute merge request already exists updates the data
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:6:in `block (2 levels) in <main>'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:12:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:13:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:17:in `block (4 levels) in <main>'

  41) Gitlab::Import::MergeRequestCreator#execute new merge request creates a new merge request
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:6:in `block (2 levels) in <main>'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:33:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:34:in `block (4 levels) in <main>'
      # ./spec/lib/gitlab/import/merge_request_creator_spec.rb:37:in `block (4 levels) in <main>'

  42) Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when merge request does not exist returns a new object
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:6:in `block (2 levels) in <main>'

  43) Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when merge request does not exist does load all existing objects
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:6:in `block (2 levels) in <main>'

  44) Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when merge request does exist returns an existing object
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:6:in `block (2 levels) in <main>'

  45) Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when project is deleted returns an existing object
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:6:in `block (2 levels) in <main>'

  46) Gitlab::Import::SetAsyncJid.set_jid sets the JID in Redis
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/set_async_jid_spec.rb:6:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/import/set_async_jid_spec.rb:11:in `block (3 levels) in <main>'
      # ./spec/spec_helper.rb:259:in `block (2 levels) in <top (required)>'

  47) Gitlab::Import::SetAsyncJid.set_jid updates the import JID of the project
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import/set_async_jid_spec.rb:6:in `block (3 levels) in <main>'
      # ./spec/lib/gitlab/import/set_async_jid_spec.rb:18:in `block (3 levels) in <main>'
      # ./spec/spec_helper.rb:259:in `block (2 levels) in <top (required)>'

  48) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute returns if project exported file is not found
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  49) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute creates a lock file in the export dir
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  50) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method succeeds removes the lock file
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  51) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method succeeds removes the archive path
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  52) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails does not create the lock file
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  53) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails does not execute main logic
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  54) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails logs validation errors in shared context
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  55) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails removes the archive path
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  56) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when an exception is raised removes the lock
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  57) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#log_validation_errors add the message to the shared context
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  58) Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#to_json adds the current strategy class to the serialized attributes
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:7:in `block (2 levels) in <main>'

  59) Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy validations only POST and PUT method allowed
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:10:in `block (2 levels) in <main>'

  60) Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy validations onyl allow urls as upload urls
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:10:in `block (2 levels) in <main>'

  61) Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy#execute removes the exported project file after the upload
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:10:in `block (2 levels) in <main>'

  62) Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy#execute when upload fails stores the export error
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:10:in `block (2 levels) in <main>'

  63) Gitlab::ImportExport::AvatarRestorer does not break if there is just a directory
      Got 0 failures and 2 other errors:

      63.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:41:in `block (3 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:34:in `block (2 levels) in <main>'

      63.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:12:in `block (2 levels) in <main>'

  64) Gitlab::ImportExport::AvatarRestorer with avatar restores a project avatar
      Got 0 failures and 2 other errors:

      64.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:23:in `block (3 levels) in <main>'

      64.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:12:in `block (2 levels) in <main>'

  65) Gitlab::ImportExport::AvatarRestorer with avatar saves the avatar into the project
      Got 0 failures and 2 other errors:

      65.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:27:in `block (3 levels) in <main>'

      65.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:12:in `block (2 levels) in <main>'

  66) Gitlab::ImportExport::AvatarSaver saves a project avatar
      Got 0 failures and 2 other errors:

      66.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:6:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:12:in `block (2 levels) in <main>'

      66.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:6:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:19:in `block (2 levels) in <main>'

  67) Gitlab::ImportExport::AvatarSaver is fine not to have an avatar
      Got 0 failures and 2 other errors:

      67.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:6:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:12:in `block (2 levels) in <main>'

      67.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

            GRPC::Unavailable:
              14:failed to connect to all addresses
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:9:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:6:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:19:in `block (2 levels) in <main>'

  68) Gitlab::ImportExport::FastHashSerializer saves the correct hash
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  69) Gitlab::ImportExport::FastHashSerializer has approvals_before_merge set
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  70) Gitlab::ImportExport::FastHashSerializer has milestones
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  71) Gitlab::ImportExport::FastHashSerializer has merge requests
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  72) Gitlab::ImportExport::FastHashSerializer has merge request's milestones
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  73) Gitlab::ImportExport::FastHashSerializer has merge request's source branch SHA
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  74) Gitlab::ImportExport::FastHashSerializer has merge request's target branch SHA
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  75) Gitlab::ImportExport::FastHashSerializer has events
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  76) Gitlab::ImportExport::FastHashSerializer has snippets
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  77) Gitlab::ImportExport::FastHashSerializer has snippet notes
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  78) Gitlab::ImportExport::FastHashSerializer has releases
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  79) Gitlab::ImportExport::FastHashSerializer has no author on releases
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  80) Gitlab::ImportExport::FastHashSerializer has the author ID on releases
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  81) Gitlab::ImportExport::FastHashSerializer has issues
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  82) Gitlab::ImportExport::FastHashSerializer has issue comments
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  83) Gitlab::ImportExport::FastHashSerializer has issue assignees
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  84) Gitlab::ImportExport::FastHashSerializer has author on issue comments
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  85) Gitlab::ImportExport::FastHashSerializer has project members
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  86) Gitlab::ImportExport::FastHashSerializer has merge requests diffs
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  87) Gitlab::ImportExport::FastHashSerializer has merge request diff files
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  88) Gitlab::ImportExport::FastHashSerializer has merge request diff commits
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  89) Gitlab::ImportExport::FastHashSerializer has merge requests comments
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  90) Gitlab::ImportExport::FastHashSerializer has author on merge requests comments
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  91) Gitlab::ImportExport::FastHashSerializer has pipeline stages
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  92) Gitlab::ImportExport::FastHashSerializer has pipeline statuses
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  93) Gitlab::ImportExport::FastHashSerializer has pipeline builds
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  94) Gitlab::ImportExport::FastHashSerializer has no when YML attributes but only the DB column
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  95) Gitlab::ImportExport::FastHashSerializer has pipeline commits
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  96) Gitlab::ImportExport::FastHashSerializer has ci pipeline notes
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  97) Gitlab::ImportExport::FastHashSerializer has labels with no associations
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  98) Gitlab::ImportExport::FastHashSerializer has labels associated to records
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  99) Gitlab::ImportExport::FastHashSerializer has project and group labels
      Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

      GRPC::Unavailable:
        14:failed to connect to all addresses
      # ./lib/gitlab/gitaly_client.rb:167:in `execute'
      # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
      # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
      # ./lib/gitlab/gitaly_client.rb:145:in `call'
      # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
      # ./lib/gitlab/git/repository.rb:98:in `exists?'
      # ./lib/gitlab/shell.rb:289:in `repository_exists?'
      # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
      # ./app/models/project.rb:2386:in `check_repository_absence!'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
      # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  100) Gitlab::ImportExport::FastHashSerializer has priorities associated to labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  101) Gitlab::ImportExport::FastHashSerializer has issue resource label events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  102) Gitlab::ImportExport::FastHashSerializer has merge request resource label events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  103) Gitlab::ImportExport::FastHashSerializer saves the correct service type
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  104) Gitlab::ImportExport::FastHashSerializer saves the properties for a service
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  105) Gitlab::ImportExport::FastHashSerializer has project feature
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  106) Gitlab::ImportExport::FastHashSerializer has custom attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  107) Gitlab::ImportExport::FastHashSerializer has badges
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  108) Gitlab::ImportExport::FastHashSerializer does not complain about non UTF-8 characters in MR diff files
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  109) Gitlab::ImportExport::FastHashSerializer has a board and a list
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  110) Gitlab::ImportExport::FastHashSerializer project attributes does not contain the runners token
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:219:in `setup_project'
       # ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:13:in `block (2 levels) in <main>'

  111) forked project import can access the MR
       Got 0 failures and 2 other errors:

       111.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/fork_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/support/sidekiq.rb:21:in `block (3 levels) in <main>'
              # ./spec/support/sidekiq.rb:21:in `block (2 levels) in <main>'

       111.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/fork_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/fork_spec.rb:49:in `block (3 levels) in <main>'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `block in allow_disk_access'
              # ./lib/gitlab/temporarily_allow.rb:9:in `temporarily_allow'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `allow_disk_access'
              # ./spec/lib/gitlab/import_export/fork_spec.rb:48:in `block (2 levels) in <main>'
              # ./spec/support/sidekiq.rb:21:in `block (3 levels) in <main>'
              # ./spec/support/sidekiq.rb:21:in `block (2 levels) in <main>'

  112) Gitlab::ImportExport::GroupProjectObjectBuilder labels finds the existing group label
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:17:in `block (3 levels) in <main>'

  113) Gitlab::ImportExport::GroupProjectObjectBuilder labels creates a new label
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:28:in `block (3 levels) in <main>'

  114) Gitlab::ImportExport::GroupProjectObjectBuilder milestones finds the existing group milestone
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:37:in `block (3 levels) in <main>'

  115) Gitlab::ImportExport::GroupProjectObjectBuilder milestones creates a new milestone
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:48:in `block (3 levels) in <main>'

  116) Gitlab::ImportExport::GroupProjectObjectBuilder merge_request finds the existing merge_request
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:57:in `block (3 levels) in <main>'

  117) Gitlab::ImportExport::GroupProjectObjectBuilder merge_request creates a new merge_request
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:72:in `block (3 levels) in <main>'

  118) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object saves group successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  119) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is enabled uses FastHashSerializer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  120) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is disabled is serialized via built-in `as_json`
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  121) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON saves the correct json
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  122) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  123) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  124) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has boards
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  125) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has group members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  126) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has priorities associated to labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  127) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has badges
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  128) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group children exports group children
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  129) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group children exports group children of children
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  130) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group members exports group members as group owner
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  131) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group members as admin exports group members as admin
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  132) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group members as admin exports group members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  133) Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group attributes does not contain the runners token
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:170:in `setup_group'
       # ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  134) Gitlab::ImportExport export filename contains the project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/import_export_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/import_export_spec.rb:11:in `block (3 levels) in <main>'

  135) Gitlab::ImportExport export filename contains the namespace path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/import_export_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/import_export_spec.rb:15:in `block (3 levels) in <main>'

  136) Gitlab::ImportExport export filename does not go over a certain length
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/import_export_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/import_export_spec.rb:19:in `block (3 levels) in <main>'

  137) Gitlab::ImportExport::Importer#execute succeeds
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  138) Gitlab::ImportExport::Importer#execute extracts the archive
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  139) Gitlab::ImportExport::Importer#execute checks the version
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  140) Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::AvatarRestorer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  141) Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::RepoRestorer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  142) Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::WikiRestorer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  143) Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::UploadsRestorer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  144) Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::LfsRestorer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  145) Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::StatisticsRestorer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  146) Gitlab::ImportExport::Importer#execute all restores are executed restores the ProjectTree
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  147) Gitlab::ImportExport::Importer#execute all restores are executed removes the import file
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  148) Gitlab::ImportExport::Importer#execute all restores are executed sets the correct visibility_level when visibility level is a string
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  149) Gitlab::ImportExport::Importer#execute when project successfully restored when import_data has original_path overwrites existing project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:92:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  150) Gitlab::ImportExport::Importer#execute when project successfully restored when import_data has not original_path does not call the overwrite service
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:92:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/importer_spec.rb:19:in `block (2 levels) in <main>'

  151) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files succeeds
       Got 0 failures and 2 other errors:

       151.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       151.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  152) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files does not create a new `LfsObject` records, as one already exists
       Got 0 failures and 2 other errors:

       152.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       152.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  153) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files creates new `LfsObjectsProject` records in order to link the project to the existing `LfsObject`
       Got 0 failures and 2 other errors:

       153.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       153.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  154) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files restores the correct `LfsObject` records
       Got 0 failures and 2 other errors:

       154.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       154.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  155) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files restores the correct `LfsObjectsProject` records for the project
       Got 0 failures and 2 other errors:

       155.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       155.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  156) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files assigns the file correctly
       Got 0 failures and 2 other errors:

       156.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       156.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  157) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is not an existing `LfsObject` creates a new lfs object
       Got 0 failures and 2 other errors:

       157.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       157.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  158) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is not an existing `LfsObject` stores the upload
       Got 0 failures and 2 other errors:

       158.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       158.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  159) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is no lfs-objects.json file restores the correct `LfsObject` records
       Got 0 failures and 2 other errors:

       159.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       159.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  160) Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is no lfs-objects.json file restores a single `LfsObjectsProject` record for the project with "project" for the `repository_type`
       Got 0 failures and 2 other errors:

       160.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       160.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  161) Gitlab::ImportExport::LfsRestorer#restore without any LFS-objects succeeds
       Got 0 failures and 2 other errors:

       161.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:17:in `block (2 levels) in <main>'

       161.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:10:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:21:in `block (2 levels) in <main>'

  162) Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored does not cause errors
       Got 0 failures and 2 other errors:

       162.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:16:in `block (2 levels) in <main>'

       162.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:20:in `block (2 levels) in <main>'

  163) Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored copies the file in the correct location when there is an lfs object
       Got 0 failures and 2 other errors:

       163.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:16:in `block (2 levels) in <main>'

       163.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:20:in `block (2 levels) in <main>'

  164) Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored saving a json file saves a json file correctly
       Got 0 failures and 2 other errors:

       164.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:16:in `block (2 levels) in <main>'

       164.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:20:in `block (2 levels) in <main>'

  165) Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored saving a json file does not save a json file if feature is disabled
       Got 0 failures and 2 other errors:

       165.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:16:in `block (2 levels) in <main>'

       165.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:20:in `block (2 levels) in <main>'

  166) Gitlab::ImportExport::LfsSaver#save when the LFS objects are stored in object storage downloads the file to include in an archive
       Got 0 failures and 2 other errors:

       166.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:16:in `block (2 levels) in <main>'

       166.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:20:in `block (2 levels) in <main>'

  167) Gitlab::ImportExport::MembersMapper map members includes the exported user ID in the map
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:54:in `block (3 levels) in <main>'

  168) Gitlab::ImportExport::MembersMapper map members maps a project member
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:58:in `block (3 levels) in <main>'

  169) Gitlab::ImportExport::MembersMapper map members defaults to importer project member if it does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:62:in `block (3 levels) in <main>'

  170) Gitlab::ImportExport::MembersMapper map members has invited members with no user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:66:in `block (3 levels) in <main>'

  171) Gitlab::ImportExport::MembersMapper map members authorizes the users to the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:72:in `block (3 levels) in <main>'

  172) Gitlab::ImportExport::MembersMapper map members maps an owner as a maintainer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:81:in `block (3 levels) in <main>'

  173) Gitlab::ImportExport::MembersMapper map members removes old user_id from member_hash to avoid conflict with user key
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:92:in `block (3 levels) in <main>'

  174) Gitlab::ImportExport::MembersMapper map members user is not an admin does not map a project member
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:99:in `block (4 levels) in <main>'

  175) Gitlab::ImportExport::MembersMapper map members user is not an admin defaults to importer project member if it does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:103:in `block (4 levels) in <main>'

  176) Gitlab::ImportExport::MembersMapper map members chooses the one with an email first maps the project member that has a matching email first
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:111:in `block (4 levels) in <main>'

  177) Gitlab::ImportExport::MembersMapper map members importer same as group member maps the project member
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:118:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:121:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:129:in `block (4 levels) in <main>'

  178) Gitlab::ImportExport::MembersMapper map members importer same as group member maps the project member if it already exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:118:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:133:in `block (4 levels) in <main>'

  179) Gitlab::ImportExport::MembersMapper map members importing group members maps the importer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:141:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:144:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:153:in `block (4 levels) in <main>'

  180) Gitlab::ImportExport::MembersMapper map members importing group members maps the group member
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:141:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:144:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:157:in `block (4 levels) in <main>'

  181) Gitlab::ImportExport::MembersMapper map members when importer mapping fails includes importer specific error message
       Failure/Error: expect { members_mapper.map }.to raise_error(StandardError, "Error adding importer user to Project members. #{exception_message}")

         expected StandardError with "Error adding importer user to Project members. Something went wrong", got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:8:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:50:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:167:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:167:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/members_mapper_spec.rb:167:in `block (4 levels) in <main>'

  182) Gitlab::ImportExport::MergeRequestParser has a source branch
       Got 0 failures and 2 other errors:

       182.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'

       182.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:25:in `block (3 levels) in <main>'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `block in allow_disk_access'
              # ./lib/gitlab/temporarily_allow.rb:9:in `temporarily_allow'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `allow_disk_access'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:24:in `block (2 levels) in <main>'

  183) Gitlab::ImportExport::MergeRequestParser has a target branch
       Got 0 failures and 2 other errors:

       183.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'

       183.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:25:in `block (3 levels) in <main>'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `block in allow_disk_access'
              # ./lib/gitlab/temporarily_allow.rb:9:in `temporarily_allow'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `allow_disk_access'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:24:in `block (2 levels) in <main>'

  184) Gitlab::ImportExport::MergeRequestParser parses a MR that has no source branch
       Got 0 failures and 2 other errors:

       184.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'

       184.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:25:in `block (3 levels) in <main>'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `block in allow_disk_access'
              # ./lib/gitlab/temporarily_allow.rb:9:in `temporarily_allow'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `allow_disk_access'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:24:in `block (2 levels) in <main>'

  185) Gitlab::ImportExport::MergeRequestParser when the merge request has diffs when the diff is invalid sets the diff to nil
       Got 0 failures and 2 other errors:

       185.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'

       185.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:9:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:25:in `block (3 levels) in <main>'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `block in allow_disk_access'
              # ./lib/gitlab/temporarily_allow.rb:9:in `temporarily_allow'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `allow_disk_access'
              # ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:24:in `block (2 levels) in <main>'

  186) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores models based on JSON
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  187) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restore correct project features
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  188) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the project description
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  189) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the same label associated to two issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  190) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has milestones associated to two separate issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  191) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON creates a valid pipeline note
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  192) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON pipeline has the correct user ID
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  193) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores pipelines with missing ref
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  194) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores pipeline for merge request
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  195) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON preserves updated_at on issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  196) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has multiple issue assignees
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  197) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON contains the merge access levels on a protected branch
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  198) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON contains the push access levels on a protected branch
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  199) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON contains the create access levels on a protected tag
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  200) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores issue resource label events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  201) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores merge requests resource label events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  202) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores suggestion
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  203) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the correct data for merge request diff files
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  204) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the correct data for merge request diff commits
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  205) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the correct data for merge request latest_merge_request_diff
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  206) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has labels associated to label links, associated to issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  207) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has project labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  208) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has no group labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  209) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has issue boards
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  210) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has lists associated with the issue board
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  211) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has a project feature
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  212) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has custom attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  213) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has badges
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  214) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has snippets
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  215) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has award emoji for a snippet
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  216) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores `ci_cd_settings` : `group_runners_enabled` setting
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  217) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores the correct service
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  218) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores zoom meetings
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  219) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores sentry issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  220) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores container_expiration_policy
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  221) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when importing a project with cached_markdown_version and note_html for an Issue does not import note_html
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  222) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when importing a project with cached_markdown_version and note_html for a Merge Request does not import note_html
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  223) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON event at forth level of the tree restores the event
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  224) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON event at forth level of the tree has the action
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  225) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON event at forth level of the tree event belongs to note, belongs to merge request, belongs to a project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  226) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests always has the new project as a target
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  227) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests has the same source project as originally if source/target are the same
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  228) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests has the new project as target if source/target differ
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  229) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests has no source if source/target differ
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  230) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON tokens are regenerated has new CI trigger tokens
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  231) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON tokens are regenerated has a new CI build token
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  232) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has restored the correct number of records has the correct number of merge requests
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  233) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has restored the correct number of records only restores valid triggers
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  234) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has restored the correct number of records has the correct number of pipelines and statuses
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  235) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores pipelines
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  236) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores pipeline stages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  237) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs correctly restores association between stage and a pipeline
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  238) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores statuses
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  239) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs correctly restores association between a stage and a job
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  240) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs correctly restores association between a pipeline and a job
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  241) Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores a Hash for CommitStatus options
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:21:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:20:in `block (3 levels) in <main>'

  242) Gitlab::ImportExport::ProjectTreeRestorer project.json file access check does not read a symlink
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:351:in `block (3 levels) in <main>'

  243) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully restores the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  244) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  245) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has label priorities
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  246) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  247) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  248) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully does not set params that are excluded from import_export settings
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  249) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully records exact number of import failures
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:378
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  250) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully restores the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  251) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  252) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has label priorities
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  253) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  254) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  255) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully does not set params that are excluded from import_export settings
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  256) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully records exact number of import failures
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:391
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  257) Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data handles string versions of visibility_level
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  258) Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data overwrites the params stored in the JSON
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  259) Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data does not allow setting params that are excluded from import_export settings
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  260) Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data overrides project feature access levels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  261) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group restores issue states
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  262) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully restores the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  263) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  264) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has label priorities
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  265) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  266) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  267) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully does not set params that are excluded from import_export settings
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  268) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully records exact number of import failures
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:468
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  269) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores group correctly has group label
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores group correctly" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:475
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  270) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores group correctly has group milestone
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores group correctly" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:475
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  271) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores group correctly has the correct visibility level
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores group correctly" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:475
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:455:in `block (4 levels) in <main>'

  272) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with existing group models does not import any templated services
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:488:in `block (4 levels) in <main>'

  273) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with existing group models imports labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:488:in `block (4 levels) in <main>'

  274) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with existing group models imports milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:488:in `block (4 levels) in <main>'

  275) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with clashing milestones on IID preserves the project milestone IID
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:528:in `block (4 levels) in <main>'

  276) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with external authorization classification labels converts empty external classification authorization labels to nil
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  277) Gitlab::ImportExport::ProjectTreeRestorer Light JSON with external authorization classification labels preserves valid external classification authorization labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:368:in `block (3 levels) in <main>'

  278) Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON no group visibility uses the project visibility
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:572:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:575:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:578:in `block (3 levels) in <main>'

  279) Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with restricted internal visibility internal project uses private visibility
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:572:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:575:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:578:in `block (3 levels) in <main>'

  280) Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility private group visibility uses the group visibility
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:572:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:575:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:578:in `block (3 levels) in <main>'

  281) Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility public group visibility uses the project visibility
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:572:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:575:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:578:in `block (3 levels) in <main>'

  282) Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility internal group visibility uses the group visibility
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:572:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:575:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:578:in `block (3 levels) in <main>'

  283) Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility internal group visibility with restricted internal visibility sets private visibility
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:572:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:575:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:578:in `block (3 levels) in <main>'

  284) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed records the failures in the database
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  285) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully restores the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  286) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  287) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has label priorities
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  288) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  289) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  290) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully does not set params that are excluded from import_export settings
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  291) Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully records exact number of import failures
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "restores project successfully" called from ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:668
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:655:in `block (3 levels) in <main>'

  292) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object saves project successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  293) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is enabled uses FastHashSerializer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  294) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is disabled is serialized via built-in `as_json`
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  295) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON saves the correct json
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  296) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has approvals_before_merge set
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  297) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  298) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge requests
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  299) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request's milestones
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  300) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request's source branch SHA
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  301) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request's target branch SHA
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  302) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  303) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has snippets
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  304) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has snippet notes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  305) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has releases
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  306) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has no author on releases
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  307) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has the author ID on releases
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  308) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  309) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issue comments
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  310) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issue assignees
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  311) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has author on issue comments
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  312) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has project members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  313) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge requests diffs
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  314) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request diff files
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  315) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request diff commits
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  316) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge requests comments
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  317) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has author on merge requests comments
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  318) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline stages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  319) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline statuses
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  320) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline builds
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  321) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has no when YML attributes but only the DB column
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  322) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline commits
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  323) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has ci pipeline notes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  324) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has labels with no associations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  325) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has labels associated to records
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  326) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has project and group labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  327) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has priorities associated to labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  328) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issue resource label events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  329) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request resource label events
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  330) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON saves the correct service type
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  331) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON saves the properties for a service
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  332) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has project feature
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  333) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has custom attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  334) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has badges
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  335) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON does not complain about non UTF-8 characters in MR diff files
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  336) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has a board and a list
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  337) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON with description override overrides the project description
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  338) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members does not export group members if it has no permission
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  339) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members does not export group members as maintainer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  340) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members exports group members as group owner
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  341) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members as admin exports group members as admin
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  342) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members as admin exports group members as project members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  343) Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON project attributes does not contain the runners token
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:337:in `setup_project'
       # ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:11:in `block (3 levels) in <main>'

  344) Gitlab::ImportExport::RelationFactory hook object does not have the original ID
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:50:in `block (3 levels) in <main>'

  345) Gitlab::ImportExport::RelationFactory hook object does not have the original service_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:54:in `block (3 levels) in <main>'

  346) Gitlab::ImportExport::RelationFactory hook object does not have the original project_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:58:in `block (3 levels) in <main>'

  347) Gitlab::ImportExport::RelationFactory hook object has the new project_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:62:in `block (3 levels) in <main>'

  348) Gitlab::ImportExport::RelationFactory hook object has a nil token
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:66:in `block (3 levels) in <main>'

  349) Gitlab::ImportExport::RelationFactory hook object original service exists does not have the original service_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:70:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:35:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:13:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:73:in `block (4 levels) in <main>'

  350) Gitlab::ImportExport::RelationFactory hook object excluded attributes are removed from the imported object
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:81:in `block (4 levels) in <main>'

  351) Gitlab::ImportExport::RelationFactory Potentially hazardous foreign keys does not preserve any foreign key IDs
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:122:in `block (3 levels) in <main>'

  352) Gitlab::ImportExport::RelationFactory overrided model with pluralized name does not raise errors
       Failure/Error: expect { created_object }.not_to raise_error

         expected no Exception, got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:141:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:141:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:141:in `block (3 levels) in <main>'

  353) Gitlab::ImportExport::RelationFactory Project references does not preserve any project foreign key IDs
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:17:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:156:in `block (3 levels) in <main>'

  354) Gitlab::ImportExport::RelationFactory Notes user references maps the right author to the imported note
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:206:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:14:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:210:in `block (3 levels) in <main>'

  355) Gitlab::ImportExport::RelationFactory encrypted attributes has no value for the encrypted attribute
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:217:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:13:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_factory_spec.rb:221:in `block (3 levels) in <main>'

  356) Gitlab::ImportExport::RelationRenameService when importing when the file has only old relationship names renames old relationships to the new name
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:17:in `block (2 levels) in <main>'

  357) Gitlab::ImportExport::RelationRenameService when importing when the file has both the old and new relationships uses the new relationships and removes the old ones from the hash
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:17:in `block (2 levels) in <main>'

  358) Gitlab::ImportExport::RelationRenameService when importing when the file has only new relationship names uses the new relationships
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:17:in `block (2 levels) in <main>'

  359) Gitlab::ImportExport::RelationRenameService when exporting adds old relationships to the exported file
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:17:in `block (2 levels) in <main>'

  360) Gitlab::ImportExport::RelationTreeRestorer when restoring a project restores project tree
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:40:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:16:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:27:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:36:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:46:in `block (3 levels) in <main>'

  361) Gitlab::ImportExport::RelationTreeRestorer when restoring a project imported project has the project attributes and relations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:40:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:16:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:27:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:36:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:53:in `block (4 levels) in <main>'

  362) Gitlab::ImportExport::RepoRestorer bundle a project Git repo restores the repo successfully
       Got 0 failures and 2 other errors:

       362.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/repo_restorer_spec.rb:10:in `block (3 levels) in <main>'

       362.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/repo_restorer_spec.rb:10:in `block (3 levels) in <main>'
              # ./spec/lib/gitlab/import_export/repo_restorer_spec.rb:33:in `block (4 levels) in <main>'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `block in allow_disk_access'
              # ./lib/gitlab/temporarily_allow.rb:9:in `temporarily_allow'
              # ./lib/gitlab/gitaly_client/storage_settings.rb:31:in `allow_disk_access'
              # ./spec/lib/gitlab/import_export/repo_restorer_spec.rb:32:in `block (3 levels) in <main>'

  363) Gitlab::ImportExport::RepoSaver bundle a project Git repo bundles the repo successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/repo_saver_spec.rb:8:in `block (3 levels) in <main>'

  364) Gitlab::ImportExport::RepoSaver bundle a project Git repo when the repo is empty bundles the repo successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/repo_saver_spec.rb:29:in `block (4 levels) in <main>'

  365) Gitlab::ImportExport::Saver saves the repo using object storage
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/saver_spec.rb:7:in `block (2 levels) in <main>'

  366) Gitlab::ImportExport::Shared with a repository on disk #archive_path uses a random hash to avoid conflicts
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:17:in `block (4 levels) in <main>'

  367) Gitlab::ImportExport::Shared with a repository on disk #archive_path memoizes the path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:21:in `block (4 levels) in <main>'

  368) Gitlab::ImportExport::Shared with a repository on disk #export_path uses a random hash relative to project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:29:in `block (4 levels) in <main>'

  369) Gitlab::ImportExport::Shared with a repository on disk #export_path memoizes the path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:33:in `block (4 levels) in <main>'

  370) Gitlab::ImportExport::Shared#error updates the import JID
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/shared_spec.rb:50:in `block (3 levels) in <main>'

  371) Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored does not cause errors
       Got 0 failures and 2 other errors:

       371.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:18:in `block (2 levels) in <main>'

       371.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:22:in `block (2 levels) in <main>'

  372) Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored copies the file in the correct location when there is an upload
       Got 0 failures and 2 other errors:

       372.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:18:in `block (2 levels) in <main>'

       372.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:22:in `block (2 levels) in <main>'

  373) Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored with orphaned project upload files excludes orphaned upload files
       Got 0 failures and 3 other errors:

       373.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:18:in `block (2 levels) in <main>'

       373.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:46:in `block (5 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:55:in `block (5 levels) in <main>'

       373.3) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:22:in `block (2 levels) in <main>'

  374) Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored with an upload missing its file does not cause errors
       Got 0 failures and 2 other errors:

       374.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:18:in `block (2 levels) in <main>'

       374.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:22:in `block (2 levels) in <main>'

  375) Gitlab::ImportExport::UploadsManager#restore restores the file
       Got 0 failures and 2 other errors:

       375.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:18:in `block (2 levels) in <main>'

       375.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:8:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:6:in `block (2 levels) in <main>'
              # ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:22:in `block (2 levels) in <main>'

  376) Gitlab::ImportExport::UploadsRestorer bundle a project Git repo legacy storage saves the uploads successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:23:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:14:in `block (3 levels) in <main>'

  377) Gitlab::ImportExport::UploadsRestorer bundle a project Git repo legacy storage copies the uploads to the project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:23:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:14:in `block (3 levels) in <main>'

  378) Gitlab::ImportExport::UploadsRestorer bundle a project Git repo hashed storage saves the uploads successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:39:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:14:in `block (3 levels) in <main>'

  379) Gitlab::ImportExport::UploadsRestorer bundle a project Git repo hashed storage copies the uploads to the project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:39:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:14:in `block (3 levels) in <main>'

  380) Gitlab::ImportExport::UploadsSaver bundle a project Git repo legacy storage saves the uploads successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:22:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:27:in `block (4 levels) in <main>'

  381) Gitlab::ImportExport::UploadsSaver bundle a project Git repo legacy storage copies the uploads to the export path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:22:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:27:in `block (4 levels) in <main>'

  382) Gitlab::ImportExport::UploadsSaver bundle a project Git repo hashed storage saves the uploads successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:44:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:49:in `block (4 levels) in <main>'

  383) Gitlab::ImportExport::UploadsSaver bundle a project Git repo hashed storage copies the uploads to the export path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:44:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:49:in `block (4 levels) in <main>'

  384) Gitlab::ImportExport::WikiRepoSaver bundle a wiki Git repo bundles the repo successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/wiki_repo_saver_spec.rb:8:in `block (3 levels) in <main>'

  385) Gitlab::ImportExport::WikiRepoSaver bundle a wiki Git repo when the repo is empty bundles the repo successfully
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/import_export/wiki_repo_saver_spec.rb:32:in `block (4 levels) in <main>'

  386) Gitlab::ImportExport::WikiRestorer restore a wiki Git repo restores the wiki repo successfully
       Got 0 failures and 2 other errors:

       386.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:7:in `block (3 levels) in <main>'

       386.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:7:in `block (3 levels) in <main>'
              # ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:29:in `block (3 levels) in <main>'

  387) Gitlab::ImportExport::WikiRestorer restore a wiki Git repo no wiki in the bundle creates an empty wiki
       Got 0 failures and 2 other errors:

       387.1) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:7:in `block (3 levels) in <main>'

       387.2) Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

              GRPC::Unavailable:
                14:failed to connect to all addresses
              # ./lib/gitlab/gitaly_client.rb:167:in `execute'
              # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
              # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
              # ./lib/gitlab/gitaly_client.rb:145:in `call'
              # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
              # ./lib/gitlab/git/repository.rb:98:in `exists?'
              # ./lib/gitlab/shell.rb:289:in `repository_exists?'
              # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
              # ./app/models/project.rb:2386:in `check_repository_absence!'
              # ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:7:in `block (3 levels) in <main>'
              # ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:29:in `block (3 levels) in <main>'

  388) Gitlab::IssuableMetadata returns an empty Hash if an empty collection is provided
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/issuable_metadata_spec.rb:7:in `block (2 levels) in <main>'

  389) Gitlab::IssuableMetadata raises an error when given a collection with no limit
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/issuable_metadata_spec.rb:7:in `block (2 levels) in <main>'

  390) Gitlab::IssuableMetadata issues aggregates stats on issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/issuable_metadata_spec.rb:7:in `block (2 levels) in <main>'

  391) Gitlab::IssuableMetadata merge requests aggregates stats on merge requests
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/issuable_metadata_spec.rb:7:in `block (2 levels) in <main>'

  392) Gitlab::Kubernetes::DefaultNamespace#from_environment_name generates a slug and passes it to #from_environment_slug
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:10:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:16:in `block (3 levels) in <main>'

  393) Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is enabled platform namespace is specified 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:33:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:39:in `block (5 levels) in <main>'

  394) Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is enabled platform namespace is specified cluster is unmanaged 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:33:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:44:in `block (6 levels) in <main>'

  395) Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is enabled platform namespace is blank constructs a namespace from the project and environment
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:54:in `block (5 levels) in <main>'

  396) Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is disabled platform namespace is specified 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:33:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:68:in `block (5 levels) in <main>'

  397) Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is disabled platform namespace is blank constructs a namespace from the project and environment
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:77:in `block (5 levels) in <main>'

  398) Gitlab::Kubernetes::KubeClient core API #get_pods api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_pods'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  399) Gitlab::Kubernetes::KubeClient core API #get_secrets api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_secrets'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  400) Gitlab::Kubernetes::KubeClient core API #get_config_map api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_config_map'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  401) Gitlab::Kubernetes::KubeClient core API #get_pod api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_pod'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  402) Gitlab::Kubernetes::KubeClient core API #get_namespace api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_namespace'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  403) Gitlab::Kubernetes::KubeClient core API #get_secret api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_secret'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  404) Gitlab::Kubernetes::KubeClient core API #get_service api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_service'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  405) Gitlab::Kubernetes::KubeClient core API #get_service_account api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `get_service_account'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  406) Gitlab::Kubernetes::KubeClient core API #delete_namespace api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `delete_namespace'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  407) Gitlab::Kubernetes::KubeClient core API #delete_pod api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `delete_pod'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  408) Gitlab::Kubernetes::KubeClient core API #delete_service_account api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `delete_service_account'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  409) Gitlab::Kubernetes::KubeClient core API #create_config_map api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `create_config_map'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  410) Gitlab::Kubernetes::KubeClient core API #create_namespace api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `create_namespace'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  411) Gitlab::Kubernetes::KubeClient core API #create_pod api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `create_pod'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  412) Gitlab::Kubernetes::KubeClient core API #create_secret api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `create_secret'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  413) Gitlab::Kubernetes::KubeClient core API #create_service_account api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `create_service_account'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  414) Gitlab::Kubernetes::KubeClient core API #update_config_map api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `update_config_map'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  415) Gitlab::Kubernetes::KubeClient core API #update_secret api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `update_secret'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  416) Gitlab::Kubernetes::KubeClient core API #update_service_account api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:34:in `update_service_account'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:178
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  417) Gitlab::Kubernetes::KubeClient rbac API group #create_role api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:65:in `create_role'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:204
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  418) Gitlab::Kubernetes::KubeClient rbac API group #get_role api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:65:in `get_role'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:204
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  419) Gitlab::Kubernetes::KubeClient rbac API group #update_role api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:65:in `update_role'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:204
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  420) Gitlab::Kubernetes::KubeClient rbac API group #create_cluster_role_binding api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:57:in `create_cluster_role_binding'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:204
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  421) Gitlab::Kubernetes::KubeClient rbac API group #get_cluster_role_binding api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:57:in `get_cluster_role_binding'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:204
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  422) Gitlab::Kubernetes::KubeClient rbac API group #update_cluster_role_binding api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:57:in `update_cluster_role_binding'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:23:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:204
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  423) Gitlab::Kubernetes::KubeClient extensions API group #get_deployments api_url is redirected does not follow redirects
       Failure/Error: expect { method_call(client, method_name) }.to raise_error(Kubeclient::HttpError)

         expected Kubeclient::HttpError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./config/initializers/rest-client-hostname_override.rb:25:in `transmit'
           # ./lib/gitlab/kubernetes/kube_client.rb:85:in `get_deployments'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `public_send'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:21:in `method_call'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'
       Shared Example Group: "redirection not allowed" called from ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:223
       # ./spec/lib/gitlab/kubernetes/kube_client_spec.rb:52:in `block (4 levels) in <main>'

  424) Gitlab::LanguageDetection#languages returns the language names
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/language_detection_spec.rb:6:in `block (2 levels) in <main>'

  425) Gitlab::LanguageDetection#insertions only includes new languages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/language_detection_spec.rb:6:in `block (2 levels) in <main>'

  426) Gitlab::LanguageDetection#updates updates the share of languages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/language_detection_spec.rb:6:in `block (2 levels) in <main>'

  427) Gitlab::LanguageDetection#updates does not include languages to be removed
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/language_detection_spec.rb:6:in `block (2 levels) in <main>'

  428) Gitlab::LanguageDetection#updates when silent writes occur doesn't include them in the result
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/language_detection_spec.rb:6:in `block (2 levels) in <main>'

  429) Gitlab::LanguageDetection#deletions lists undetected languages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/language_detection_spec.rb:6:in `block (2 levels) in <main>'

  430) Gitlab::LegacyGithubImport::BranchFormatter#exists? returns true when branch exists and commit is part of the branch
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:19:in `block (3 levels) in <main>'

  431) Gitlab::LegacyGithubImport::BranchFormatter#exists? returns false when branch exists and commit is not part of the branch
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:25:in `block (3 levels) in <main>'

  432) Gitlab::LegacyGithubImport::BranchFormatter#exists? returns false when branch does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:31:in `block (3 levels) in <main>'

  433) Gitlab::LegacyGithubImport::BranchFormatter#repo returns raw repo
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:39:in `block (3 levels) in <main>'

  434) Gitlab::LegacyGithubImport::BranchFormatter#sha returns raw sha
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:47:in `block (3 levels) in <main>'

  435) Gitlab::LegacyGithubImport::BranchFormatter#valid? returns true when raw sha and ref are present
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:55:in `block (3 levels) in <main>'

  436) Gitlab::LegacyGithubImport::BranchFormatter#valid? returns false when raw sha is blank
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:61:in `block (3 levels) in <main>'

  437) Gitlab::LegacyGithubImport::BranchFormatter#valid? returns false when raw ref is blank
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:67:in `block (3 levels) in <main>'

  438) Gitlab::LegacyGithubImport::CommentFormatter#attributes when do not reference a portion of the diff returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:34:in `block (4 levels) in <main>'

  439) Gitlab::LegacyGithubImport::CommentFormatter#attributes when on a portion of the diff returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:62:in `block (4 levels) in <main>'

  440) Gitlab::LegacyGithubImport::CommentFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:22:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:82:in `block (4 levels) in <main>'

  441) Gitlab::LegacyGithubImport::CommentFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:22:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:88:in `block (4 levels) in <main>'

  442) Gitlab::LegacyGithubImport::CommentFormatter#attributes when author is a GitLab user returns note without created at tag line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:22:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:94:in `block (4 levels) in <main>'

  443) Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute calls import methods
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:271
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:10:in `block (3 levels) in <main>'

  444) Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute an error occurs" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:272
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:43:in `block (3 levels) in <main>'

  445) Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs does not raise an error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute an error occurs" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:272
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:43:in `block (3 levels) in <main>'

  446) Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs stores error messages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute an error occurs" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:272
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:43:in `block (3 levels) in <main>'

  447) Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request stills open does not remove branches
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport unit-testing" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:273
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:196:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:191:in `block (4 levels) in <main>'

  448) Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request is closed does remove branches
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport unit-testing" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:273
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:205:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:191:in `block (4 levels) in <main>'

  449) Gitlab::LegacyGithubImport::Importer when importing a GitHub project #client instantiates a Client
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:277:in `block (4 levels) in <main>'

  450) Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute calls import methods
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:298
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  451) Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute an error occurs" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:301
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  452) Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs does not raise an error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute an error occurs" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:301
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  453) Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs stores error messages
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::Importer#execute an error occurs" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:301
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  454) Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request stills open does not remove branches
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport unit-testing" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:302
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  455) Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request is closed does remove branches
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport unit-testing" called from ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:302
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  456) Gitlab::LegacyGithubImport::Importer when importing a Gitea project #client instantiates a Client
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:215:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:295:in `block (3 levels) in <main>'

  457) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is open returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  458) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is closed returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  459) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  460) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  461) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  462) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns nil when milestone does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  463) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns milestone when it exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  464) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  465) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  466) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  467) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns description without created at tag line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:149
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  468) Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#number returns issue number
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#number" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:150
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  469) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is open returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  470) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is closed returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  471) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  472) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  473) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  474) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns nil when milestone does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  475) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns milestone when it exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  476) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  477) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  478) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  479) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns description without created at tag line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:158
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  480) Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#number returns issue number
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::IssueFormatter#number" called from ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:159
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  481) Gitlab::LegacyGithubImport::IssueFormatter#has_comments? when number of comments is greater than zero returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  482) Gitlab::LegacyGithubImport::IssueFormatter#has_comments? when number of comments is equal to zero returns false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  483) Gitlab::LegacyGithubImport::IssueFormatter#pull_request? when mention a pull request returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  484) Gitlab::LegacyGithubImport::IssueFormatter#pull_request? when does not mention a pull request returns false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:7:in `block (2 levels) in <main>'

  485) Gitlab::LegacyGithubImport::LabelFormatter#attributes returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:13:in `block (3 levels) in <main>'

  486) Gitlab::LegacyGithubImport::LabelFormatter#create! when label does not exist creates a new label
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:24:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:24:in `block (4 levels) in <main>'

  487) Gitlab::LegacyGithubImport::LabelFormatter#create! when label exists does not create a new label
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:30:in `block (4 levels) in <main>'

  488) Gitlab::LegacyGithubImport::MilestoneFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is open returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::MilestoneFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:87
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:33:in `block (4 levels) in <main>'

  489) Gitlab::LegacyGithubImport::MilestoneFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is closed returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::MilestoneFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:87
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:52:in `block (4 levels) in <main>'

  490) Gitlab::LegacyGithubImport::MilestoneFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone has a due date returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::MilestoneFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:87
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:72:in `block (4 levels) in <main>'

  491) Gitlab::LegacyGithubImport::MilestoneFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is open returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::MilestoneFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:97
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:94:in `block (3 levels) in <main>'

  492) Gitlab::LegacyGithubImport::MilestoneFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is closed returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::MilestoneFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:97
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:94:in `block (3 levels) in <main>'

  493) Gitlab::LegacyGithubImport::MilestoneFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone has a due date returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::MilestoneFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:97
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb:94:in `block (3 levels) in <main>'

  494) Gitlab::LegacyGithubImport::ProjectCreator#execute creates a project
       Failure/Error: expect { service.execute }.to change(Project, :count).by(1)
         expected `Project.count` to have changed by 1, but was changed by 0
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:30:in `block (3 levels) in <main>'

  495) Gitlab::LegacyGithubImport::ProjectCreator#execute handle GitHub credentials
       Failure/Error: expect(project).to receive(:add_import_job)

         (#<Project id: group570/vim>).add_import_job(*(any args))
             expected: 1 time with any arguments
             received: 0 times with any arguments
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:24:in `block (3 levels) in <main>'

  496) Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project is private sets project visibility to private
       Failure/Error: expect(project).to receive(:add_import_job)

         (#<Project id: group571/vim>).add_import_job(*(any args))
             expected: 1 time with any arguments
             received: 0 times with any arguments
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:24:in `block (3 levels) in <main>'

  497) Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project is public sets project visibility to namespace visibility level
       Failure/Error: expect(project).to receive(:add_import_job)

         (#<Project id: group572/vim>).add_import_job(*(any args))
             expected: 1 time with any arguments
             received: 0 times with any arguments
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:24:in `block (3 levels) in <main>'

  498) Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project is public when importing into a user namespace sets project visibility to user namespace visibility level
       Failure/Error: expect(project).to receive(:add_import_job)

         (#<Project id: user7458/vim>).add_import_job(*(any args))
             expected: 1 time with any arguments
             received: 0 times with any arguments
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:24:in `block (3 levels) in <main>'

  499) Gitlab::LegacyGithubImport::ProjectCreator#execute when visibility level is restricted when GitHub project is private sets project visibility to the default project visibility
       Failure/Error: expect(project).to receive(:add_import_job)

         (#<Project id: group574/vim>).add_import_job(*(any args))
             expected: 1 time with any arguments
             received: 0 times with any arguments
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:24:in `block (3 levels) in <main>'

  500) Gitlab::LegacyGithubImport::ProjectCreator#execute when visibility level is restricted when GitHub project is public sets project visibility to the default project visibility
       Failure/Error: expect(project).to receive(:add_import_job)

         (#<Project id: group575/vim>).add_import_job(*(any args))
             expected: 1 time with any arguments
             received: 0 times with any arguments
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:24:in `block (3 levels) in <main>'

  501) Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project has wiki does not create the wiki repository
       Failure/Error: project.disk_path + '.wiki'

       NoMethodError:
         undefined method `+' for nil:NilClass
       # ./app/models/concerns/storage/legacy_project_wiki.rb:8:in `disk_path'
       # ./app/models/project_wiki.rb:172:in `repository'
       # ./app/models/project_wiki.rb:77:in `repository_exists?'
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:109:in `block (4 levels) in <main>'

  502) Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project does not have wiki creates the wiki repository
       Failure/Error: project.disk_path + '.wiki'

       NoMethodError:
         undefined method `+' for nil:NilClass
       # ./app/models/concerns/storage/legacy_project_wiki.rb:8:in `disk_path'
       # ./app/models/project_wiki.rb:172:in `repository'
       # ./app/models/project_wiki.rb:77:in `repository_exists?'
       # ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:119:in `block (4 levels) in <main>'

  503) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is open returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:58:in `block (4 levels) in <main>'

  504) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is closed returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:85:in `block (4 levels) in <main>'

  505) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is merged returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:113:in `block (4 levels) in <main>'

  506) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:136:in `block (4 levels) in <main>'

  507) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:142:in `block (4 levels) in <main>'

  508) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:148:in `block (4 levels) in <main>'

  509) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:156:in `block (4 levels) in <main>'

  510) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:162:in `block (4 levels) in <main>'

  511) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:168:in `block (4 levels) in <main>'

  512) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns description without created at tag line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:174:in `block (4 levels) in <main>'

  513) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns nil when milestone does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:183:in `block (4 levels) in <main>'

  514) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns milestone when it exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:255
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:187:in `block (4 levels) in <main>'

  515) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#number returns pull request number
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#number" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:256
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:198:in `block (3 levels) in <main>'

  516) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch exists returns branch ref
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:257
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:207:in `block (4 levels) in <main>'

  517) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:257
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:215:in `block (4 levels) in <main>'

  518) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:257
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:223:in `block (4 levels) in <main>'

  519) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a deleted fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:257
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:231:in `block (4 levels) in <main>'

  520) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch exists returns branch ref
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:258
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:241:in `block (4 levels) in <main>'

  521) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:258
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:249:in `block (4 levels) in <main>'

  522) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is open returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  523) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is closed returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  524) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is merged returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  525) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  526) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  527) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  528) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  529) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  530) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  531) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns description without created at tag line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  532) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns nil when milestone does not exist
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  533) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns milestone when it exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#attributes" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:266
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  534) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#number returns pull request number
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#number" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:267
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  535) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch exists returns branch ref
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:268
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  536) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:268
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  537) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:268
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  538) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a deleted fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:268
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  539) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch exists returns branch ref
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:269
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  540) Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name" called from ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:269
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:263:in `block (3 levels) in <main>'

  541) Gitlab::LegacyGithubImport::PullRequestFormatter#valid? when source, and target repos are not a fork returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:277:in `block (4 levels) in <main>'

  542) Gitlab::LegacyGithubImport::PullRequestFormatter#valid? when source repo is a fork returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:286:in `block (4 levels) in <main>'

  543) Gitlab::LegacyGithubImport::PullRequestFormatter#valid? when target repo is a fork returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:295:in `block (4 levels) in <main>'

  544) Gitlab::LegacyGithubImport::PullRequestFormatter#cross_project? when source and target repositories are different returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:305:in `block (4 levels) in <main>'

  545) Gitlab::LegacyGithubImport::PullRequestFormatter#cross_project? when source repository does not exist anymore returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:313:in `block (4 levels) in <main>'

  546) Gitlab::LegacyGithubImport::PullRequestFormatter#cross_project? when source and target repositories are the same returns false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:321:in `block (4 levels) in <main>'

  547) Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_exists? returns false when is a cross_project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:330:in `block (3 levels) in <main>'

  548) Gitlab::LegacyGithubImport::PullRequestFormatter#url return raw url
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:338:in `block (3 levels) in <main>'

  549) Gitlab::LegacyGithubImport::PullRequestFormatter#opened? returns true when state is "open"
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:43:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:346:in `block (3 levels) in <main>'

  550) Gitlab::LegacyGithubImport::ReleaseFormatter#attributes returns formatted attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:6:in `block (2 levels) in <main>'

  551) Gitlab::LegacyGithubImport::ReleaseFormatter#attributes with a nil published_at date inserts a timestamp for released_at
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:6:in `block (2 levels) in <main>'

  552) Gitlab::LegacyGithubImport::ReleaseFormatter#valid when release is not a draft returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:6:in `block (2 levels) in <main>'

  553) Gitlab::LegacyGithubImport::ReleaseFormatter#valid when release is draft returns false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:6:in `block (2 levels) in <main>'

  554) Gitlab::LegacyGithubImport::WikiFormatter#disk_path appends .wiki to disk path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:12:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:16:in `block (3 levels) in <main>'

  555) Gitlab::LegacyGithubImport::WikiFormatter#full_path appends .wiki to project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:12:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:22:in `block (3 levels) in <main>'

  556) Gitlab::LegacyGithubImport::WikiFormatter#import_url returns URL of the wiki repository
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:12:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:28:in `block (3 levels) in <main>'

  557) Gitlab::LfsToken#deploy_key_pushable? when actor is not a DeployKey returns false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/lfs_token_spec.rb:166:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:169:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:259:in `block (2 levels) in <top (required)>'

  558) Gitlab::LfsToken#deploy_key_pushable? when actor is a DeployKey but the DeployKey cannot push to the project returns false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/lfs_token_spec.rb:174:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:176:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:182:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:259:in `block (2 levels) in <top (required)>'

  559) Gitlab::LfsToken#deploy_key_pushable? when actor is a DeployKey and the DeployKey can push to the project returns true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/lfs_token_spec.rb:174:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:176:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/lfs_token_spec.rb:190:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:259:in `block (2 levels) in <top (required)>'

  560) Gitlab::ManifestImport::ProjectCreator#execute should change `Project.count` by 1
       Failure/Error: it { expect { subject.execute }.to change { Project.count }.by(1) }
         expected `Project.count` to have changed by 1, but was changed by 0
       # ./spec/lib/gitlab/manifest_import/project_creator_spec.rb:23:in `block (3 levels) in <main>'

  561) Gitlab::ManifestImport::ProjectCreator#execute creates project with valid full path and import url
       Failure/Error: expect(project.full_path).to eq(File.join(group.path, 'device/common'))

       NoMethodError:
         undefined method `full_path' for nil:NilClass
       # ./spec/lib/gitlab/manifest_import/project_creator_spec.rb:31:in `block (3 levels) in <main>'

  562) Gitlab::Metrics::Dashboard::Finder.find behaves like misconfigured dashboard service response returns an appropriate message and status code
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "misconfigured dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:20
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  563) Gitlab::Metrics::Dashboard::Finder.find when the dashboard exists behaves like valid dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:57
       Shared Example Group: "valid dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:25
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  564) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is configured incorrectly behaves like misconfigured dashboard service response returns an appropriate message and status code
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "misconfigured dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:31
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  565) Gitlab::Metrics::Dashboard::Finder.find when the dashboard contains a metric without a query behaves like misconfigured dashboard service response returns an appropriate message and status code
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "misconfigured dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:38
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  566) Gitlab::Metrics::Dashboard::Finder.find when the system dashboard is specified behaves like valid dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:57
       Shared Example Group: "valid dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:44
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  567) Gitlab::Metrics::Dashboard::Finder.find when no dashboard is specified behaves like valid dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:57
       Shared Example Group: "valid dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:50
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  568) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:72
       Shared Example Group: "valid embedded dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:57
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  569) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when params are incomplete behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:72
       Shared Example Group: "valid embedded dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:62
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  570) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a custom metric behaves like misconfigured dashboard service response returns an appropriate message and status code
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "misconfigured dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:78
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  571) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a custom metric when the metric exists behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:72
       Shared Example Group: "valid embedded dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:85
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  572) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a project-defined panel behaves like misconfigured dashboard service response returns an appropriate message and status code
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "misconfigured dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:102
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  573) Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a project-defined panel when the metric exists behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "valid dashboard service response for schema" called from ./spec/support/helpers/metrics_dashboard_helpers.rb:72
       Shared Example Group: "valid embedded dashboard service response" called from ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:107
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  574) Gitlab::Metrics::Dashboard::Finder.find_raw 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  575) Gitlab::Metrics::Dashboard::Finder.find_raw when the system dashboard is specified 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  576) Gitlab::Metrics::Dashboard::Finder.find_raw when an existing project dashboard is specified 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  577) Gitlab::Metrics::Dashboard::Finder.find_all_paths includes only the system dashboard by default
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  578) Gitlab::Metrics::Dashboard::Finder.find_all_paths when the project contains dashboards includes system and project dashboards
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:8:in `block (2 levels) in <main>'

  579) Gitlab::Metrics::Dashboard::Processor process includes a path for the prometheus endpoint with each metric
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:127:in `all_metrics'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:23:in `block (3 levels) in <main>'

  580) Gitlab::Metrics::Dashboard::Processor process when the dashboard is not present returns nil
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:32:in `block (4 levels) in <main>'

  581) Gitlab::Metrics::Dashboard::Processor process when dashboard config corresponds to common metrics inserts metric ids into the config
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:127:in `all_metrics'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:40:in `block (4 levels) in <main>'

  582) Gitlab::Metrics::Dashboard::Processor process when the project has associated metrics includes project-specific metrics
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:48:in `block (4 levels) in <main>'

  583) Gitlab::Metrics::Dashboard::Processor process when the project has associated metrics orders groups by priority and panels by weight
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:48:in `block (4 levels) in <main>'

  584) Gitlab::Metrics::Dashboard::Processor process when the project has associated metrics when the dashboard should not include project metrics includes only dashboard metrics
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:48:in `block (4 levels) in <main>'

  585) Gitlab::Metrics::Dashboard::Processor process when the dashboard is missing panel_groups behaves like errors with message raises a DashboardLayoutError
       Failure/Error: expect { dashboard }.to raise_error(error_class, expected_message)

         expected Gitlab::Metrics::Dashboard::Errors::DashboardProcessingError with "Top-level key :panel_groups must be an array", got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'
       Shared Example Group: "errors with message" called from ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:102
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'

  586) Gitlab::Metrics::Dashboard::Processor process when the dashboard contains a panel_group which is missing panels behaves like errors with message raises a DashboardLayoutError
       Failure/Error: expect { dashboard }.to raise_error(error_class, expected_message)

         expected Gitlab::Metrics::Dashboard::Errors::DashboardProcessingError with "Each \"panel_group\" must define an array :panels", got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'
       Shared Example Group: "errors with message" called from ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:108
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'

  587) Gitlab::Metrics::Dashboard::Processor process when the dashboard contains a panel which is missing metrics behaves like errors with message raises a DashboardLayoutError
       Failure/Error: expect { dashboard }.to raise_error(error_class, expected_message)

         expected Gitlab::Metrics::Dashboard::Errors::DashboardProcessingError with "Each \"panel\" must define an array :metrics", got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'
       Shared Example Group: "errors with message" called from ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:114
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'

  588) Gitlab::Metrics::Dashboard::Processor process when the dashboard contains a metric which is missing a query behaves like errors with message raises a DashboardLayoutError
       Failure/Error: expect { dashboard }.to raise_error(error_class, expected_message)

         expected Gitlab::Metrics::Dashboard::Errors::DashboardProcessingError with "Each \"metric\" must define one of :query or :query_range", got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:7:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:19:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:20:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'
       Shared Example Group: "errors with message" called from ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:120
       # ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:95:in `block (4 levels) in <main>'

  589) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the query and resources are configured correctly generates a gitlab-yml formatted dashboard
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  590) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the datasource is not proxyable behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:46
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  591) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when query param "panelId" is not specified behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:54
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  592) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when query param "from" is not specified behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:62
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  593) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when query param "to" is not specified behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:70
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  594) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the panel is not a graph behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:78
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  595) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the panel is not a line graph behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:86
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  596) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the query dashboard includes undefined variables behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:94
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  597) Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the expression contains unsupported global variables behaves like processing error raises a processing error
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "processing error" called from ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:102
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:9:in `block (2 levels) in <main>'

  598) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with simple 2-segment project path with subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:38:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  599) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with simple 2-segment project path without subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:46:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  600) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  601) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  602) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  603) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  604) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  605) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  606) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  607) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  608) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  609) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  610) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  611) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  612) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  613) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  614) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  615) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  616) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  617) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  618) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a public project without a repository returns 404
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:167:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:168:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  619) Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a non-standard head returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:202
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:181:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:182:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  620) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with simple 2-segment project path with subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:38:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  621) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with simple 2-segment project path without subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:46:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  622) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  623) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  624) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  625) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  626) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  627) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  628) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  629) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  630) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  631) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  632) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  633) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  634) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  635) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  636) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  637) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  638) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  639) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  640) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a public project without a repository returns 404
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:167:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:168:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  641) Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a non-standard head returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:210
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:181:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:182:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  642) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with simple 2-segment project path with subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:38:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  643) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with simple 2-segment project path without subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:46:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  644) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  645) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  646) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  647) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  648) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  649) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  650) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  651) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  652) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  653) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  654) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  655) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  656) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  657) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  658) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  659) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  660) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  661) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  662) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a public project without a repository returns 404
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:167:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:168:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  663) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a non-standard head returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:218
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:181:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:182:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  664) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with simple 2-segment project path with subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:38:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  665) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with simple 2-segment project path without subpackages returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:35:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:46:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  666) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  667) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  668) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  669) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  670) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  671) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:140
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:138:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  672) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  673) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  674) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  675) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  676) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  677) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:146
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:144:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  678) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  679) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:77
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  680) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  681) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:99
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  682) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:107
       Shared Example Group: "authenticated" called from ./spec/lib/gitlab/middleware/go_spec.rb:121
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  683) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "unauthorized" called from ./spec/lib/gitlab/middleware/go_spec.rb:129
       Shared Example Group: "a nested project" called from ./spec/lib/gitlab/middleware/go_spec.rb:152
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:56:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:150:in `block (7 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  684) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a public project without a repository returns 404
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:167:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:168:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  685) Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a non-standard head returns the full project path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "go-get=1" called from ./spec/lib/gitlab/middleware/go_spec.rb:226
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/middleware/go_spec.rb:181:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:182:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/middleware/go_spec.rb:30:in `block (4 levels) in <main>'

  686) Gitlab::MultiCollectionPaginator combines both collections
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/multi_collection_paginator_spec.rb:9:in `block (2 levels) in <main>'

  687) Gitlab::MultiCollectionPaginator with a full first page knows the total count of the collection
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/multi_collection_paginator_spec.rb:23:in `block (3 levels) in <main>'

  688) Gitlab::MultiCollectionPaginator with a full first page fills the first page with elements of the first collection
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/multi_collection_paginator_spec.rb:23:in `block (3 levels) in <main>'

  689) Gitlab::MultiCollectionPaginator with a full first page fils the second page with a mixture of the first & second collection
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/multi_collection_paginator_spec.rb:23:in `block (3 levels) in <main>'

  690) Gitlab::MultiCollectionPaginator with a full first page fils the last page with elements from the second collection
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/multi_collection_paginator_spec.rb:23:in `block (3 levels) in <main>'

  691) Gitlab::NoteableMetadata snippets aggregates stats on snippets
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/noteable_metadata_spec.rb:19:in `block (3 levels) in <main>'

  692) Gitlab::OptimisticLocking#retry_lock does not reload object if state changes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/optimistic_locking_spec.rb:6:in `block (2 levels) in <main>'

  693) Gitlab::OptimisticLocking#retry_lock retries action if exception is raised
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/optimistic_locking_spec.rb:6:in `block (2 levels) in <main>'

  694) Gitlab::OptimisticLocking#retry_lock raises exception when too many retries
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/optimistic_locking_spec.rb:6:in `block (2 levels) in <main>'

  695) Gitlab::OptimisticLocking#retry_optimistic_lock when locking module is mixed in is an alias for retry_lock
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/optimistic_locking_spec.rb:6:in `block (2 levels) in <main>'

  696) Gitlab::Pagination::Keyset::Pager#paginate loads the result relation only once
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:12:in `block (2 levels) in <main>'

  697) Gitlab::Pagination::Keyset::Pager#paginate passes information about next page to request
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:12:in `block (2 levels) in <main>'

  698) Gitlab::Pagination::Keyset::Pager#paginate returns an array with the loaded records
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:12:in `block (2 levels) in <main>'

  699) Gitlab::Pagination::Keyset::Pager#paginate when retrieving the last page indicates this is the last page
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:12:in `block (2 levels) in <main>'

  700) Gitlab::Pagination::Keyset::Pager#paginate when retrieving an empty page indicates this is the last page
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:12:in `block (2 levels) in <main>'

  701) Gitlab::Pagination::Keyset::Pager#paginate validating the order clause raises an error if has a different order clause than the page
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:12:in `block (2 levels) in <main>'

  702) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is unset behaves like paginated response returns appropriate amount of resources
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:70
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  703) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is unset behaves like paginated response executes only one SELECT COUNT query
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:70
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  704) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is unset behaves like response with pagination headers adds appropriate headers
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "response with pagination headers" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:71
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  705) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is disabled behaves like paginated response returns appropriate amount of resources
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:79
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  706) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is disabled behaves like paginated response executes only one SELECT COUNT query
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:79
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  707) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is disabled behaves like response with pagination headers adds appropriate headers
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "response with pagination headers" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:80
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  708) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is less than MAX_COUNT_LIMIT behaves like paginated response returns appropriate amount of resources
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:93
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  709) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is less than MAX_COUNT_LIMIT behaves like paginated response executes only one SELECT COUNT query
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:93
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  710) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is less than MAX_COUNT_LIMIT behaves like response with pagination headers adds appropriate headers
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "response with pagination headers" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:94
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  711) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is more than MAX_COUNT_LIMIT does not return the X-Total and X-Total-Pages headers
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  712) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is more than MAX_COUNT_LIMIT behaves like paginated response returns appropriate amount of resources
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:102
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  713) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is more than MAX_COUNT_LIMIT behaves like paginated response executes only one SELECT COUNT query
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "paginated response" called from ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:102
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  714) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated second page returns appropriate amount of resources
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  715) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated second page adds appropriate headers
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  716) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated if order is not present it adds default order(:id) if no order is present
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  717) Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated if order is present it does not add anything
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:33:in `block (4 levels) in <main>'

  718) Gitlab::PhabricatorImport::BaseWorker#perform does not do anything when the import is not in progress
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:43:in `block (3 levels) in <main>'

  719) Gitlab::PhabricatorImport::BaseWorker#perform calls import for the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:51:in `block (3 levels) in <main>'

  720) Gitlab::PhabricatorImport::BaseWorker#perform marks the project as imported if there was only one job running
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:57:in `block (3 levels) in <main>'

  721) Gitlab::PhabricatorImport::BaseWorker#perform does not mark the job as finished when there are more scheduled jobs
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:32:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:63:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:63:in `times'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:63:in `block (3 levels) in <main>'

  722) Gitlab::PhabricatorImport::BaseWorker#perform decrements the job counter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:32:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:71:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:71:in `block (3 levels) in <main>'

  723) Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model returns nil if there was nothing cached for the phabricator id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:6:in `block (2 levels) in <main>'

  724) Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model returns the object if it was set in redis
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:6:in `block (2 levels) in <main>'

  725) Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model extends the TTL for the cache key
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:6:in `block (2 levels) in <main>'

  726) Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model sets the object in redis once if a block was given and nothing was cached
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:6:in `block (2 levels) in <main>'

  727) Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model does not cache `nil` objects
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:6:in `block (2 levels) in <main>'

  728) Gitlab::PhabricatorImport::Cache::Map#set_gitlab_model sets the class and id in redis with a ttl
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:6:in `block (2 levels) in <main>'

  729) Gitlab::PhabricatorImport::Conduit::Client#get performs and parses a request
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/phabricator_import/conduit/client.rb:12:in `get'
       # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:14:in `block (3 levels) in <main>'

  730) Gitlab::PhabricatorImport::Conduit::Client#get wraps request errors in an `ApiError`
       Failure/Error: expect { client.get('test') }.to raise_error(Gitlab::PhabricatorImport::Conduit::ApiError)

         expected Gitlab::PhabricatorImport::Conduit::ApiError, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/phabricator_import/conduit/client.rb:12:in `get'
           # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:23:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:23:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:23:in `block (3 levels) in <main>'

  731) Gitlab::PhabricatorImport::Conduit::Client#get raises response error
       Failure/Error:
         expect { client.get('test') }
           .to raise_error(Gitlab::PhabricatorImport::Conduit::ResponseError, /has the wrong length/)

         expected Gitlab::PhabricatorImport::Conduit::ResponseError with message matching /has the wrong length/, got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/phabricator_import/conduit/client.rb:12:in `get'
           # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:29:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:29:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:29:in `block (3 levels) in <main>'

  732) Gitlab::PhabricatorImport::ImportTasksWorker#perform calls the correct importer
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/import_tasks_worker_spec.rb:7:in `block (3 levels) in <main>'

  733) Gitlab::PhabricatorImport::Importer#execute sets a custom jid that will be kept up to date
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:18:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:18:in `block (3 levels) in <main>'

  734) Gitlab::PhabricatorImport::Importer#execute starts importing tasks
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:22:in `block (3 levels) in <main>'

  735) Gitlab::PhabricatorImport::Importer#execute marks the import as failed when something goes wrong
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:15:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/importer_spec.rb:28:in `block (3 levels) in <main>'

  736) Gitlab::PhabricatorImport::Issues::Importer#execute imports each task in the response
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:5:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:14:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:19:in `block (2 levels) in <main>'

  737) Gitlab::PhabricatorImport::Issues::Importer#execute stubbed task import schedules the next batch if there is one
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:5:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:14:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:19:in `block (2 levels) in <main>'

  738) Gitlab::PhabricatorImport::Issues::Importer#execute stubbed task import does not reschedule when there is no next page
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:5:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:14:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:19:in `block (2 levels) in <main>'

  739) Gitlab::PhabricatorImport::Issues::TaskImporter#execute creates the issue with the expected attributes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:5:in `block (2 levels) in <main>'

  740) Gitlab::PhabricatorImport::Issues::TaskImporter#execute does not recreate the issue when called multiple times
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:5:in `block (2 levels) in <main>'

  741) Gitlab::PhabricatorImport::Issues::TaskImporter#execute does not trigger a save when the object did not change
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:5:in `block (2 levels) in <main>'

  742) Gitlab::PhabricatorImport::Issues::TaskImporter#execute links the author if the author can be found
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:5:in `block (2 levels) in <main>'

  743) Gitlab::PhabricatorImport::Issues::TaskImporter#execute links an assignee if the user can be found
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:5:in `block (2 levels) in <main>'

  744) Gitlab::PhabricatorImport::ProjectCreator#execute creates a project correctly and schedule an import
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7715/new-phab-import>.persisted?` to return true, got false
       # ./spec/lib/gitlab/phabricator_import/project_creator_spec.rb:22:in `block (3 levels) in <main>'
       # ./spec/support/sidekiq.rb:21:in `block (3 levels) in <main>'
       # ./spec/support/sidekiq.rb:21:in `block (2 levels) in <main>'

  745) Gitlab::PhabricatorImport::UserFinder#find for a cached phid returns the existing user
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:11:in `block (2 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  746) Gitlab::PhabricatorImport::UserFinder#find for a cached phid does not perform a find using the API
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:11:in `block (2 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  747) Gitlab::PhabricatorImport::UserFinder#find for a cached phid excludes the phid from the request if one needs to be made
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:11:in `block (2 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  748) Gitlab::PhabricatorImport::UserFinder#find when the phid is not cached loads the users from the API once
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:11:in `block (2 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  749) Gitlab::PhabricatorImport::UserFinder#find when the phid is not cached adds found users to the cache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:11:in `block (2 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  750) Gitlab::PhabricatorImport::UserFinder#find when the phid is not cached only returns users that are members of the project
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:11:in `block (2 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  751) Gitlab::ProjectAuthorizations user added to group and project returns the correct number of authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:18:in `block (3 levels) in <main>'

  752) Gitlab::ProjectAuthorizations user added to group and project includes the correct projects
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:18:in `block (3 levels) in <main>'

  753) Gitlab::ProjectAuthorizations user added to group and project includes the correct access levels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:18:in `block (3 levels) in <main>'

  754) Gitlab::ProjectAuthorizations with nested groups includes nested groups
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:49:in `block (3 levels) in <main>'

  755) Gitlab::ProjectAuthorizations with nested groups inherits access levels when the user is not a member of a nested group
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:49:in `block (3 levels) in <main>'

  756) Gitlab::ProjectAuthorizations with nested groups uses the greatest access level when a user is a member of a nested group
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:49:in `block (3 levels) in <main>'

  757) Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is enabled group user creates proper authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:88:in `block (3 levels) in <main>'

  758) Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is enabled parent group user creates proper authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:88:in `block (3 levels) in <main>'

  759) Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is enabled child group user creates proper authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:88:in `block (3 levels) in <main>'

  760) Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is disabled group user creates proper authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:88:in `block (3 levels) in <main>'

  761) Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is disabled parent group user creates proper authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:88:in `block (3 levels) in <main>'

  762) Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is disabled child group user creates proper authorizations
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_authorizations_spec.rb:88:in `block (3 levels) in <main>'

  763) Gitlab::ProjectSearchResults does not list issues on private projects
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:184:in `block (2 levels) in <main>'

  764) Gitlab::ProjectSearchResults initialize with empty ref 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:15:in `block (3 levels) in <main>'

  765) Gitlab::ProjectSearchResults initialize with empty ref 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:16:in `block (3 levels) in <main>'

  766) Gitlab::ProjectSearchResults initialize with ref 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:21:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:23:in `block (3 levels) in <main>'

  767) Gitlab::ProjectSearchResults initialize with ref 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:21:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:24:in `block (3 levels) in <main>'

  768) Gitlab::ProjectSearchResults initialize with ref 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:21:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:25:in `block (3 levels) in <main>'

  769) Gitlab::ProjectSearchResults#formatted_count scope: "blobs", count_method: :blobs_count, expected: "1234" returns the expected formatted count
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:44:in `block (4 levels) in <main>'

  770) Gitlab::ProjectSearchResults#formatted_count scope: "notes", count_method: :limited_notes_count, expected: "99+" returns the expected formatted count
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:44:in `block (4 levels) in <main>'

  771) Gitlab::ProjectSearchResults#formatted_count scope: "wiki_blobs", count_method: :wiki_blobs_count, expected: "1234" returns the expected formatted count
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:44:in `block (4 levels) in <main>'

  772) Gitlab::ProjectSearchResults#formatted_count scope: "commits", count_method: :commits_count, expected: "1234" returns the expected formatted count
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:44:in `block (4 levels) in <main>'

  773) Gitlab::ProjectSearchResults#formatted_count scope: "projects", count_method: :limited_projects_count, expected: "99+" returns the expected formatted count
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:44:in `block (4 levels) in <main>'

  774) Gitlab::ProjectSearchResults#formatted_count scope: "unknown", count_method: nil, expected: nil returns the expected formatted count
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:31:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:45:in `block (4 levels) in <main>'

  775) Gitlab::ProjectSearchResults blob search behaves like general blob search finds by name
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:144:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:52:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:83:in `block (3 levels) in <main>'

  776) Gitlab::ProjectSearchResults blob search behaves like general blob search loads all blobs for path matches in single batch
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:144:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:89:in `block (3 levels) in <main>'

  777) Gitlab::ProjectSearchResults blob search behaves like general blob search finds by content
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:144:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:52:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:94:in `block (3 levels) in <main>'

  778) Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is disabled hides blobs from members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:148:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:55:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:58:in `block (4 levels) in <main>'

  779) Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is disabled hides blobs from non-members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:148:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:55:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:52:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:64:in `block (4 levels) in <main>'

  780) Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is internal finds blobs for members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:149:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:69:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:72:in `block (4 levels) in <main>'

  781) Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is internal hides blobs from non-members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:146
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:149:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:69:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:52:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:78:in `block (4 levels) in <main>'

  782) Gitlab::ProjectSearchResults blob search behaves like blob search repository ref when repository_ref exists uses it
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "blob search repository ref" called from ./spec/lib/gitlab/project_search_results_spec.rb:154
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:144:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:156:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:108:in `block (3 levels) in <main>'

  783) Gitlab::ProjectSearchResults blob search behaves like blob search repository ref when repository_ref is not present uses project repository default reference
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "blob search repository ref" called from ./spec/lib/gitlab/project_search_results_spec.rb:154
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:144:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:156:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:108:in `block (3 levels) in <main>'

  784) Gitlab::ProjectSearchResults blob search behaves like blob search repository ref when repository_ref is blank uses project repository default reference
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "blob search repository ref" called from ./spec/lib/gitlab/project_search_results_spec.rb:154
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:144:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:156:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:108:in `block (3 levels) in <main>'

  785) Gitlab::ProjectSearchResults wiki search behaves like general blob search finds by name
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:161:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  786) Gitlab::ProjectSearchResults wiki search behaves like general blob search loads all blobs for path matches in single batch
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:161:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  787) Gitlab::ProjectSearchResults wiki search behaves like general blob search finds by content
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:161:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  788) Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is disabled hides wiki blobs from members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:171:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:55:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  789) Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is disabled hides wiki blobs from non-members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:171:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:55:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  790) Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is internal finds wiki blobs for members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:172:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:69:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  791) Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is internal hides wiki blobs from non-members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "general blob search" called from ./spec/lib/gitlab/project_search_results_spec.rb:169
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:172:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:69:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  792) Gitlab::ProjectSearchResults wiki search behaves like blob search repository ref when repository_ref exists uses it
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "blob search repository ref" called from ./spec/lib/gitlab/project_search_results_spec.rb:177
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:161:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  793) Gitlab::ProjectSearchResults wiki search behaves like blob search repository ref when repository_ref is not present uses wiki repository default reference
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "blob search repository ref" called from ./spec/lib/gitlab/project_search_results_spec.rb:177
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:161:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  794) Gitlab::ProjectSearchResults wiki search behaves like blob search repository ref when repository_ref is blank uses wiki repository default reference
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "blob search repository ref" called from ./spec/lib/gitlab/project_search_results_spec.rb:177
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:161:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:162:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:165:in `block (3 levels) in <main>'

  795) Gitlab::ProjectSearchResults confidential issues does not list project confidential issues for non project members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:198:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:199:in `block (3 levels) in <main>'

  796) Gitlab::ProjectSearchResults confidential issues does not list project confidential issues for project members with guest role
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:198:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:199:in `block (3 levels) in <main>'

  797) Gitlab::ProjectSearchResults confidential issues lists project confidential issues for author
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:198:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:199:in `block (3 levels) in <main>'

  798) Gitlab::ProjectSearchResults confidential issues lists project confidential issues for assignee
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:198:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:199:in `block (3 levels) in <main>'

  799) Gitlab::ProjectSearchResults confidential issues lists project confidential issues for project members
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:198:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:199:in `block (3 levels) in <main>'

  800) Gitlab::ProjectSearchResults confidential issues lists all project issues for admin
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:198:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:199:in `block (3 levels) in <main>'

  801) Gitlab::ProjectSearchResults notes search lists notes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:270:in `block (3 levels) in <main>'

  802) Gitlab::ProjectSearchResults notes search doesn't list issue notes when access is restricted
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:279:in `block (3 levels) in <main>'

  803) Gitlab::ProjectSearchResults notes search doesn't list merge_request notes when access is restricted
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:288:in `block (3 levels) in <main>'

  804) Gitlab::ProjectSearchResults#limited_notes_count when count_limit is lower than total amount calls note finder once to get the limited amount of notes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:298:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:300:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:304:in `block (4 levels) in <main>'

  805) Gitlab::ProjectSearchResults#limited_notes_count when count_limit is higher than total amount calls note finder multiple times to get the limited amount of notes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:315:in `block (4 levels) in <main>'

  806) Gitlab::ProjectSearchResults commit search by commit message finds commit by message
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:393:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:398:in `block (4 levels) in <main>'

  807) Gitlab::ProjectSearchResults commit search by commit message handles when no commit match
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:393:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:404:in `block (4 levels) in <main>'

  808) Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is internal does not search if user is not authenticated
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:409
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:334:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:337:in `block (4 levels) in <main>'

  809) Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is internal searches if user is authenticated
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:409
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:334:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:343:in `block (4 levels) in <main>'

  810) Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private does not show commit to stranger
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:409
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  811) Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private team access shows commit to creator
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:409
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  812) Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private team access shows commit to master
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:409
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  813) Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private team access shows commit to reporter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:409
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  814) Gitlab::ProjectSearchResults commit search by commit hash shows commit by short hash id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:416:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:423:in `block (5 levels) in <main>'

  815) Gitlab::ProjectSearchResults commit search by commit hash shows commit by full hash id
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:416:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:423:in `block (5 levels) in <main>'

  816) Gitlab::ProjectSearchResults commit search by commit hash handles not existing commit hash correctly
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:416:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:430:in `block (4 levels) in <main>'

  817) Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is internal does not search if user is not authenticated
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:435
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:334:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:337:in `block (4 levels) in <main>'

  818) Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is internal searches if user is authenticated
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:435
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:334:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/project_search_results_spec.rb:343:in `block (4 levels) in <main>'

  819) Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private does not show commit to stranger
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:435
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  820) Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private team access shows commit to creator
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:435
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  821) Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private team access shows commit to master
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:435
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  822) Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private team access shows commit to reporter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "access restricted commits" called from ./spec/lib/gitlab/project_search_results_spec.rb:435
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:351:in `block (4 levels) in <main>'

  823) Gitlab::ProjectSearchResults user search returns the user belonging to the project matching the search query
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:444:in `block (3 levels) in <main>'

  824) Gitlab::ProjectSearchResults user search returns the user belonging to the group matching the search query
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/project_search_results_spec.rb:461:in `block (3 levels) in <main>'

  825) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/rails>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  826) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/spring>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  827) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/express>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  828) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/iosswift>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  829) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/dotnetcore>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  830) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/android>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  831) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/gomicro>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  832) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/hugo>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  833) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/jekyll>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  834) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/plainhtml>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  835) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/gitbook>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  836) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/hexo>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  837) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/nfhugo>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  838) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/nfjekyll>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  839) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/nfplainhtml>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  840) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/nfgitbook>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  841) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/nfhexo>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  842) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/salesforcedx>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  843) Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
       Failure/Error: expect(project).to be_persisted
         expected `#<Project id: user7810/serverless_framework>.persisted?` to return true, got false
       # ./spec/lib/gitlab/project_template_spec.rb:96:in `block (5 levels) in <main>'

  844) Gitlab::Prometheus::MetricGroup.common_metrics returns exactly two groups
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/metric_group_spec.rb:7:in `block (3 levels) in <main>'

  845) Gitlab::Prometheus::MetricGroup.common_metrics returns exactly three metric queries
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/metric_group_spec.rb:7:in `block (3 levels) in <main>'

  846) Gitlab::Prometheus::MetricGroup.common_metrics orders by priority
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/metric_group_spec.rb:7:in `block (3 levels) in <main>'

  847) Gitlab::Prometheus::MetricGroup.for_project returns exactly one common metric
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/metric_group_spec.rb:34:in `block (3 levels) in <main>'

  848) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery queries using specific time
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:16:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  849) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters query context contains kube_namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/clusters/clusters.rb:21:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:50:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  850) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains ci_environment_slug
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:55
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/clusters/clusters.rb:21:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:50:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  851) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains environment filter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:55
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/clusters/clusters.rb:21:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:50:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  852) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project without Kubernetes service query context contains empty kube_namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:69:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  853) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains ci_environment_slug
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:66
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:30:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  854) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains environment filter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:66
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:37:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  855) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery with one group where two metrics is found some queries return results return group data only for queries with results
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:104:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  856) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery with two groups with one metric each both queries return results return group data both queries
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:132:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  857) Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery with two groups with one metric each one query returns result return group data only for query with results
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:151:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:7:in `block (2 levels) in <main>'

  858) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery queries using specific time
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:16:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  859) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters query context contains kube_namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/clusters/clusters.rb:21:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:50:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  860) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains ci_environment_slug
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:55
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/clusters/clusters.rb:21:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:50:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  861) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains environment filter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:55
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/clusters/clusters.rb:21:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:50:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  862) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project without Kubernetes service query context contains empty kube_namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:69:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  863) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains ci_environment_slug
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:66
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:30:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  864) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains environment filter
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "query context containing environment slug and filter" called from ./spec/support/prometheus/additional_metrics_shared_examples.rb:66
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:37:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  865) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery with one group where two metrics is found some queries return results return group data only for queries with results
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:104:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  866) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery with two groups with one metric each both queries return results return group data both queries
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:132:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  867) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery with two groups with one metric each one query returns result return group data only for query with results
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:151:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  868) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery when start and end time parameters are provided as unix timestamps queries using the provided times
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:20:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:29:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  869) Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery when start and end time parameters are provided as Date/Time objects queries using the provided times converted to unix
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       Shared Example Group: "additional metrics query" called from ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:10
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:17:in `block (2 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:20:in `block (4 levels) in <main>'
       # ./spec/support/prometheus/additional_metrics_shared_examples.rb:16:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:40:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:7:in `block (2 levels) in <main>'

  870) Gitlab::Prometheus::Queries::DeploymentQuery sends appropriate queries to prometheus
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/queries/deployment_query_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/deployment_query_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/deployment_query_spec.rb:18:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/deployment_query_spec.rb:14:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/deployment_query_spec.rb:14:in `block (2 levels) in <main>'

  871) Gitlab::Prometheus::Queries::KnativeInvocationQuery verify queries has the query, but no data
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/queries/knative_invocation_query_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/knative_invocation_query_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/queries/knative_invocation_query_spec.rb:28:in `block (3 levels) in <main>'

  872) Gitlab::Prometheus::QueryVariables.call 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:13:in `block (3 levels) in <main>'

  873) Gitlab::Prometheus::QueryVariables.call 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:16:in `block (3 levels) in <main>'

  874) Gitlab::Prometheus::QueryVariables.call without deployment platform 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:11:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:21:in `block (4 levels) in <main>'

  875) Gitlab::Prometheus::QueryVariables.call with deployment platform with project cluster 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:29:in `block (5 levels) in <main>'

  876) Gitlab::Prometheus::QueryVariables.call with deployment platform with group cluster 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:8:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:7:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus/query_variables_spec.rb:41:in `block (5 levels) in <main>'

  877) Gitlab::PrometheusClient#ping issues a "query" request to the API endpoint
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:32:in `ping'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:14:in `block (3 levels) in <main>'

  878) Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SocketError is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "Can't connect to #{prometheus_url}")

         expected Gitlab::PrometheusClient::Error with "Can't connect to https://prometheus.invalid.example.com/api/v1/query?query=1", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:32:in `ping'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:102:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:71:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:71:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:104
       # ./spec/lib/gitlab/prometheus_client_spec.rb:71:in `block (4 levels) in <main>'

  879) Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SSLError is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "#{prometheus_url} contains invalid SSL data")

         expected Gitlab::PrometheusClient::Error with "https://prometheus.invalid.example.com/api/v1/query?query=1 contains invalid SSL data", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:32:in `ping'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:102:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:79:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:79:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:104
       # ./spec/lib/gitlab/prometheus_client_spec.rb:79:in `block (4 levels) in <main>'

  880) Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "Network connection error")

         expected Gitlab::PrometheusClient::Error with "Network connection error", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:32:in `ping'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:102:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:87:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:87:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:104
       # ./spec/lib/gitlab/prometheus_client_spec.rb:87:in `block (4 levels) in <main>'

  881) Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError with a code is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "Network connection error")

         expected Gitlab::PrometheusClient::Error with "Network connection error", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:32:in `ping'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:102:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:95:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:95:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:104
       # ./spec/lib/gitlab/prometheus_client_spec.rb:95:in `block (4 levels) in <main>'

  882) Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SocketError is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "Can't connect to #{prometheus_url}")

         expected Gitlab::PrometheusClient::Error with "Can't connect to https://prometheus.invalid.example.com/api/v1/query?query=1", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:108:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:71:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:71:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:110
       # ./spec/lib/gitlab/prometheus_client_spec.rb:71:in `block (4 levels) in <main>'

  883) Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SSLError is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "#{prometheus_url} contains invalid SSL data")

         expected Gitlab::PrometheusClient::Error with "https://prometheus.invalid.example.com/api/v1/query?query=1 contains invalid SSL data", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:108:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:79:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:79:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:110
       # ./spec/lib/gitlab/prometheus_client_spec.rb:79:in `block (4 levels) in <main>'

  884) Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "Network connection error")

         expected Gitlab::PrometheusClient::Error with "Network connection error", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:108:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:87:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:87:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:110
       # ./spec/lib/gitlab/prometheus_client_spec.rb:87:in `block (4 levels) in <main>'

  885) Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError with a code is rescued
       Failure/Error:
         expect { subject }
           .to raise_error(Gitlab::PrometheusClient::Error, "Network connection error")

         expected Gitlab::PrometheusClient::Error with "Network connection error", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:108:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:95:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:95:in `block (4 levels) in <main>'
       Shared Example Group: "exceptions are raised" called from ./spec/lib/gitlab/prometheus_client_spec.rb:110
       # ./spec/lib/gitlab/prometheus_client_spec.rb:95:in `block (4 levels) in <main>'

  886) Gitlab::PrometheusClient#query when request returns vector results returns data from the API call
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:45:in `query'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:126:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  887) Gitlab::PrometheusClient#query when request returns matrix results returns nil
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:45:in `query'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:135:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  888) Gitlab::PrometheusClient#query when request returns no data returns []
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:45:in `query'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:144:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  889) Gitlab::PrometheusClient#query behaves like failure response when request returns 400 with an error message raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, 'bar!')

         expected Gitlab::PrometheusClient::Error with "bar!", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:45:in `query'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:150:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:27:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:27:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:149
       # ./spec/lib/gitlab/prometheus_client_spec.rb:27:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  890) Gitlab::PrometheusClient#query behaves like failure response when request returns 400 without an error message raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, 'Bad data received')

         expected Gitlab::PrometheusClient::Error with "Bad data received", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:45:in `query'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:150:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:37:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:37:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:149
       # ./spec/lib/gitlab/prometheus_client_spec.rb:37:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  891) Gitlab::PrometheusClient#query behaves like failure response when request returns 500 raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, '500 - {"message":"FAIL!"}')

         expected Gitlab::PrometheusClient::Error with "500 - {\"message\":\"FAIL!\"}", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:45:in `query'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:150:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:47:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:47:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:149
       # ./spec/lib/gitlab/prometheus_client_spec.rb:47:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  892) Gitlab::PrometheusClient#query behaves like failure response when request returns non json data raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, 'Parsing response failed')

         expected Gitlab::PrometheusClient::Error with "Parsing response failed", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:46:in `block in query'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:45:in `query'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:150:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:57:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:57:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:149
       # ./spec/lib/gitlab/prometheus_client_spec.rb:57:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:119:in `block (3 levels) in <main>'

  893) Gitlab::PrometheusClient#series calls endpoint and returns list of series
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:71:in `series'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:165:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:158:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:158:in `block (3 levels) in <main>'

  894) Gitlab::PrometheusClient#label_values calls endpoint and returns label values
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:67:in `label_values'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:178:in `block (3 levels) in <main>'

  895) Gitlab::PrometheusClient#query_range when non utc time is passed passed dates are properly converted to utc
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:201:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  896) Gitlab::PrometheusClient#query_range when a start time is passed passed it in the requested URL
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:212:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  897) Gitlab::PrometheusClient#query_range when request returns vector results returns nil
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:221:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  898) Gitlab::PrometheusClient#query_range when request returns matrix results returns data from the API call
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:230:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  899) Gitlab::PrometheusClient#query_range when request returns no data returns []
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
       # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
       # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
       # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:244:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  900) Gitlab::PrometheusClient#query_range behaves like failure response when request returns 400 with an error message raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, 'bar!')

         expected Gitlab::PrometheusClient::Error with "bar!", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:250:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:27:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:27:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:249
       # ./spec/lib/gitlab/prometheus_client_spec.rb:27:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  901) Gitlab::PrometheusClient#query_range behaves like failure response when request returns 400 without an error message raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, 'Bad data received')

         expected Gitlab::PrometheusClient::Error with "Bad data received", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:250:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:37:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:37:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:249
       # ./spec/lib/gitlab/prometheus_client_spec.rb:37:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  902) Gitlab::PrometheusClient#query_range behaves like failure response when request returns 500 raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, '500 - {"message":"FAIL!"}')

         expected Gitlab::PrometheusClient::Error with "500 - {\"message\":\"FAIL!\"}", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:250:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:47:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:47:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:249
       # ./spec/lib/gitlab/prometheus_client_spec.rb:47:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  903) Gitlab::PrometheusClient#query_range behaves like failure response when request returns non json data raises a Gitlab::PrometheusClient::Error error
       Failure/Error:
         expect { execute_query }
           .to raise_error(Gitlab::PrometheusClient::Error, 'Parsing response failed')

         expected Gitlab::PrometheusClient::Error with "Parsing response failed", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:90:in `json_api_get'
           # ./lib/gitlab/prometheus_client.rb:56:in `block in query_range'
           # ./lib/gitlab/prometheus_client.rb:141:in `get_result'
           # ./lib/gitlab/prometheus_client.rb:55:in `query_range'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:250:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:57:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:57:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'
       Shared Example Group: "failure response" called from ./spec/lib/gitlab/prometheus_client_spec.rb:249
       # ./spec/lib/gitlab/prometheus_client_spec.rb:57:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:189:in `block (3 levels) in <main>'

  904) Gitlab::PrometheusClient proxy get API when response status code is 200 returns response object
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:295:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (4 levels) in <main>'

  905) Gitlab::PrometheusClient proxy get API when response status code is not 200 returns response object
       Failure/Error: super

       Addressable::URI::InvalidURIError:
         Invalid port number: "ac50"
       # ./lib/gitlab/http.rb:24:in `perform_request'
       # ./lib/gitlab/prometheus_client.rb:113:in `get'
       # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:314:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (4 levels) in <main>'

  906) Gitlab::PrometheusClient proxy get API when Gitlab::HTTP::ResponseError is raised without response code raises PrometheusClient::Error
       Failure/Error:
         expect { subject.proxy('query', { query: prometheus_query }) }.to(
           raise_error(Gitlab::PrometheusClient::Error, 'Network connection error')
         )

         expected Gitlab::PrometheusClient::Error with "Network connection error", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:332:in `block (7 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:332:in `block (6 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:332:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (4 levels) in <main>'

  907) Gitlab::PrometheusClient proxy get API when Gitlab::HTTP::ResponseError is raised with response code raises Gitlab::PrometheusClient::QueryError
       Failure/Error:
         expect { subject.proxy('query', { query: prometheus_query }) }.to(
           raise_error(Gitlab::PrometheusClient::QueryError, 'Bad data received')
         )

         expected Gitlab::PrometheusClient::QueryError with "Bad data received", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
           # ./lib/gitlab/http.rb:24:in `perform_request'
           # ./lib/gitlab/prometheus_client.rb:113:in `get'
           # ./lib/gitlab/prometheus_client.rb:37:in `proxy'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:346:in `block (7 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:346:in `block (6 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:346:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/prometheus_client_spec.rb:288:in `block (4 levels) in <main>'

  908) Gitlab::ReferenceExtractor accesses valid user objects
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  909) Gitlab::ReferenceExtractor ignores user mentions inside specific elements
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  910) Gitlab::ReferenceExtractor does not include anchors from table of contents in issue references
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  911) Gitlab::ReferenceExtractor accesses valid issue objects
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  912) Gitlab::ReferenceExtractor accesses valid merge requests
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  913) Gitlab::ReferenceExtractor accesses valid labels
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  914) Gitlab::ReferenceExtractor accesses valid snippets
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  915) Gitlab::ReferenceExtractor accesses valid commits
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  916) Gitlab::ReferenceExtractor accesses valid commit ranges
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  917) Gitlab::ReferenceExtractor directly addressed users when a user is directly addressed accesses the user object which is mentioned in the beginning of the line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  918) Gitlab::ReferenceExtractor directly addressed users when a user is directly addressed doesn't access the user object if it's not mentioned in the beginning of the line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  919) Gitlab::ReferenceExtractor directly addressed users when multiple users are addressed accesses the user objects which are mentioned in the beginning of the line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  920) Gitlab::ReferenceExtractor directly addressed users when multiple users are addressed doesn't access the user objects if they are not mentioned in the beginning of the line
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  921) Gitlab::ReferenceExtractor directly addressed users when multiple users are addressed in different paragraphs accesses user objects which are mentioned in the beginning of each paragraph
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  922) Gitlab::ReferenceExtractor with an external issue tracker when GitLab issues are enabled returns both Jira and internal issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:196:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  923) Gitlab::ReferenceExtractor with an external issue tracker when GitLab issues are enabled returns only Jira issues if the internal one does not exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:196:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  924) Gitlab::ReferenceExtractor with an external issue tracker when GitLab issues are disabled returns only Jira issues
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:196:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  925) Gitlab::ReferenceExtractor with a project with an underscore handles project issue references
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  926) Gitlab::ReferenceExtractor#all returns all referables
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  927) Gitlab::ReferenceExtractor.references_pattern 
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  928) Gitlab::ReferenceExtractor referables prefixes returns all supported prefixes
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  929) Gitlab::ReferenceExtractor referables prefixes does not allow one prefix for multiple referables if not allowed specificly
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/reference_extractor_spec.rb:9:in `block (2 levels) in <main>'

  930) Gitlab::RepoPath.parse returns the default type for non existent paths
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  931) Gitlab::RepoPath.parse a repository storage path parses a full repository path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  932) Gitlab::RepoPath.parse a repository storage path parses a full wiki path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  933) Gitlab::RepoPath.parse a relative path parses a relative repository path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  934) Gitlab::RepoPath.parse a relative path parses a relative wiki path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  935) Gitlab::RepoPath.parse a relative path parses a relative path starting with /
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  936) Gitlab::RepoPath.parse a relative path of a redirected project parses a relative repository path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  937) Gitlab::RepoPath.parse a relative path of a redirected project parses a relative wiki path
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  938) Gitlab::RepoPath.parse a relative path of a redirected project parses a relative path starting with /
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:7:in `block (3 levels) in <main>'

  939) Gitlab::RepoPath.find_project when finding a project by its canonical path when the cases match returns the project and false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:57:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repo_path_spec.rb:63:in `block (5 levels) in <main>'

  940) Gitlab::RepoPath.find_project when finding a project by its canonical path when the cases do not match returns the project and false
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:57:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repo_path_spec.rb:73:in `block (5 levels) in <main>'

  941) Gitlab::RepoPath.find_project when finding a project via a redirect returns the project and true
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repo_path_spec.rb:57:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repo_path_spec.rb:58:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repo_path_spec.rb:80:in `block (4 levels) in <main>'

  942) Gitlab::RepositoryCacheAdapter#cache_method_output with a non-existing repository returns the fallback value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:15:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:18:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:24:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  943) Gitlab::RepositoryCacheAdapter#cache_method_output with a non-existing repository avoids calling the original method
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:15:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:28:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  944) Gitlab::RepositoryCacheAdapter#cache_method_output with a method throwing a non-existing-repository error returns the fallback value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:36:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:42:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  945) Gitlab::RepositoryCacheAdapter#cache_method_output with a method throwing a non-existing-repository error does not cache the data
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:36:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:46:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  946) Gitlab::RepositoryCacheAdapter#cache_method_output with an existing repository caches the output
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:60:in `block (5 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:59:in `times'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:59:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  947) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with a non-existing repository returns the output of the original method
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:75:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:79:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:87:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  948) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with a method throwing a non-existing-repository error returns nil
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:93:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:99:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  949) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with a method throwing a non-existing-repository error does not cache the data
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:93:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:103:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  950) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns truthy caches the output in RequestStore
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:72:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:121:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:119:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  951) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns truthy caches the output in RepositoryCache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:127:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:125:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  952) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns false caches the output in RequestStore
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:72:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:139:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:137:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  953) Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns false does NOT cache the output in RepositoryCache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:145:in `block (6 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:143:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  954) Gitlab::RepositoryCacheAdapter#memoize_method_output with a non-existing repository returns the fallback value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:155:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:158:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:164:in `block (4 levels) in <main>'

  955) Gitlab::RepositoryCacheAdapter#memoize_method_output with a non-existing repository avoids calling the original method
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:155:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:168:in `block (4 levels) in <main>'

  956) Gitlab::RepositoryCacheAdapter#memoize_method_output with a non-existing repository does not set the instance variable
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:155:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:158:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:174:in `block (4 levels) in <main>'

  957) Gitlab::RepositoryCacheAdapter#memoize_method_output with a method throwing a non-existing-repository error returns the fallback value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:182:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:188:in `block (4 levels) in <main>'

  958) Gitlab::RepositoryCacheAdapter#memoize_method_output with a method throwing a non-existing-repository error does not set the instance variable
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:182:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:192:in `block (4 levels) in <main>'

  959) Gitlab::RepositoryCacheAdapter#memoize_method_output with an existing repository sets the instance variable
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:200:in `block (4 levels) in <main>'

  960) Gitlab::RepositoryCacheAdapter#expire_method_caches expires the caches of the given methods
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:211:in `block (3 levels) in <main>'

  961) Gitlab::RepositoryCacheAdapter#expire_method_caches does not expire caches for non-existent methods
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_adapter_spec.rb:220:in `block (3 levels) in <main>'

  962) Gitlab::RepositoryCache#cache_key includes the namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:16:in `block (3 levels) in <main>'

  963) Gitlab::RepositoryCache#cache_key with a given namespace includes the full namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:22:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:13:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:27:in `block (4 levels) in <main>'

  964) Gitlab::RepositoryCache#expire expires the given key from the cache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:34:in `block (3 levels) in <main>'

  965) Gitlab::RepositoryCache#fetch fetches the given key from the cache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:41:in `block (3 levels) in <main>'

  966) Gitlab::RepositoryCache#fetch accepts a block
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:48:in `block (3 levels) in <main>'

  967) Gitlab::RepositoryCache#fetch_without_caching_false requires a block
       Failure/Error:
         expect do
           cache.fetch_without_caching_false(key)
         end.to raise_error(LocalJumpError)

         expected LocalJumpError, got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
           # ./spec/lib/gitlab/repository_cache_spec.rb:59:in `block (4 levels) in <main>'
           # ./spec/lib/gitlab/repository_cache_spec.rb:58:in `block (3 levels) in <main>'
           # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:58:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  968) Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is truthy returns the result of the block
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:66:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  969) Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is truthy caches the value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:72:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  970) Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is falsey returns the result of the block
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:10:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:82:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  971) Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is falsey does not cache the value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:88:in `block (5 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  972) Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is truthy returns the cached value
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:97:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  973) Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is truthy does not execute the block
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:97:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  974) Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is truthy does not write to the cache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:97:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  975) Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is falsey returns the result of the block
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:121:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  976) Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is falsey writes the truthy value to the cache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:8:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_cache_spec.rb:121:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:243:in `block (2 levels) in <top (required)>'

  977) Gitlab::RepositorySetCache#cache_key includes the namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:15:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  978) Gitlab::RepositorySetCache#cache_key with a given namespace includes the full namespace
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:20:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:23:in `block (4 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  979) Gitlab::RepositorySetCache#expire expires the given key from the cache
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:30:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  980) Gitlab::RepositorySetCache#exist? checks whether the key exists
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:40:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  981) Gitlab::RepositorySetCache#fetch fetches the key from the cache when filled
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:54:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  982) Gitlab::RepositorySetCache#fetch writes the value of the provided block when empty
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:60:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  983) Gitlab::RepositorySetCache#include? checks inclusion in the Redis set
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:7:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:9:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/repository_set_cache_spec.rb:69:in `block (3 levels) in <main>'
       # ./spec/spec_helper.rb:251:in `block (2 levels) in <top (required)>'

  984) Gitlab::Sanitizers::Exif#batch_clean filters only jpg/tiff images
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:47:in `block (3 levels) in <main>'

  985) Gitlab::Sanitizers::Exif#batch_clean with image uploads processes all uploads if range ID is not set
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:10:in `block (4 levels) in <main>'

  986) Gitlab::Sanitizers::Exif#batch_clean with image uploads processes only uploads in the selected range
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:10:in `block (4 levels) in <main>'

  987) Gitlab::Sanitizers::Exif#batch_clean with image uploads processes only uploads for the selected uploader
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:10:in `block (4 levels) in <main>'

  988) Gitlab::Sanitizers::Exif#batch_clean with image uploads processes only uploads created since specified date
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:10:in `block (4 levels) in <main>'

  989) Gitlab::Sanitizers::Exif#batch_clean with image uploads pauses if sleep_time is set
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:10:in `block (4 levels) in <main>'

  990) Gitlab::Sanitizers::Exif#clean no dry run removes exif from the image
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:61:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:65:in `block (4 levels) in <main>'

  991) Gitlab::Sanitizers::Exif#clean no dry run ignores image without exif
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:61:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:90:in `block (4 levels) in <main>'

  992) Gitlab::Sanitizers::Exif#clean no dry run raises an error if the exiftool fails with an error
       Failure/Error: expect { sanitizer.clean(uploader, dry_run: false) }.to raise_exception(RuntimeError, "failed to get exif tags: error")

         expected RuntimeError with "failed to get exif tags: error", got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
           # ./lib/gitlab/gitaly_client.rb:167:in `execute'
           # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
           # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
           # ./lib/gitlab/gitaly_client.rb:145:in `call'
           # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
           # ./lib/gitlab/git/repository.rb:98:in `exists?'
           # ./lib/gitlab/shell.rb:289:in `repository_exists?'
           # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
           # ./app/models/project.rb:2386:in `check_repository_absence!'
           # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/sanitizers/exif_spec.rb:61:in `block (3 levels) in <main>'
           # ./spec/lib/gitlab/sanitizers/exif_spec.rb:98:in `block (5 levels) in <main>'
           # ./spec/lib/gitlab/sanitizers/exif_spec.rb:98:in `block (4 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:98:in `block (4 levels) in <main>'

  993) Gitlab::Sanitizers::Exif#clean dry run doesn't change the image
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/factories/uploads.rb:5:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:61:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/sanitizers/exif_spec.rb:106:in `block (4 levels) in <main>'

  994) Gitlab::Search::FoundBlob parsing content results returns a valid FoundBlob
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:9:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:10:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:15:in `block (3 levels) in <main>'

  995) Gitlab::Search::FoundBlob parsing content results does not parse content if not needed
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:9:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:10:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:25:in `block (3 levels) in <main>'

  996) Gitlab::Search::FoundBlob parsing content results parses content only once when needed
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:9:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:10:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:31:in `block (3 levels) in <main>'

  997) Gitlab::Search::FoundBlob parsing content results when the matching filename contains a colon returns a valid FoundBlob
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:40:in `block (4 levels) in <main>'

  998) Gitlab::Search::FoundBlob parsing content results when the matching content contains a number surrounded by colons returns a valid FoundBlob
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:52:in `block (4 levels) in <main>'

  999) Gitlab::Search::FoundBlob parsing content results when the matching content contains multiple null bytes returns a valid FoundBlob
       Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

       GRPC::Unavailable:
         14:failed to connect to all addresses
       # ./lib/gitlab/gitaly_client.rb:167:in `execute'
       # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
       # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
       # ./lib/gitlab/gitaly_client.rb:145:in `call'
       # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
       # ./lib/gitlab/git/repository.rb:98:in `exists?'
       # ./lib/gitlab/shell.rb:289:in `repository_exists?'
       # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
       # ./app/models/project.rb:2386:in `check_repository_absence!'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
       # ./spec/lib/gitlab/search/found_blob_spec.rb:64:in `block (4 levels) in <main>'

  1000) Gitlab::Search::FoundBlob parsing content results when the search result ends with an empty line returns a valid FoundBlob that ends with an empty line
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:73:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:10:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:76:in `block (4 levels) in <main>'

  1001) Gitlab::Search::FoundBlob parsing content results when the search returns non-ASCII data with UTF-8 returns results as UTF-8
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:86:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:10:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:89:in `block (5 levels) in <main>'

  1002) Gitlab::Search::FoundBlob parsing content results when the search returns non-ASCII data with UTF-8 in the filename returns results as UTF-8
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:98:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:10:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:101:in `block (5 levels) in <main>'

  1003) Gitlab::Search::FoundBlob parsing content results when the search returns non-ASCII data with ISO-8859-1 returns results as UTF-8
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:113:in `block (5 levels) in <main>'

  1004) Gitlab::Search::FoundBlob parsing content results when filename has extension 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:125:in `block (4 levels) in <main>'

  1005) Gitlab::Search::FoundBlob parsing content results when filename has extension 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:126:in `block (4 levels) in <main>'

  1006) Gitlab::Search::FoundBlob parsing content results when file is under directory 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:132:in `block (4 levels) in <main>'

  1007) Gitlab::Search::FoundBlob parsing content results when file is under directory 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:133:in `block (4 levels) in <main>'

  1008) Gitlab::Search::FoundBlob parsing title results when file is under directory 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:141:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:149:in `block (4 levels) in <main>'

  1009) Gitlab::Search::FoundBlob parsing title results when file is under directory 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:141:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:150:in `block (4 levels) in <main>'

  1010) Gitlab::Search::FoundBlob parsing title results when file is under directory when filename has multiple extensions 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:141:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/search/found_blob_spec.rb:155:in `block (5 levels) in <main>'

  1011) Gitlab::SearchResults does not list issues on private projects
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1012) Gitlab::SearchResults does not list merge requests on projects with limited access
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1013) Gitlab::SearchResults as a user with access includes merge requests from source and target projects
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1014) Gitlab::SearchResults as a user with access #objects returns without_counts collection by default
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1015) Gitlab::SearchResults as a user with access #objects returns with counts collection when requested
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1016) Gitlab::SearchResults as a user with access #formatted_count scope: "projects", count_method: :limited_projects_count, expected: "99+" returns the expected formatted count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1017) Gitlab::SearchResults as a user with access #formatted_count scope: "issues", count_method: :limited_issues_count, expected: "99+" returns the expected formatted count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1018) Gitlab::SearchResults as a user with access #formatted_count scope: "merge_requests", count_method: :limited_merge_requests_count, expected: "99+" returns the expected formatted count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1019) Gitlab::SearchResults as a user with access #formatted_count scope: "milestones", count_method: :limited_milestones_count, expected: "99+" returns the expected formatted count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1020) Gitlab::SearchResults as a user with access #formatted_count scope: "users", count_method: :limited_users_count, expected: "99+" returns the expected formatted count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1021) Gitlab::SearchResults as a user with access #formatted_count scope: "unknown", count_method: nil, expected: nil returns the expected formatted count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1022) Gitlab::SearchResults as a user with access #formatted_limited_count count: 23, expected: "23" returns the expected formatted limited count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1023) Gitlab::SearchResults as a user with access #formatted_limited_count count: 99, expected: "99" returns the expected formatted limited count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1024) Gitlab::SearchResults as a user with access #formatted_limited_count count: 100, expected: "99+" returns the expected formatted limited count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1025) Gitlab::SearchResults as a user with access #formatted_limited_count count: 1234, expected: "99+" returns the expected formatted limited count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1026) Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_projects_count returns the limited amount of projects
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1027) Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_merge_requests_count returns the limited amount of merge requests
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1028) Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_milestones_count returns the limited amount of milestones
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1029) Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_issues_count runs single SQL query to get the limited amount of issues
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1030) Gitlab::SearchResults as a user with access when count_limit is higher than total amount #limited_issues_count runs multiple queries to get the limited amount of issues
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1031) Gitlab::SearchResults as a user with access #merge_requests includes project filter by default
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1032) Gitlab::SearchResults as a user with access #merge_requests skips project filter if default project context is used
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1033) Gitlab::SearchResults as a user with access #issues includes project filter by default
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1034) Gitlab::SearchResults as a user with access #issues skips project filter if default project context is used
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1035) Gitlab::SearchResults as a user with access #users does not call the UsersFinder when the current_user is not allowed to read users list
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1036) Gitlab::SearchResults as a user with access #users calls the UsersFinder
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1037) Gitlab::SearchResults confidential issues does not list confidential issues for non project members
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1038) Gitlab::SearchResults confidential issues does not list confidential issues for project members with guest role
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1039) Gitlab::SearchResults confidential issues lists confidential issues for author
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1040) Gitlab::SearchResults confidential issues lists confidential issues for assignee
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1041) Gitlab::SearchResults confidential issues lists confidential issues for project members
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1042) Gitlab::SearchResults confidential issues lists all issues for admin
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1043) Gitlab::SearchResults milestones returns correct set of milestones
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/search_results_spec.rb:10:in `block (2 levels) in <main>'

  1044) Gitlab::Shell 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1045) Gitlab::Shell 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1046) Gitlab::Shell 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1047) Gitlab::Shell 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1048) Gitlab::Shell 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1049) Gitlab::Shell 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1050) Gitlab::Shell memoized secret_token creates and links the secret token file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1051) Gitlab::Shell#add_key when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#add_key with id and key
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1052) Gitlab::Shell#add_key when authorized_keys_enabled is false does nothing
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1053) Gitlab::Shell#add_key when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#add_key with id and key
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1054) Gitlab::Shell#batch_add_keys when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#batch_add_keys with keys to be added
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1055) Gitlab::Shell#batch_add_keys when authorized_keys_enabled is false does nothing
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1056) Gitlab::Shell#batch_add_keys when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#batch_add_keys with keys to be added
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1057) Gitlab::Shell#remove_key when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#rm_key with the key to be removed
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1058) Gitlab::Shell#remove_key when authorized_keys_enabled is false does nothing
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1059) Gitlab::Shell#remove_key when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#rm_key with the key to be removed
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1060) Gitlab::Shell#remove_all_keys when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#clear
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1061) Gitlab::Shell#remove_all_keys when authorized_keys_enabled is false does nothing
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1062) Gitlab::Shell#remove_all_keys when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#clear
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1063) Gitlab::Shell#remove_keys_not_found_in_db when keys are in the file that are not in the DB removes the keys
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1064) Gitlab::Shell#remove_keys_not_found_in_db when keys there are duplicate keys in the file that are not in the DB removes the keys
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1065) Gitlab::Shell#remove_keys_not_found_in_db when keys there are duplicate keys in the file that ARE in the DB does not remove the key
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1066) Gitlab::Shell#remove_keys_not_found_in_db when the first batch can be skipped, but the next batch has keys that are not in the DB removes the keys not in the DB
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1067) Gitlab::Shell projects commands #create_repository returns false when the command fails
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1068) Gitlab::Shell projects commands #remove_repository returns true when the command succeeds
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1069) Gitlab::Shell projects commands #remove_repository keeps the namespace directory
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1070) Gitlab::Shell projects commands #mv_repository returns true when the command succeeds
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1071) Gitlab::Shell projects commands #mv_repository returns false when the command fails
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1072) Gitlab::Shell projects commands #fork_repository returns true when the command succeeds
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1073) Gitlab::Shell projects commands #fork_repository return false when the command fails
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1074) Gitlab::Shell projects commands #import_repository with gitaly returns true when the command succeeds
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1075) Gitlab::Shell projects commands #import_repository with gitaly raises an exception when the command fails
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1076) Gitlab::Shell namespace actions #add_namespace creates a namespace
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1077) Gitlab::Shell namespace actions #repository_exists? when the repository does not exist returns false
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1078) Gitlab::Shell namespace actions #repository_exists? when the repository exists returns true
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1079) Gitlab::Shell namespace actions #remove removes the namespace
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1080) Gitlab::Shell namespace actions #mv_namespace renames the namespace
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/shell_spec.rb:7:in `block (2 levels) in <main>'

  1081) Gitlab::SlashCommands::Command#execute when no command is available displays 404 messages
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:17:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:20:in `block (4 levels) in <main>'

  1082) Gitlab::SlashCommands::Command#execute when an unknown command is triggered displays the help message
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:29:in `block (4 levels) in <main>'

  1083) Gitlab::SlashCommands::Command#execute the user can not create an issue rejects the actions
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:12:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:39:in `block (4 levels) in <main>'

  1084) Gitlab::SlashCommands::Command#execute when trying to do deployment and user can not create deployment returns action
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:47:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:46:in `block (4 levels) in <main>'

  1085) Gitlab::SlashCommands::Command#execute when trying to do deployment and user has deployment permission returns action
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:47:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:46:in `block (4 levels) in <main>'

  1086) Gitlab::SlashCommands::Command#execute when trying to do deployment and user has deployment permission when duplicate action exists returns error
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:47:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:46:in `block (4 levels) in <main>'

  1087) Gitlab::SlashCommands::Command#match_command IssueShow is triggered 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:94:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:99:in `block (4 levels) in <main>'

  1088) Gitlab::SlashCommands::Command#match_command IssueCreate is triggered 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:94:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:105:in `block (4 levels) in <main>'

  1089) Gitlab::SlashCommands::Command#match_command IssueSearch is triggered 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:94:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:111:in `block (4 levels) in <main>'

  1090) Gitlab::SlashCommands::Command#match_command IssueMove is triggered 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:94:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:117:in `block (4 levels) in <main>'

  1091) Gitlab::SlashCommands::Command#match_command IssueComment is triggered 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:94:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/command_spec.rb:123:in `block (4 levels) in <main>'

  1092) Gitlab::SlashCommands::Deploy#execute if no environment is defined does not execute an action
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:15:in `block (3 levels) in <main>'

  1093) Gitlab::SlashCommands::Deploy#execute with environment without actions does not execute an action
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:15:in `block (3 levels) in <main>'

  1094) Gitlab::SlashCommands::Deploy#execute with environment when single action has been matched returns success result
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:15:in `block (3 levels) in <main>'

  1095) Gitlab::SlashCommands::Deploy#execute with environment when more than one action has been matched when there is no specific actions with a environment name returns error about too many actions defined
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:15:in `block (3 levels) in <main>'

  1096) Gitlab::SlashCommands::Deploy#execute with environment when more than one action has been matched when one of the actions is environement specific action deploys to production
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:15:in `block (3 levels) in <main>'

  1097) Gitlab::SlashCommands::Deploy#execute with environment when more than one action has been matched when one of the actions is a teardown action deploys to production
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/deploy_spec.rb:15:in `block (3 levels) in <main>'

  1098) Gitlab::SlashCommands::IssueClose#execute when the user does not have permission does not allow the user to close the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:21:in `block (4 levels) in <main>'

  1099) Gitlab::SlashCommands::IssueClose#execute the issue exists closes and returns the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:31:in `block (4 levels) in <main>'

  1100) Gitlab::SlashCommands::IssueClose#execute the issue exists when its reference is given closes and returns the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:40:in `block (5 levels) in <main>'

  1101) Gitlab::SlashCommands::IssueClose#execute the issue does not exist returns not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:51:in `block (4 levels) in <main>'

  1102) Gitlab::SlashCommands::IssueClose#execute when the issue is already closed shows the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:60:in `block (4 levels) in <main>'

  1103) Gitlab::SlashCommands::IssueComment#execute when the issue exists when project is private when the user is not a member of the project does not allow the user to comment
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:17:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:13:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:23:in `block (6 levels) in <main>'

  1104) Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user is not a member of the project when the discussion is locked in the issue does not allow the user to comment
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:35:in `block (6 levels) in <main>'

  1105) Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body exists creates a new comment
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:49:in `block (7 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:49:in `block (6 levels) in <main>'

  1106) Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body exists a new comment has a correct body
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:13:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:53:in `block (6 levels) in <main>'

  1107) Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body does not exist does not create a new comment
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:63:in `block (7 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:63:in `block (6 levels) in <main>'

  1108) Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body does not exist displays the errors
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:13:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:67:in `block (6 levels) in <main>'

  1109) Gitlab::SlashCommands::IssueComment#execute when the issue does not exist returns not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:13:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:78:in `block (4 levels) in <main>'

  1110) Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move fails returns the error message
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1111) Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move succeeds moves the issue to the new destination
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1112) Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move succeeds returns the new issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1113) Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move succeeds mentions the old issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1114) Gitlab::SlashCommands::IssueMove#execute when the issue does not exist returns not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1115) Gitlab::SlashCommands::IssueMove#execute when the target project does not exist returns not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1116) Gitlab::SlashCommands::IssueMove#execute when the user cannot see the target project returns not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1117) Gitlab::SlashCommands::IssueMove#execute when the user does not have the required permissions on the target project returns the error message
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:26:in `block (3 levels) in <main>'

  1118) Gitlab::SlashCommands::IssueNew#execute without description creates the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:13:in `block (3 levels) in <main>'

  1119) Gitlab::SlashCommands::IssueNew#execute with description creates the issue with description
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:13:in `block (3 levels) in <main>'

  1120) Gitlab::SlashCommands::IssueNew#execute with more newlines between the title and the description creates the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:13:in `block (3 levels) in <main>'

  1121) Gitlab::SlashCommands::IssueNew#execute issue cannot be created displays the errors
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:13:in `block (3 levels) in <main>'

  1122) Gitlab::SlashCommands::IssueSearch#execute when the user has no access only returns the open issues
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:7:in `block (3 levels) in <main>'

  1123) Gitlab::SlashCommands::IssueSearch#execute the user has access returns all results
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:7:in `block (3 levels) in <main>'

  1124) Gitlab::SlashCommands::IssueSearch#execute without hits on the query returns an empty collection
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:7:in `block (3 levels) in <main>'

  1125) Gitlab::SlashCommands::IssueShow#execute the issue exists returns the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:14:in `block (3 levels) in <main>'

  1126) Gitlab::SlashCommands::IssueShow#execute the issue exists when its reference is given shows the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:14:in `block (3 levels) in <main>'

  1127) Gitlab::SlashCommands::IssueShow#execute the issue does not exist returns not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:14:in `block (3 levels) in <main>'

  1128) Gitlab::SlashCommands::Presenters::Deploy#present 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:11:in `block (3 levels) in <main>'

  1129) Gitlab::SlashCommands::Presenters::Deploy#present 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:12:in `block (3 levels) in <main>'

  1130) Gitlab::SlashCommands::Presenters::Deploy#present 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:13:in `block (3 levels) in <main>'

  1131) Gitlab::SlashCommands::Presenters::Deploy#present 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:14:in `block (3 levels) in <main>'

  1132) Gitlab::SlashCommands::Presenters::Deploy#present messages the channel of the deploy
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:17:in `block (3 levels) in <main>'

  1133) Gitlab::SlashCommands::Presenters::IssueClose 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:12:in `block (2 levels) in <main>'

  1134) Gitlab::SlashCommands::Presenters::IssueClose shows the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:15:in `block (2 levels) in <main>'

  1135) Gitlab::SlashCommands::Presenters::IssueClose confidential issue shows an ephemeral response
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:21:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:24:in `block (3 levels) in <main>'

  1136) Gitlab::SlashCommands::Presenters::IssueComment#present 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:6:in `block (2 levels) in <main>'

  1137) Gitlab::SlashCommands::Presenters::IssueComment#present sets ephemeral response type
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:6:in `block (2 levels) in <main>'

  1138) Gitlab::SlashCommands::Presenters::IssueComment#present sets the title
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:6:in `block (2 levels) in <main>'

  1139) Gitlab::SlashCommands::Presenters::IssueComment#present sets the fallback text
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:6:in `block (2 levels) in <main>'

  1140) Gitlab::SlashCommands::Presenters::IssueComment#present sets the fields
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:6:in `block (2 levels) in <main>'

  1141) Gitlab::SlashCommands::Presenters::IssueComment#present sets the color
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:6:in `block (2 levels) in <main>'

  1142) Gitlab::SlashCommands::Presenters::IssueMove 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_move_spec.rb:7:in `block (2 levels) in <main>'

  1143) Gitlab::SlashCommands::Presenters::IssueMove shows the new issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_move_spec.rb:7:in `block (2 levels) in <main>'

  1144) Gitlab::SlashCommands::Presenters::IssueMove mentions the old issue and the new issue in the pretext
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_move_spec.rb:7:in `block (2 levels) in <main>'

  1145) Gitlab::SlashCommands::Presenters::IssueNew 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:12:in `block (2 levels) in <main>'

  1146) Gitlab::SlashCommands::Presenters::IssueNew shows the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:15:in `block (2 levels) in <main>'

  1147) Gitlab::SlashCommands::Presenters::IssueSearch formats the message correct
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_search_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_search_spec.rb:10:in `block (2 levels) in <main>'

  1148) Gitlab::SlashCommands::Presenters::IssueSearch shows a list of results
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_search_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_search_spec.rb:10:in `block (2 levels) in <main>'

  1149) Gitlab::SlashCommands::Presenters::IssueShow 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:12:in `block (2 levels) in <main>'

  1150) Gitlab::SlashCommands::Presenters::IssueShow shows the issue
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:15:in `block (2 levels) in <main>'

  1151) Gitlab::SlashCommands::Presenters::IssueShow with upvotes shows the upvote count
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:22:in `block (3 levels) in <main>'

  1152) Gitlab::SlashCommands::Presenters::IssueShow with labels shows the labels
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:36:in `block (3 levels) in <main>'

  1153) Gitlab::SlashCommands::Presenters::IssueShow confidential issue shows an ephemeral response
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:47:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:50:in `block (3 levels) in <main>'

  1154) Gitlab::SlashCommands::Run.allowed? returns true when the user can create a pipeline
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:36:in `block (3 levels) in <main>'

  1155) Gitlab::SlashCommands::Run.allowed? returns false when the user can not create a pipeline
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:42:in `block (3 levels) in <main>'

  1156) Gitlab::SlashCommands::Run#execute when a pipeline could not be scheduled returns an error
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:51:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:54:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:67:in `block (4 levels) in <main>'

  1157) Gitlab::SlashCommands::Run#execute when a pipeline could be created but the chat service was not supported returns an error
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:51:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:54:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:93:in `block (4 levels) in <main>'

  1158) Gitlab::SlashCommands::Run#execute using a valid pipeline schedules the pipeline
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:51:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:54:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/slash_commands/run_spec.rb:120:in `block (4 levels) in <main>'

  1159) Gitlab::Template::Finders::RepoTemplateFinder#read returns the content of the given path
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:6:in `block (2 levels) in <main>'

  1160) Gitlab::Template::Finders::RepoTemplateFinder#read raises an error if the path does not exist
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:6:in `block (2 levels) in <main>'

  1161) Gitlab::Template::Finders::RepoTemplateFinder#find returns the full path of the found template
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:6:in `block (2 levels) in <main>'

  1162) Gitlab::Template::Finders::RepoTemplateFinder#find does not permit path traversal requests
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:6:in `block (2 levels) in <main>'

  1163) Gitlab::Template::Finders::RepoTemplateFinder#list_files_for returns the full path of the found files
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:6:in `block (2 levels) in <main>'

  1164) Gitlab::Template::IssueTemplate.all strips the md suffix
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:10:in `block (3 levels) in <main>'

  1165) Gitlab::Template::IssueTemplate.all combines the globals and rest
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:14:in `block (3 levels) in <main>'

  1166) Gitlab::Template::IssueTemplate.find returns nil if the file does not exist
        Failure/Error: expect { described_class.find('mepmep-yadida', project) }.to raise_error(Gitlab::Template::Finders::RepoTemplateFinder::FileNotFoundError)

          expected Gitlab::Template::Finders::RepoTemplateFinder::FileNotFoundError, got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/template/issue_template_spec.rb:23:in `block (4 levels) in <main>'
            # ./spec/lib/gitlab/template/issue_template_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:23:in `block (3 levels) in <main>'

  1167) Gitlab::Template::IssueTemplate.find returns the issue object of a valid file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:27:in `block (3 levels) in <main>'

  1168) Gitlab::Template::IssueTemplate.by_category return array of templates
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:36:in `block (3 levels) in <main>'

  1169) Gitlab::Template::IssueTemplate.by_category when repo is bare or empty returns empty array
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:42:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:45:in `block (4 levels) in <main>'

  1170) Gitlab::Template::IssueTemplate#content loads the full file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:54:in `block (3 levels) in <main>'

  1171) Gitlab::Template::IssueTemplate#content raises error when file is not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:61:in `block (3 levels) in <main>'

  1172) Gitlab::Template::IssueTemplate#content when repo is empty raises file not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:66:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/template/issue_template_spec.rb:69:in `block (4 levels) in <main>'

  1173) Gitlab::Template::MergeRequestTemplate.all strips the md suffix
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:10:in `block (3 levels) in <main>'

  1174) Gitlab::Template::MergeRequestTemplate.all combines the globals and rest
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:14:in `block (3 levels) in <main>'

  1175) Gitlab::Template::MergeRequestTemplate.find returns nil if the file does not exist
        Failure/Error: expect { described_class.find('mepmep-yadida', project) }.to raise_error(Gitlab::Template::Finders::RepoTemplateFinder::FileNotFoundError)

          expected Gitlab::Template::Finders::RepoTemplateFinder::FileNotFoundError, got #<GRPC::Unavailable: 14:failed to connect to all addresses> with backtrace:
            # ./lib/gitlab/gitaly_client.rb:167:in `execute'
            # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
            # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
            # ./lib/gitlab/gitaly_client.rb:145:in `call'
            # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
            # ./lib/gitlab/git/repository.rb:98:in `exists?'
            # ./lib/gitlab/shell.rb:289:in `repository_exists?'
            # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
            # ./app/models/project.rb:2386:in `check_repository_absence!'
            # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
            # ./spec/lib/gitlab/template/merge_request_template_spec.rb:23:in `block (4 levels) in <main>'
            # ./spec/lib/gitlab/template/merge_request_template_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:23:in `block (3 levels) in <main>'

  1176) Gitlab::Template::MergeRequestTemplate.find returns the merge request object of a valid file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:27:in `block (3 levels) in <main>'

  1177) Gitlab::Template::MergeRequestTemplate.by_category return array of templates
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:36:in `block (3 levels) in <main>'

  1178) Gitlab::Template::MergeRequestTemplate.by_category when repo is bare or empty returns empty array
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:42:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:45:in `block (4 levels) in <main>'

  1179) Gitlab::Template::MergeRequestTemplate#content loads the full file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:54:in `block (3 levels) in <main>'

  1180) Gitlab::Template::MergeRequestTemplate#content raises error when file is not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:61:in `block (3 levels) in <main>'

  1181) Gitlab::Template::MergeRequestTemplate#content when repo is empty raises file not found
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:66:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/template/merge_request_template_spec.rb:69:in `block (4 levels) in <main>'

  1182) Gitlab::TreeSummary#initialize defaults offset to 0
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:20:in `block (3 levels) in <main>'

  1183) Gitlab::TreeSummary#initialize defaults limit to 25
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:24:in `block (3 levels) in <main>'

  1184) Gitlab::TreeSummary#summarize returns an array of entries, and an array of commits
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:29:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:10:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:31:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:34:in `block (3 levels) in <main>'

  1185) Gitlab::TreeSummary#summarize (entries) summarizes the entries within the window
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:57:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:58:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:60:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:63:in `block (3 levels) in <main>'

  1186) Gitlab::TreeSummary#summarize (entries) references the commit and commit path in entries
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:57:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:58:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:60:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:71:in `block (3 levels) in <main>'

  1187) Gitlab::TreeSummary#summarize (entries) in a good subdirectory summarizes the entries in the subdirectory
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:57:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:58:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:60:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:82:in `block (4 levels) in <main>'

  1188) Gitlab::TreeSummary#summarize (entries) in a non-existent subdirectory 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:57:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:58:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:60:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:89:in `block (4 levels) in <main>'

  1189) Gitlab::TreeSummary#summarize (entries) custom offset and limit returns entries from the offset
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:57:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:58:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:60:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:96:in `block (4 levels) in <main>'

  1190) Gitlab::TreeSummary#summarize (commits) returns an Array of ::Commit objects
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:107:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:108:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:113:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:117:in `block (3 levels) in <main>'

  1191) Gitlab::TreeSummary#summarize (commits) deduplicates commits when multiple entries reference the same commit
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:107:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:108:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:113:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:122:in `block (3 levels) in <main>'

  1192) Gitlab::TreeSummary#summarize (commits) in a subdirectory returns commits for entries in the subdirectory
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:107:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:108:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:16:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:113:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:129:in `block (4 levels) in <main>'

  1193) Gitlab::TreeSummary#more? num_entries: 0, offset: 0, limit: 0, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:158:in `block (4 levels) in <main>'

  1194) Gitlab::TreeSummary#more? num_entries: 0, offset: 0, limit: 1, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:158:in `block (4 levels) in <main>'

  1195) Gitlab::TreeSummary#more? num_entries: 1, offset: 0, limit: 0, expected_result: true 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1196) Gitlab::TreeSummary#more? num_entries: 1, offset: 0, limit: 1, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1197) Gitlab::TreeSummary#more? num_entries: 1, offset: 1, limit: 0, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1198) Gitlab::TreeSummary#more? num_entries: 1, offset: 1, limit: 1, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1199) Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 0, expected_result: true 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1200) Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 1, expected_result: true 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1201) Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 2, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1202) Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 3, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1203) Gitlab::TreeSummary#more? num_entries: 2, offset: 1, limit: 0, expected_result: true 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1204) Gitlab::TreeSummary#more? num_entries: 2, offset: 1, limit: 1, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1205) Gitlab::TreeSummary#more? num_entries: 2, offset: 2, limit: 0, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1206) Gitlab::TreeSummary#more? num_entries: 2, offset: 2, limit: 1, expected_result: false 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:159:in `block (4 levels) in <main>'

  1207) Gitlab::TreeSummary#next_offset num_entries: 0, offset: 0, limit: 0, expected_result: 0 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:185:in `block (4 levels) in <main>'

  1208) Gitlab::TreeSummary#next_offset num_entries: 0, offset: 0, limit: 1, expected_result: 1 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:185:in `block (4 levels) in <main>'

  1209) Gitlab::TreeSummary#next_offset num_entries: 0, offset: 1, limit: 0, expected_result: 1 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:185:in `block (4 levels) in <main>'

  1210) Gitlab::TreeSummary#next_offset num_entries: 0, offset: 1, limit: 1, expected_result: 1 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:185:in `block (4 levels) in <main>'

  1211) Gitlab::TreeSummary#next_offset num_entries: 1, offset: 0, limit: 0, expected_result: 0 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (4 levels) in <main>'

  1212) Gitlab::TreeSummary#next_offset num_entries: 1, offset: 0, limit: 1, expected_result: 1 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (4 levels) in <main>'

  1213) Gitlab::TreeSummary#next_offset num_entries: 1, offset: 1, limit: 0, expected_result: 1 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (4 levels) in <main>'

  1214) Gitlab::TreeSummary#next_offset num_entries: 1, offset: 1, limit: 1, expected_result: 2 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/tree_summary_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:196:in `create_file'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (5 levels) in <main>'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `upto'
        # ./spec/lib/gitlab/tree_summary_spec.rb:186:in `block (4 levels) in <main>'

  1215) Gitlab::UploadsTransfer leaves avatar uploads where they are
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/uploads_transfer_spec.rb:7:in `block (2 levels) in <main>'

  1216) Gitlab::UrlBlocker#validate! when the URL hostname is a domain when domain cannot be resolved raises an error
        Failure/Error: expect { subject }.to raise_error(described_class::BlockedUrlError)
          expected Gitlab::UrlBlocker::BlockedUrlError but nothing was raised
        # ./spec/lib/gitlab/url_blocker_spec.rb:62:in `block (5 levels) in <main>'

  1217) Gitlab::UrlBlocker#validate! when the URL hostname is an IP address when the address is invalid raises an error
        Failure/Error: expect { subject }.to raise_error(described_class::BlockedUrlError)
          expected Gitlab::UrlBlocker::BlockedUrlError but nothing was raised
        # ./spec/lib/gitlab/url_blocker_spec.rb:89:in `block (5 levels) in <main>'

  1218) Gitlab::UrlBlocker#blocked_url? blocks urls with invalid ip address
        Failure/Error: expect(described_class).to be_blocked_url('http://8.8.8.8.8')
          expected `Gitlab::UrlBlocker.blocked_url?("http://8.8.8.8.8")` to return true, got false
        # ./spec/lib/gitlab/url_blocker_spec.rb:622:in `block (3 levels) in <main>'

  1219) Gitlab::UrlBlocker#blocked_url? blocks urls whose hostname cannot be resolved
        Failure/Error: expect(described_class).to be_blocked_url('http://foobar.x')
          expected `Gitlab::UrlBlocker.blocked_url?("http://foobar.x")` to return true, got false
        # ./spec/lib/gitlab/url_blocker_spec.rb:628:in `block (3 levels) in <main>'

  1220) Gitlab::UrlBuilder.build when passing a Milestone belonging to a project returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/url_builder_spec.rb:29:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/url_builder_spec.rb:33:in `block (5 levels) in <main>'

  1221) Gitlab::UrlBuilder.build when passing a ProjectSnippet returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/factories/snippets.rb:27:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/url_builder_spec.rb:64:in `block (4 levels) in <main>'

  1222) Gitlab::UrlBuilder.build when passing a Note on a Commit Diff returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./app/models/repository.rb:532:in `exists?'
        # ./lib/gitlab/repository_cache_adapter.rb:84:in `block (2 levels) in cache_method_asymmetrically'
        # ./lib/gitlab/repository_cache.rb:43:in `fetch_without_caching_false'
        # ./lib/gitlab/repository_cache_adapter.rb:174:in `block (2 levels) in cache_method_output_asymmetrically'
        # ./lib/gitlab/null_request_store.rb:34:in `fetch'
        # ./lib/gitlab/safe_request_store.rb:12:in `fetch'
        # ./lib/gitlab/repository_cache.rb:24:in `fetch'
        # ./lib/gitlab/repository_cache_adapter.rb:173:in `block in cache_method_output_asymmetrically'
        # ./lib/gitlab/utils/strong_memoize.rb:30:in `strong_memoize'
        # ./lib/gitlab/repository_cache_adapter.rb:187:in `block in memoize_method_output'
        # ./lib/gitlab/repository_cache_adapter.rb:196:in `no_repository_fallback'
        # ./lib/gitlab/repository_cache_adapter.rb:186:in `memoize_method_output'
        # ./lib/gitlab/repository_cache_adapter.rb:172:in `cache_method_output_asymmetrically'
        # ./lib/gitlab/repository_cache_adapter.rb:83:in `block in cache_method_asymmetrically'
        # ./app/models/repository.rb:111:in `commit'
        # ./app/models/project.rb:781:in `commit'
        # ./spec/factories/notes.rb:103:in `block (5 levels) in <main>'
        # ./spec/factories/notes.rb:112:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/url_builder_spec.rb:95:in `block (5 levels) in <main>'

  1223) Gitlab::UrlBuilder.build when passing a Note on an Issue returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/url_builder_spec.rb:105:in `block (5 levels) in <main>'

  1224) Gitlab::UrlBuilder.build when passing a Note on a MergeRequest returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/url_builder_spec.rb:116:in `block (5 levels) in <main>'

  1225) Gitlab::UrlBuilder.build when passing a Note on a MergeRequest Diff returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/url_builder_spec.rb:127:in `block (5 levels) in <main>'

  1226) Gitlab::UrlBuilder.build when passing a Note on a ProjectSnippet returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/factories/snippets.rb:27:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/url_builder_spec.rb:138:in `block (5 levels) in <main>'

  1227) Gitlab::UrlBuilder.build when passing a WikiPage returns a proper URL
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/factories/project_wikis.rb:9:in `block (3 levels) in <main>'
        # ./spec/factories/wiki_pages.rb:19:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/url_builder_spec.rb:170:in `block (4 levels) in <main>'

  1228) Gitlab::UsageData#data gathers usage data
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1229) Gitlab::UsageData#data gathers usage counts
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1230) Gitlab::UsageData#data gathers projects data correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1231) Gitlab::UsageData#data works when queries time out
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1232) Gitlab::UsageData#usage_data_counters 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1233) Gitlab::UsageData#usage_data_counters does not have any conflicts
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1234) Gitlab::UsageData#usage_data_counters the results of calling #totals on all objects in the array 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1235) Gitlab::UsageData#usage_data_counters the results of calling #totals on all objects in the array 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1236) Gitlab::UsageData#features_usage_data_ce gathers feature usage data
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1237) Gitlab::UsageData#components_usage_data gathers components usage data
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1238) Gitlab::UsageData#ingress_modsecurity_usage gathers variable data
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1239) Gitlab::UsageData#license_usage_data gathers license data
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1240) Gitlab::UsageData#count returns the count when counting succeeds
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1241) Gitlab::UsageData#count returns the count for count_by when provided
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1242) Gitlab::UsageData#count returns the fallback value when counting fails
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1243) Gitlab::UsageData#approximate_counts gets approximate counts for selected models
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1244) Gitlab::UsageData#approximate_counts returns default values if counts can not be retrieved
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/usage_data_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/usage_data_spec.rb:7:in `block (2 levels) in <main>'

  1245) Gitlab::UserAccess#can_push_to_branch? push to none protected branch returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:15:in `block (4 levels) in <main>'

  1246) Gitlab::UserAccess#can_push_to_branch? push to none protected branch returns true if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:21:in `block (4 levels) in <main>'

  1247) Gitlab::UserAccess#can_push_to_branch? push to none protected branch returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:27:in `block (4 levels) in <main>'

  1248) Gitlab::UserAccess#can_push_to_branch? push to empty project returns true for admins
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:40:in `block (4 levels) in <main>'

  1249) Gitlab::UserAccess#can_push_to_branch? push to empty project returns true if user is maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:34:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:44:in `block (4 levels) in <main>'

  1250) Gitlab::UserAccess#can_push_to_branch? push to empty project returns false if user is developer and project is fully protected
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:34:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:50:in `block (4 levels) in <main>'

  1251) Gitlab::UserAccess#can_push_to_branch? push to empty project returns false if user is developer and it is not allowed to push new commits but can merge into branch
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:34:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:57:in `block (4 levels) in <main>'

  1252) Gitlab::UserAccess#can_push_to_branch? push to empty project returns true if user is developer and project is unprotected
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:34:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:64:in `block (4 levels) in <main>'

  1253) Gitlab::UserAccess#can_push_to_branch? push to empty project returns true if user is developer and project grants developers permission
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:34:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:71:in `block (4 levels) in <main>'

  1254) Gitlab::UserAccess#can_push_to_branch? push to protected branch returns true for admins
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:85:in `block (4 levels) in <main>'

  1255) Gitlab::UserAccess#can_push_to_branch? push to protected branch returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:89:in `block (4 levels) in <main>'

  1256) Gitlab::UserAccess#can_push_to_branch? push to protected branch returns false if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:95:in `block (4 levels) in <main>'

  1257) Gitlab::UserAccess#can_push_to_branch? push to protected branch returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:101:in `block (4 levels) in <main>'

  1258) Gitlab::UserAccess#can_push_to_branch? push to protected branch returns false if branch does not exist
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:107:in `block (4 levels) in <main>'

  1259) Gitlab::UserAccess#can_push_to_branch? push to protected branch if allowed for developers returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:115:in `block (4 levels) in <main>'

  1260) Gitlab::UserAccess#can_push_to_branch? push to protected branch if allowed for developers returns true if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:115:in `block (4 levels) in <main>'

  1261) Gitlab::UserAccess#can_push_to_branch? push to protected branch if allowed for developers returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:115:in `block (4 levels) in <main>'

  1262) Gitlab::UserAccess#can_push_to_branch? allowing pushes to maintainers of forked projects allows users that have push access to the canonical project to push to the MR branch
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:138:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:144:in `block (4 levels) in <main>'
        # ./spec/support/sidekiq.rb:21:in `block (3 levels) in <main>'
        # ./spec/support/sidekiq.rb:21:in `block (2 levels) in <main>'

  1263) Gitlab::UserAccess#can_push_to_branch? allowing pushes to maintainers of forked projects does not allow the user to push to other branches
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:138:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:144:in `block (4 levels) in <main>'

  1264) Gitlab::UserAccess#can_push_to_branch? allowing pushes to maintainers of forked projects does not allow the user to push if he does not have push access to the canonical project
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:138:in `block (4 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:144:in `block (4 levels) in <main>'

  1265) Gitlab::UserAccess#can_push_to_branch? merge to protected branch if allowed for developers returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:172:in `block (4 levels) in <main>'

  1266) Gitlab::UserAccess#can_push_to_branch? merge to protected branch if allowed for developers returns true if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:172:in `block (4 levels) in <main>'

  1267) Gitlab::UserAccess#can_push_to_branch? merge to protected branch if allowed for developers returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:172:in `block (4 levels) in <main>'

  1268) Gitlab::UserAccess#can_create_tag? push to none protected tag returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:198:in `block (4 levels) in <main>'

  1269) Gitlab::UserAccess#can_create_tag? push to none protected tag returns true if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:204:in `block (4 levels) in <main>'

  1270) Gitlab::UserAccess#can_create_tag? push to none protected tag returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:210:in `block (4 levels) in <main>'

  1271) Gitlab::UserAccess#can_create_tag? push to protected tag returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:221:in `block (4 levels) in <main>'

  1272) Gitlab::UserAccess#can_create_tag? push to protected tag returns false if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:227:in `block (4 levels) in <main>'

  1273) Gitlab::UserAccess#can_create_tag? push to protected tag returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:233:in `block (4 levels) in <main>'

  1274) Gitlab::UserAccess#can_create_tag? push to protected tag if allowed for developers returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:241:in `block (4 levels) in <main>'

  1275) Gitlab::UserAccess#can_create_tag? push to protected tag if allowed for developers returns true if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:241:in `block (4 levels) in <main>'

  1276) Gitlab::UserAccess#can_create_tag? push to protected tag if allowed for developers returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:241:in `block (4 levels) in <main>'

  1277) Gitlab::UserAccess#can_delete_branch? delete unprotected branch returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:267:in `block (4 levels) in <main>'

  1278) Gitlab::UserAccess#can_delete_branch? delete unprotected branch returns true if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:273:in `block (4 levels) in <main>'

  1279) Gitlab::UserAccess#can_delete_branch? delete unprotected branch returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:279:in `block (4 levels) in <main>'

  1280) Gitlab::UserAccess#can_delete_branch? delete protected branch returns true if user is a maintainer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:289:in `block (4 levels) in <main>'

  1281) Gitlab::UserAccess#can_delete_branch? delete protected branch returns false if user is a developer
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:295:in `block (4 levels) in <main>'

  1282) Gitlab::UserAccess#can_delete_branch? delete protected branch returns false if user is a reporter
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/user_access_spec.rb:9:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/user_access_spec.rb:301:in `block (4 levels) in <main>'

  1283) Gitlab::Verify::JobArtifacts behaves like Gitlab::Verify::BatchVerifier subclass batching iterates through objects in batches
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "Gitlab::Verify::BatchVerifier subclass" called from ./spec/lib/gitlab/verify/job_artifacts_spec.rb:8
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:9:in `block (3 levels) in <main>'

  1284) Gitlab::Verify::JobArtifacts behaves like Gitlab::Verify::BatchVerifier subclass batching allows the starting ID to be specified
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "Gitlab::Verify::BatchVerifier subclass" called from ./spec/lib/gitlab/verify/job_artifacts_spec.rb:8
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:9:in `block (3 levels) in <main>'

  1285) Gitlab::Verify::JobArtifacts behaves like Gitlab::Verify::BatchVerifier subclass batching allows the finishing ID to be specified
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "Gitlab::Verify::BatchVerifier subclass" called from ./spec/lib/gitlab/verify/job_artifacts_spec.rb:8
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:9:in `block (3 levels) in <main>'

  1286) Gitlab::Verify::JobArtifacts#run_batches passes artifacts with the correct file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:16:in `block (3 levels) in <main>'

  1287) Gitlab::Verify::JobArtifacts#run_batches fails artifacts with a missing file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:16:in `block (3 levels) in <main>'

  1288) Gitlab::Verify::JobArtifacts#run_batches fails artifacts with a mismatched checksum
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:16:in `block (3 levels) in <main>'

  1289) Gitlab::Verify::JobArtifacts#run_batches with remote files passes artifacts in object storage that exist
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:16:in `block (3 levels) in <main>'

  1290) Gitlab::Verify::JobArtifacts#run_batches with remote files fails artifacts in object storage that do not exist
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/job_artifacts_spec.rb:16:in `block (3 levels) in <main>'

  1291) Gitlab::Verify::Uploads behaves like Gitlab::Verify::BatchVerifier subclass batching iterates through objects in batches
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "Gitlab::Verify::BatchVerifier subclass" called from ./spec/lib/gitlab/verify/uploads_spec.rb:8
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:10:in `block (3 levels) in <main>'

  1292) Gitlab::Verify::Uploads behaves like Gitlab::Verify::BatchVerifier subclass batching allows the starting ID to be specified
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "Gitlab::Verify::BatchVerifier subclass" called from ./spec/lib/gitlab/verify/uploads_spec.rb:8
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:10:in `block (3 levels) in <main>'

  1293) Gitlab::Verify::Uploads behaves like Gitlab::Verify::BatchVerifier subclass batching allows the finishing ID to be specified
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "Gitlab::Verify::BatchVerifier subclass" called from ./spec/lib/gitlab/verify/uploads_spec.rb:8
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:9:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:10:in `block (3 levels) in <main>'

  1294) Gitlab::Verify::Uploads#run_batches passes uploads with the correct file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1295) Gitlab::Verify::Uploads#run_batches fails uploads with a missing file
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1296) Gitlab::Verify::Uploads#run_batches fails uploads with a mismatched checksum
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1297) Gitlab::Verify::Uploads#run_batches fails uploads with a missing precalculated checksum
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1298) Gitlab::Verify::Uploads#run_batches with remote files returned hash object passes uploads in object storage that exist
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1299) Gitlab::Verify::Uploads#run_batches with remote files returned hash object fails uploads in object storage that do not exist
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1300) Gitlab::Verify::Uploads#run_batches with remote files performance avoids N+1 queries
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:14:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/verify/uploads_spec.rb:18:in `block (3 levels) in <main>'

  1301) Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is allowed returns false with nil for visibility level
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:11:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:16:in `block (4 levels) in <main>'

  1302) Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted returns true and visibility name
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:29:in `block (4 levels) in <main>'

  1303) Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted overridden visibility when restricted returns true and visibility name
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:11:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:53:in `block (6 levels) in <main>'

  1304) Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted overridden visibility when misspelled returns false with nil for visibility level
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:11:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:64:in `block (6 levels) in <main>'

  1305) Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted overridden visibility when import_data is missing returns false with nil for visibility level
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:7:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:11:in `block (2 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_checker_spec.rb:75:in `block (6 levels) in <main>'

  1306) Gitlab::VisibilityLevel#visibility_level_decreased? when visibility level decreases returns true
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_spec.rb:100:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_spec.rb:104:in `block (4 levels) in <main>'

  1307) Gitlab::VisibilityLevel#visibility_level_decreased? when visibility level does not decrease returns false
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/visibility_level_spec.rb:100:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/visibility_level_spec.rb:114:in `block (4 levels) in <main>'

  1308) Gitlab::WikiFileFinder#find behaves like file finder finds by path
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "file finder" called from ./spec/lib/gitlab/wiki_file_finder_spec.rb:15
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/wiki_file_finder_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/wiki_file_finder_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/wiki_file_finder_spec.rb:11:in `block (3 levels) in <main>'

  1309) Gitlab::WikiFileFinder#find behaves like file finder finds by content
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "file finder" called from ./spec/lib/gitlab/wiki_file_finder_spec.rb:15
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/wiki_file_finder_spec.rb:7:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/wiki_file_finder_spec.rb:8:in `block (3 levels) in <main>'
        # ./spec/lib/gitlab/wiki_file_finder_spec.rb:11:in `block (3 levels) in <main>'

  1310) Gitlab::Workhorse.send_git_archive feature flag disabled sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1311) Gitlab::Workhorse.send_git_archive feature flag disabled when archive caching is disabled tells workhorse not to use the cache
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1312) Gitlab::Workhorse.send_git_archive feature flag enabled sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1313) Gitlab::Workhorse.send_git_archive feature flag enabled when archive caching is disabled tells workhorse not to use the cache
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1314) Gitlab::Workhorse.send_git_archive when the repository doesn't have an archive file path raises an error
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1315) Gitlab::Workhorse.send_git_patch sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1316) Gitlab::Workhorse.channel_websocket without ca_pem 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1317) Gitlab::Workhorse.channel_websocket with ca_pem 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1318) Gitlab::Workhorse.send_git_diff sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1319) Gitlab::Workhorse#verify_api_request! accepts a correct header
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1320) Gitlab::Workhorse#verify_api_request! raises an error when the header is not set
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1321) Gitlab::Workhorse#verify_api_request! raises an error when the header is not signed
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1322) Gitlab::Workhorse#verify_api_request! raises an error when the header is signed with the wrong key
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1323) Gitlab::Workhorse#verify_api_request! raises an error when the issuer is incorrect
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1324) Gitlab::Workhorse.git_http_ok 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1325) Gitlab::Workhorse.git_http_ok when the repo_type is a wiki 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1326) Gitlab::Workhorse.git_http_ok when Gitaly is enabled includes a Repository param
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1327) Gitlab::Workhorse.git_http_ok when Gitaly is enabled when git_upload_pack action is passed includes Gitaly params in the returned value
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1328) Gitlab::Workhorse.git_http_ok when Gitaly is enabled when git_upload_pack action is passed show_all_refs enabled 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1329) Gitlab::Workhorse.git_http_ok when Gitaly is enabled when git_receive_pack action is passed 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1330) Gitlab::Workhorse.git_http_ok when Gitaly is enabled when info_refs action is passed 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1331) Gitlab::Workhorse.git_http_ok when Gitaly is enabled when info_refs action is passed show_all_refs enabled 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1332) Gitlab::Workhorse.git_http_ok when Gitaly is enabled when action passed is not supported by Gitaly 
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1333) Gitlab::Workhorse.git_http_ok when receive_max_input_size has been updated returns custom git config
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1334) Gitlab::Workhorse.git_http_ok when receive_max_input_size is empty returns an empty git config
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1335) Gitlab::Workhorse.set_key_and_notify when we set a new key behaves like set and notify set and return the same value
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "set and notify" called from ./spec/lib/gitlab/workhorse_spec.rb:382
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1336) Gitlab::Workhorse.set_key_and_notify when we set a new key behaves like set and notify set and notify
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "set and notify" called from ./spec/lib/gitlab/workhorse_spec.rb:382
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1337) Gitlab::Workhorse.set_key_and_notify when we set an existing key and overwrite behaves like set and notify set and return the same value
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "set and notify" called from ./spec/lib/gitlab/workhorse_spec.rb:395
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1338) Gitlab::Workhorse.set_key_and_notify when we set an existing key and overwrite behaves like set and notify set and notify
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        Shared Example Group: "set and notify" called from ./spec/lib/gitlab/workhorse_spec.rb:395
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1339) Gitlab::Workhorse.set_key_and_notify when we set an existing key and do not overwrite try to set but return the previous value
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1340) Gitlab::Workhorse.set_key_and_notify when we set an existing key and do not overwrite does not notify
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1341) Gitlab::Workhorse.send_git_blob sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1342) Gitlab::Workhorse.send_url sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1343) Gitlab::Workhorse.send_git_snapshot sets the header correctly
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/gitlab/workhorse_spec.rb:6:in `block (2 levels) in <main>'

  1344) Grafana::Client#get_dashboard behaves like calls grafana api calls grafana api
        Failure/Error: raise Client::Error, message

        Grafana::Client::Error:
          Grafana request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls grafana api" called from ./spec/lib/grafana/client_spec.rb:77
        # ./lib/grafana/client.rb:76:in `raise_error'
        # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
        # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
        # ./lib/grafana/client.rb:35:in `http_get'
        # ./lib/grafana/client.rb:16:in `get_dashboard'
        # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
        # ./spec/lib/grafana/client_spec.rb:15:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1345) Grafana::Client#get_dashboard behaves like no redirects does not follow redirects
        Failure/Error:
          expect { subject }.to raise_exception(
            Grafana::Client::Error,
            'Grafana response status code: 302, Message: {}'
          )

          expected Grafana::Client::Error with "Grafana response status code: 302, Message: {}", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:36:in `block (4 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:36:in `block (3 levels) in <main>'
        Shared Example Group: "no redirects" called from ./spec/lib/grafana/client_spec.rb:78
        # ./spec/lib/grafana/client_spec.rb:36:in `block (3 levels) in <main>'

  1346) Grafana::Client#get_dashboard behaves like handles exceptions HTTParty::Error should raise Grafana::Client::Error with "Error when connecting to Grafana"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Error when connecting to Grafana", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:79
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1347) Grafana::Client#get_dashboard behaves like handles exceptions Net::OpenTimeout should raise Grafana::Client::Error with "Connection to Grafana timed out"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Connection to Grafana timed out", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:79
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1348) Grafana::Client#get_dashboard behaves like handles exceptions SocketError should raise Grafana::Client::Error with "Received SocketError when trying to connect to Grafana"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Received SocketError when trying to connect to Grafana", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:79
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1349) Grafana::Client#get_dashboard behaves like handles exceptions OpenSSL::SSL::SSLError should raise Grafana::Client::Error with "Grafana returned invalid SSL data"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Grafana returned invalid SSL data", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:79
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1350) Grafana::Client#get_dashboard behaves like handles exceptions Errno::ECONNREFUSED should raise Grafana::Client::Error with "Connection refused"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Connection refused", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:79
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1351) Grafana::Client#get_dashboard behaves like handles exceptions StandardError should raise Grafana::Client::Error with "Grafana request failed due to StandardError"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Grafana request failed due to StandardError", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:16:in `get_dashboard'
            # ./spec/lib/grafana/client_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:79
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1352) Grafana::Client#get_datasource behaves like calls grafana api calls grafana api
        Failure/Error: raise Client::Error, message

        Grafana::Client::Error:
          Grafana request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls grafana api" called from ./spec/lib/grafana/client_spec.rb:89
        # ./lib/grafana/client.rb:76:in `raise_error'
        # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
        # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
        # ./lib/grafana/client.rb:35:in `http_get'
        # ./lib/grafana/client.rb:23:in `get_datasource'
        # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
        # ./spec/lib/grafana/client_spec.rb:15:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1353) Grafana::Client#get_datasource behaves like no redirects does not follow redirects
        Failure/Error:
          expect { subject }.to raise_exception(
            Grafana::Client::Error,
            'Grafana response status code: 302, Message: {}'
          )

          expected Grafana::Client::Error with "Grafana response status code: 302, Message: {}", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:36:in `block (4 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:36:in `block (3 levels) in <main>'
        Shared Example Group: "no redirects" called from ./spec/lib/grafana/client_spec.rb:90
        # ./spec/lib/grafana/client_spec.rb:36:in `block (3 levels) in <main>'

  1354) Grafana::Client#get_datasource behaves like handles exceptions HTTParty::Error should raise Grafana::Client::Error with "Error when connecting to Grafana"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Error when connecting to Grafana", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:91
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1355) Grafana::Client#get_datasource behaves like handles exceptions Net::OpenTimeout should raise Grafana::Client::Error with "Connection to Grafana timed out"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Connection to Grafana timed out", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:91
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1356) Grafana::Client#get_datasource behaves like handles exceptions SocketError should raise Grafana::Client::Error with "Received SocketError when trying to connect to Grafana"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Received SocketError when trying to connect to Grafana", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:91
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1357) Grafana::Client#get_datasource behaves like handles exceptions OpenSSL::SSL::SSLError should raise Grafana::Client::Error with "Grafana returned invalid SSL data"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Grafana returned invalid SSL data", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:91
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1358) Grafana::Client#get_datasource behaves like handles exceptions Errno::ECONNREFUSED should raise Grafana::Client::Error with "Connection refused"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Connection refused", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:91
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1359) Grafana::Client#get_datasource behaves like handles exceptions StandardError should raise Grafana::Client::Error with "Grafana request failed due to StandardError"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Grafana request failed due to StandardError", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:23:in `get_datasource'
            # ./spec/lib/grafana/client_spec.rb:86:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:91
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1360) Grafana::Client#proxy_datasource behaves like calls grafana api calls grafana api
        Failure/Error: raise Client::Error, message

        Grafana::Client::Error:
          Grafana request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls grafana api" called from ./spec/lib/grafana/client_spec.rb:116
        # ./lib/grafana/client.rb:76:in `raise_error'
        # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
        # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
        # ./lib/grafana/client.rb:35:in `http_get'
        # ./lib/grafana/client.rb:29:in `proxy_datasource'
        # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
        # ./spec/lib/grafana/client_spec.rb:15:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1361) Grafana::Client#proxy_datasource behaves like no redirects does not follow redirects
        Failure/Error:
          expect { subject }.to raise_exception(
            Grafana::Client::Error,
            'Grafana response status code: 302, Message: {}'
          )

          expected Grafana::Client::Error with "Grafana response status code: 302, Message: {}", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:36:in `block (4 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:36:in `block (3 levels) in <main>'
        Shared Example Group: "no redirects" called from ./spec/lib/grafana/client_spec.rb:117
        # ./spec/lib/grafana/client_spec.rb:36:in `block (3 levels) in <main>'

  1362) Grafana::Client#proxy_datasource behaves like handles exceptions HTTParty::Error should raise Grafana::Client::Error with "Error when connecting to Grafana"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Error when connecting to Grafana", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:118
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1363) Grafana::Client#proxy_datasource behaves like handles exceptions Net::OpenTimeout should raise Grafana::Client::Error with "Connection to Grafana timed out"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Connection to Grafana timed out", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:118
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1364) Grafana::Client#proxy_datasource behaves like handles exceptions SocketError should raise Grafana::Client::Error with "Received SocketError when trying to connect to Grafana"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Received SocketError when trying to connect to Grafana", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:118
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1365) Grafana::Client#proxy_datasource behaves like handles exceptions OpenSSL::SSL::SSLError should raise Grafana::Client::Error with "Grafana returned invalid SSL data"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Grafana returned invalid SSL data", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:118
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1366) Grafana::Client#proxy_datasource behaves like handles exceptions Errno::ECONNREFUSED should raise Grafana::Client::Error with "Connection refused"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Connection refused", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:118
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1367) Grafana::Client#proxy_datasource behaves like handles exceptions StandardError should raise Grafana::Client::Error with "Grafana request failed due to StandardError"
        Failure/Error:
          expect { subject }
            .to raise_exception(Grafana::Client::Error, message)

          expected Grafana::Client::Error with "Grafana request failed due to StandardError", got #<Grafana::Client::Error: Grafana request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/grafana/client.rb:76:in `raise_error'
            # ./lib/grafana/client.rb:66:in `rescue in handle_request_exceptions'
            # ./lib/grafana/client.rb:53:in `handle_request_exceptions'
            # ./lib/grafana/client.rb:35:in `http_get'
            # ./lib/grafana/client.rb:29:in `proxy_datasource'
            # ./spec/lib/grafana/client_spec.rb:104:in `block (3 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (6 levels) in <main>'
            # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'
        Shared Example Group: "handles exceptions" called from ./spec/lib/grafana/client_spec.rb:118
        # ./spec/lib/grafana/client_spec.rb:63:in `block (5 levels) in <main>'

  1368) Marginalia spec for Sidekiq worker jobs when the feature is enabled generates a query that includes the component and value
        Failure/Error: expect(recorded.log.last).to include("#{component}:#{value}")
          expected "SELECT  \"users\".* FROM \"users\" ORDER BY \"users\".\"id\" ASC LIMIT 1 /*application:sidekiq,jid:2...f148f37fab89fa2,job_class:MarginaliaTestJob,line:/spec/support/sidekiq_middleware.rb:15:in `call'*/" to include "correlation_id:"
        # ./spec/lib/marginalia_spec.rb:132:in `block (5 levels) in <main>'
        # ./spec/lib/marginalia_spec.rb:131:in `each'
        # ./spec/lib/marginalia_spec.rb:131:in `block (4 levels) in <main>'
        # ./spec/lib/marginalia_spec.rb:105:in `block (4 levels) in <main>'
        # ./spec/lib/marginalia_spec.rb:105:in `block (3 levels) in <main>'

  1369) Mattermost::Command#create for valid trigger word returns a token
        Failure/Error: super

        Addressable::URI::InvalidURIError:
          Invalid port number: "ac50"
        # ./lib/gitlab/http.rb:24:in `perform_request'
        # ./lib/mattermost/session.rb:82:in `block in post'
        # ./lib/mattermost/session.rb:175:in `handle_exceptions'
        # ./lib/mattermost/session.rb:81:in `post'
        # ./lib/mattermost/client.rb:26:in `post'
        # ./lib/mattermost/client.rb:41:in `block in session_post'
        # ./lib/mattermost/client.rb:40:in `session_post'
        # ./lib/mattermost/command.rb:6:in `create'
        # ./spec/lib/mattermost/command_spec.rb:22:in `block (3 levels) in <main>'
        # ./spec/lib/mattermost/command_spec.rb:39:in `block (4 levels) in <main>'

  1370) Mattermost::Command#create for error message raises an error with message
        Failure/Error: expect { subject }.to raise_error(Mattermost::Error, 'This trigger word is already in use. Please choose another word.')

          expected Mattermost::Error with "This trigger word is already in use. Please choose another word.", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
            # ./lib/gitlab/http.rb:24:in `perform_request'
            # ./lib/mattermost/session.rb:82:in `block in post'
            # ./lib/mattermost/session.rb:175:in `handle_exceptions'
            # ./lib/mattermost/session.rb:81:in `post'
            # ./lib/mattermost/client.rb:26:in `post'
            # ./lib/mattermost/client.rb:41:in `block in session_post'
            # ./lib/mattermost/client.rb:40:in `session_post'
            # ./lib/mattermost/command.rb:6:in `create'
            # ./spec/lib/mattermost/command_spec.rb:22:in `block (3 levels) in <main>'
            # ./spec/lib/mattermost/command_spec.rb:60:in `block (5 levels) in <main>'
            # ./spec/lib/mattermost/command_spec.rb:60:in `block (4 levels) in <main>'
        # ./spec/lib/mattermost/command_spec.rb:60:in `block (4 levels) in <main>'

  1371) Mattermost::Team#all for valid request returns teams
        Failure/Error: super

        Addressable::URI::InvalidURIError:
          Invalid port number: "ac50"
        # ./lib/gitlab/http.rb:24:in `perform_request'
        # ./lib/mattermost/session.rb:76:in `block in get'
        # ./lib/mattermost/session.rb:175:in `handle_exceptions'
        # ./lib/mattermost/session.rb:75:in `get'
        # ./lib/mattermost/client.rb:21:in `get'
        # ./lib/mattermost/client.rb:35:in `block in session_get'
        # ./lib/mattermost/client.rb:34:in `session_get'
        # ./lib/mattermost/team.rb:7:in `all'
        # ./spec/lib/mattermost/team_spec.rb:15:in `block (3 levels) in <main>'
        # ./spec/lib/mattermost/team_spec.rb:47:in `block (4 levels) in <main>'

  1372) Mattermost::Team#all for error message raises an error with message
        Failure/Error: expect { subject }.to raise_error(Mattermost::Error, 'Cannot list teams.')

          expected Mattermost::Error with "Cannot list teams.", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
            # ./lib/gitlab/http.rb:24:in `perform_request'
            # ./lib/mattermost/session.rb:76:in `block in get'
            # ./lib/mattermost/session.rb:175:in `handle_exceptions'
            # ./lib/mattermost/session.rb:75:in `get'
            # ./lib/mattermost/client.rb:21:in `get'
            # ./lib/mattermost/client.rb:35:in `block in session_get'
            # ./lib/mattermost/client.rb:34:in `session_get'
            # ./lib/mattermost/team.rb:7:in `all'
            # ./spec/lib/mattermost/team_spec.rb:15:in `block (3 levels) in <main>'
            # ./spec/lib/mattermost/team_spec.rb:68:in `block (5 levels) in <main>'
            # ./spec/lib/mattermost/team_spec.rb:68:in `block (4 levels) in <main>'
        # ./spec/lib/mattermost/team_spec.rb:68:in `block (4 levels) in <main>'

  1373) Mattermost::Team#create for a new team returns the new team
        Failure/Error: super

        Addressable::URI::InvalidURIError:
          Invalid port number: "ac50"
        # ./lib/gitlab/http.rb:24:in `perform_request'
        # ./lib/mattermost/session.rb:82:in `block in post'
        # ./lib/mattermost/session.rb:175:in `handle_exceptions'
        # ./lib/mattermost/session.rb:81:in `post'
        # ./lib/mattermost/client.rb:26:in `post'
        # ./lib/mattermost/client.rb:41:in `block in session_post'
        # ./lib/mattermost/client.rb:40:in `session_post'
        # ./lib/mattermost/team.rb:13:in `create'
        # ./spec/lib/mattermost/team_spec.rb:74:in `block (3 levels) in <main>'
        # ./spec/lib/mattermost/team_spec.rb:105:in `block (4 levels) in <main>'

  1374) Mattermost::Team#create for existing team raises an error with message
        Failure/Error: expect { subject }.to raise_error(Mattermost::Error, 'A team with that name already exists')

          expected Mattermost::Error with "A team with that name already exists", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
            # ./lib/gitlab/http.rb:24:in `perform_request'
            # ./lib/mattermost/session.rb:82:in `block in post'
            # ./lib/mattermost/session.rb:175:in `handle_exceptions'
            # ./lib/mattermost/session.rb:81:in `post'
            # ./lib/mattermost/client.rb:26:in `post'
            # ./lib/mattermost/client.rb:41:in `block in session_post'
            # ./lib/mattermost/client.rb:40:in `session_post'
            # ./lib/mattermost/team.rb:13:in `create'
            # ./spec/lib/mattermost/team_spec.rb:74:in `block (3 levels) in <main>'
            # ./spec/lib/mattermost/team_spec.rb:126:in `block (5 levels) in <main>'
            # ./spec/lib/mattermost/team_spec.rb:126:in `block (4 levels) in <main>'
        # ./spec/lib/mattermost/team_spec.rb:126:in `block (4 levels) in <main>'

  1375) Mattermost::Team#delete for an existing team returns team status
        Failure/Error: super

        Addressable::URI::InvalidURIError:
          Invalid port number: "ac50"
        # ./lib/gitlab/http.rb:24:in `perform_request'
        # ./lib/mattermost/session.rb:88:in `block in delete'
        # ./lib/mattermost/session.rb:175:in `handle_exceptions'
        # ./lib/mattermost/session.rb:87:in `delete'
        # ./lib/mattermost/client.rb:30:in `delete'
        # ./lib/mattermost/client.rb:47:in `block in session_delete'
        # ./lib/mattermost/client.rb:46:in `session_delete'
        # ./lib/mattermost/team.rb:23:in `destroy'
        # ./spec/lib/mattermost/team_spec.rb:132:in `block (3 levels) in <main>'
        # ./spec/lib/mattermost/team_spec.rb:151:in `block (4 levels) in <main>'

  1376) Mattermost::Team#delete for an unknown team raises an error with message
        Failure/Error: expect { subject }.to raise_error(Mattermost::Error, "We couldn't find the existing team")

          expected Mattermost::Error with "We couldn't find the existing team", got #<Addressable::URI::InvalidURIError: Invalid port number: "ac50"> with backtrace:
            # ./lib/gitlab/http.rb:24:in `perform_request'
            # ./lib/mattermost/session.rb:88:in `block in delete'
            # ./lib/mattermost/session.rb:175:in `handle_exceptions'
            # ./lib/mattermost/session.rb:87:in `delete'
            # ./lib/mattermost/client.rb:30:in `delete'
            # ./lib/mattermost/client.rb:47:in `block in session_delete'
            # ./lib/mattermost/client.rb:46:in `session_delete'
            # ./lib/mattermost/team.rb:23:in `destroy'
            # ./spec/lib/mattermost/team_spec.rb:132:in `block (3 levels) in <main>'
            # ./spec/lib/mattermost/team_spec.rb:172:in `block (5 levels) in <main>'
            # ./spec/lib/mattermost/team_spec.rb:172:in `block (4 levels) in <main>'
        # ./spec/lib/mattermost/team_spec.rb:172:in `block (4 levels) in <main>'

  1377) MicrosoftTeams::Notifier#ping expects to receive successful answer
        Failure/Error: expect(subject.ping(options)).to be true

          expected true
               got false
        # ./spec/lib/microsoft_teams/notifier_spec.rb:54:in `block (3 levels) in <main>'

  1378) Peek::Views::Rugged returns aggregated results
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/peek/views/rugged_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/peek/views/rugged_spec.rb:24:in `block (2 levels) in <main>'

  1379) Quality::Seeders::Issues#seed seeds issues
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/quality/seeders/issues_spec.rb:6:in `block (2 levels) in <main>'
        # ./spec/lib/quality/seeders/issues_spec.rb:8:in `block (2 levels) in <main>'
        # ./spec/lib/quality/seeders/issues_spec.rb:12:in `block (3 levels) in <main>'

  1380) Sentry::Client::Issue#issue_details escapes issue ID
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:30:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1381) Sentry::Client::Issue#issue_details behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client/issue_spec.rb:25
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1382) Sentry::Client::Issue#issue_details error object created from sentry response has a correct external URL
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:67:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1383) Sentry::Client::Issue#issue_details error object created from sentry response issue has a correct external base url
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:71:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1384) Sentry::Client::Issue#issue_details error object created from sentry response has a correct GitLab issue url
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:75:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1385) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :id, sentry_response: :id 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1386) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :first_seen, sentry_response: :firstSeen 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1387) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :last_seen, sentry_response: :lastSeen 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1388) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :title, sentry_response: :title 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1389) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :type, sentry_response: :type 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1390) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :user_count, sentry_response: :userCount 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1391) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :count, sentry_response: :count 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1392) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :message, sentry_response: [:metadata, :value] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1393) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :culprit, sentry_response: :culprit 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1394) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :short_id, sentry_response: :shortId 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1395) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :status, sentry_response: :status 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1396) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :frequency, sentry_response: [:stats, "24h"] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1397) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :project_id, sentry_response: [:project, :id] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1398) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :project_name, sentry_response: [:project, :name] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1399) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :project_slug, sentry_response: [:project, :slug] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1400) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :first_release_last_commit, sentry_response: [:firstRelease, :lastCommit] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1401) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :last_release_last_commit, sentry_response: [:lastRelease, :lastCommit] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1402) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :first_release_short_version, sentry_response: [:firstRelease, :shortVersion] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1403) Sentry::Client::Issue#issue_details error object created from sentry response error_object: :last_release_short_version, sentry_response: [:lastRelease, :shortVersion] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/issue.rb:15:in `get_issue'
        # ./lib/sentry/client/issue.rb:7:in `issue_details'
        # ./spec/lib/sentry/client/issue_spec.rb:23:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/issue_spec.rb:62:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1404) Sentry::Client::Projects#projects behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client/projects_spec.rb:34
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1405) Sentry::Client::Projects#projects behaves like has correct return type returns objects of type Gitlab::ErrorTracking::Project
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "has correct return type" called from ./spec/lib/sentry/client/projects_spec.rb:36
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:19:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1406) Sentry::Client::Projects#projects behaves like has correct length 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "has correct length" called from ./spec/lib/sentry/client/projects_spec.rb:37
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:24:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1407) Sentry::Client::Projects#projects essential keys missing in API response raises exception
        Failure/Error: expect { subject }.to raise_error(Sentry::Client::MissingKeysError, 'Sentry API response is missing keys. key not found: "slug"')

          expected Sentry::Client::MissingKeysError with "Sentry API response is missing keys. key not found: \"slug\"", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/lib/sentry/client/projects_spec.rb:47:in `block (5 levels) in <main>'
            # ./spec/lib/sentry/client/projects_spec.rb:47:in `block (4 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:47:in `block (4 levels) in <main>'

  1408) Sentry::Client::Projects#projects optional keys missing in sentry response behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client/projects_spec.rb:60
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1409) Sentry::Client::Projects#projects optional keys missing in sentry response behaves like has correct return type returns objects of type Gitlab::ErrorTracking::Project
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "has correct return type" called from ./spec/lib/sentry/client/projects_spec.rb:62
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:19:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1410) Sentry::Client::Projects#projects optional keys missing in sentry response behaves like has correct length 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "has correct length" called from ./spec/lib/sentry/client/projects_spec.rb:63
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:24:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1411) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :id, sentry_response: :id 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1412) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :name, sentry_response: :name 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1413) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :status, sentry_response: :status 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1414) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :slug, sentry_response: :slug 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1415) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :organization_name, sentry_response: [:organization, :name] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1416) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :organization_id, sentry_response: [:organization, :id] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1417) Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :organization_slug, sentry_response: [:organization, :slug] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:81:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1418) Sentry::Client::Projects#projects redirects behaves like no Sentry redirects does not follow redirects
        Failure/Error: expect { subject }.to raise_exception(Sentry::Client::Error, 'Sentry response status code: 302')

          expected Sentry::Client::Error with "Sentry response status code: 302", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:28:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:28:in `block (2 levels) in <main>'
        Shared Example Group: "no Sentry redirects" called from ./spec/lib/sentry/client/projects_spec.rb:91
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:28:in `block (2 levels) in <main>'

  1419) Sentry::Client::Projects#projects extra slashes in URL removes extra slashes in api url
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client/projects.rb:17:in `get_projects'
        # ./lib/sentry/client/projects.rb:7:in `projects'
        # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client/projects_spec.rb:107:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1420) Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions HTTParty::Error should raise Sentry::Client::Error with "Error when connecting to Sentry"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Error when connecting to Sentry", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client/projects_spec.rb:116
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1421) Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions Net::OpenTimeout should raise Sentry::Client::Error with "Connection to Sentry timed out"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Connection to Sentry timed out", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client/projects_spec.rb:116
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1422) Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions SocketError should raise Sentry::Client::Error with "Received SocketError when trying to connect to Sentry"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Received SocketError when trying to connect to Sentry", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client/projects_spec.rb:116
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1423) Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions OpenSSL::SSL::SSLError should raise Sentry::Client::Error with "Sentry returned invalid SSL data"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Sentry returned invalid SSL data", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client/projects_spec.rb:116
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1424) Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions Errno::ECONNREFUSED should raise Sentry::Client::Error with "Connection refused"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Connection refused", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client/projects_spec.rb:116
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1425) Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions StandardError should raise Sentry::Client::Error with "Sentry request failed due to StandardError"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Sentry request failed due to StandardError", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client/projects.rb:17:in `get_projects'
            # ./lib/sentry/client/projects.rb:7:in `projects'
            # ./spec/lib/sentry/client/projects_spec.rb:32:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client/projects_spec.rb:116
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1426) Sentry::Client#list_issues behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client_spec.rb:48
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1427) Sentry::Client#list_issues behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct return type" called from ./spec/lib/sentry/client_spec.rb:50
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:21:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1428) Sentry::Client#list_issues behaves like issues has correct length 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct length" called from ./spec/lib/sentry/client_spec.rb:51
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:26:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1429) Sentry::Client#list_issues when response has a pagination info parses the pagination
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:70:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1430) Sentry::Client#list_issues error object created from sentry response error_object: :id, sentry_response: :id 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1431) Sentry::Client#list_issues error object created from sentry response error_object: :first_seen, sentry_response: :firstSeen 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1432) Sentry::Client#list_issues error object created from sentry response error_object: :last_seen, sentry_response: :lastSeen 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1433) Sentry::Client#list_issues error object created from sentry response error_object: :title, sentry_response: :title 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1434) Sentry::Client#list_issues error object created from sentry response error_object: :type, sentry_response: :type 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1435) Sentry::Client#list_issues error object created from sentry response error_object: :user_count, sentry_response: :userCount 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1436) Sentry::Client#list_issues error object created from sentry response error_object: :count, sentry_response: :count 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1437) Sentry::Client#list_issues error object created from sentry response error_object: :message, sentry_response: [:metadata, :value] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1438) Sentry::Client#list_issues error object created from sentry response error_object: :culprit, sentry_response: :culprit 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1439) Sentry::Client#list_issues error object created from sentry response error_object: :short_id, sentry_response: :shortId 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1440) Sentry::Client#list_issues error object created from sentry response error_object: :status, sentry_response: :status 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1441) Sentry::Client#list_issues error object created from sentry response error_object: :frequency, sentry_response: [:stats, "24h"] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1442) Sentry::Client#list_issues error object created from sentry response error_object: :project_id, sentry_response: [:project, :id] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1443) Sentry::Client#list_issues error object created from sentry response error_object: :project_name, sentry_response: [:project, :name] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1444) Sentry::Client#list_issues error object created from sentry response error_object: :project_slug, sentry_response: [:project, :slug] 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:99:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1445) Sentry::Client#list_issues error object created from sentry response behaves like has correct external_url external_url is constructed correctly
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "has correct external_url" called from ./spec/lib/sentry/client_spec.rb:102
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:56:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1446) Sentry::Client#list_issues redirects behaves like no Sentry redirects does not follow redirects
        Failure/Error: expect { subject }.to raise_exception(Sentry::Client::Error, 'Sentry response status code: 302')

          expected Sentry::Client::Error with "Sentry response status code: 302", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:28:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:28:in `block (2 levels) in <main>'
        Shared Example Group: "no Sentry redirects" called from ./spec/lib/sentry/client_spec.rb:108
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:28:in `block (2 levels) in <main>'

  1447) Sentry::Client#list_issues extra slashes in URL removes extra slashes in api url
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:127:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1448) Sentry::Client#list_issues requests with sort parameter in sentry api calls the sentry api with sort params
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:140:in `block (4 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:148:in `block (4 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1449) Sentry::Client#list_issues Older sentry versions where keys are not present behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client_spec.rb:170
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1450) Sentry::Client#list_issues Older sentry versions where keys are not present behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct return type" called from ./spec/lib/sentry/client_spec.rb:172
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:21:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1451) Sentry::Client#list_issues Older sentry versions where keys are not present behaves like issues has correct length 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct length" called from ./spec/lib/sentry/client_spec.rb:173
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:26:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1452) Sentry::Client#list_issues Older sentry versions where keys are not present behaves like has correct external_url external_url is constructed correctly
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "has correct external_url" called from ./spec/lib/sentry/client_spec.rb:175
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:56:in `block (5 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1453) Sentry::Client#list_issues essential keys missing in API response raises exception
        Failure/Error: expect { subject }.to raise_error(Sentry::Client::MissingKeysError, 'Sentry API response is missing keys. key not found: "id"')

          expected Sentry::Client::MissingKeysError with "Sentry API response is missing keys. key not found: \"id\"", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/lib/sentry/client_spec.rb:186:in `block (5 levels) in <main>'
            # ./spec/lib/sentry/client_spec.rb:186:in `block (4 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:186:in `block (4 levels) in <main>'

  1454) Sentry::Client#list_issues sentry api response too large raises exception
        Failure/Error: expect { subject }.to raise_error(Sentry::Client::ResponseInvalidSizeError, 'Sentry API response is too big. Limit is 1 MB.')

          expected Sentry::Client::ResponseInvalidSizeError with "Sentry API response is too big. Limit is 1 MB.", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/lib/sentry/client_spec.rb:195:in `block (5 levels) in <main>'
            # ./spec/lib/sentry/client_spec.rb:195:in `block (4 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:195:in `block (4 levels) in <main>'

  1455) Sentry::Client#list_issues behaves like maps Sentry exceptions HTTParty::Error should raise Sentry::Client::Error with "Error when connecting to Sentry"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Error when connecting to Sentry", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client_spec.rb:199
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1456) Sentry::Client#list_issues behaves like maps Sentry exceptions Net::OpenTimeout should raise Sentry::Client::Error with "Connection to Sentry timed out"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Connection to Sentry timed out", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client_spec.rb:199
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1457) Sentry::Client#list_issues behaves like maps Sentry exceptions SocketError should raise Sentry::Client::Error with "Received SocketError when trying to connect to Sentry"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Received SocketError when trying to connect to Sentry", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client_spec.rb:199
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1458) Sentry::Client#list_issues behaves like maps Sentry exceptions OpenSSL::SSL::SSLError should raise Sentry::Client::Error with "Sentry returned invalid SSL data"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Sentry returned invalid SSL data", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client_spec.rb:199
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1459) Sentry::Client#list_issues behaves like maps Sentry exceptions Errno::ECONNREFUSED should raise Sentry::Client::Error with "Connection refused"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Connection refused", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client_spec.rb:199
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1460) Sentry::Client#list_issues behaves like maps Sentry exceptions StandardError should raise Sentry::Client::Error with "Sentry request failed due to StandardError"
        Failure/Error:
          expect { subject }
            .to raise_exception(Sentry::Client::Error, message)

          expected Sentry::Client::Error with "Sentry request failed due to StandardError", got #<Sentry::Client::Error: Sentry request failed due to Addressable::URI::InvalidURIError> with backtrace:
            # ./lib/sentry/client.rb:136:in `raise_error'
            # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
            # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
            # ./lib/sentry/client.rb:74:in `http_get'
            # ./lib/sentry/client.rb:81:in `get_issues'
            # ./lib/sentry/client.rb:34:in `list_issues'
            # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (5 levels) in <main>'
            # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'
        Shared Example Group: "maps Sentry exceptions" called from ./spec/lib/sentry/client_spec.rb:199
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:51:in `block (4 levels) in <main>'

  1461) Sentry::Client#list_issues when search term is present behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client_spec.rb:205
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1462) Sentry::Client#list_issues when search term is present behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct return type" called from ./spec/lib/sentry/client_spec.rb:207
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:21:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1463) Sentry::Client#list_issues when search term is present behaves like issues has correct length 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct length" called from ./spec/lib/sentry/client_spec.rb:208
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:26:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1464) Sentry::Client#list_issues when cursor is present behaves like calls sentry api calls sentry api
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "calls sentry api" called from ./spec/lib/sentry/client_spec.rb:215
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/support/shared_examples/lib/sentry/client_shared_examples.rb:6:in `block (2 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1465) Sentry::Client#list_issues when cursor is present behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct return type" called from ./spec/lib/sentry/client_spec.rb:217
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:21:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1466) Sentry::Client#list_issues when cursor is present behaves like issues has correct length 
        Failure/Error: raise Client::Error, message

        Sentry::Client::Error:
          Sentry request failed due to Addressable::URI::InvalidURIError
        Shared Example Group: "issues has correct length" called from ./spec/lib/sentry/client_spec.rb:218
        # ./lib/sentry/client.rb:136:in `raise_error'
        # ./lib/sentry/client.rb:124:in `rescue in handle_request_exceptions'
        # ./lib/sentry/client.rb:109:in `handle_request_exceptions'
        # ./lib/sentry/client.rb:74:in `http_get'
        # ./lib/sentry/client.rb:81:in `get_issues'
        # ./lib/sentry/client.rb:34:in `list_issues'
        # ./spec/lib/sentry/client_spec.rb:46:in `block (3 levels) in <main>'
        # ./spec/lib/sentry/client_spec.rb:26:in `block (3 levels) in <main>'
        # ------------------
        # --- Caused by: ---
        # Addressable::URI::InvalidURIError:
        #   Invalid port number: "ac50"
        #   ./lib/gitlab/http.rb:24:in `perform_request'

  1467) SystemCheck::Orphans::RepositoryCheck#multi_check few orphans with existing namespace prints list of orphaned namespaces
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/system_check/orphans/repository_check_spec.rb:30:in `block (4 levels) in <main>'

  1468) SystemCheck::Orphans::RepositoryCheck#multi_check few orphans with existing namespace and parents with same name as orphans prints list of orphaned namespaces ignoring parents with same namespace as orphans
        Failure/Error: stub(service, storage).__send__(rpc, request, kwargs) # rubocop:disable GitlabSecurity/PublicSend

        GRPC::Unavailable:
          14:failed to connect to all addresses
        # ./lib/gitlab/gitaly_client.rb:167:in `execute'
        # ./lib/gitlab/gitaly_client.rb:146:in `block in call'
        # ./lib/gitlab/gitaly_client.rb:173:in `measure_timings'
        # ./lib/gitlab/gitaly_client.rb:145:in `call'
        # ./lib/gitlab/gitaly_client/repository_service.rb:19:in `exists?'
        # ./lib/gitlab/git/repository.rb:98:in `exists?'
        # ./lib/gitlab/shell.rb:289:in `repository_exists?'
        # ./app/models/project.rb:2393:in `repository_with_same_path_already_exists?'
        # ./app/models/project.rb:2386:in `check_repository_absence!'
        # ./spec/lib/system_check/orphans/repository_check_spec.rb:44:in `block (4 levels) in <main>'

Top 20 slowest examples (60.02 seconds, 2.9% of total time):
  Gitlab::UrlBlocker#blocked_url? returns true for a non-alphanumeric hostname
    8.55 seconds ./spec/lib/gitlab/url_blocker_spec.rb:246
  Gitlab::Git::Blob.raw large file limits the size of a large file
    5.15 seconds ./spec/lib/gitlab/git/blob_spec.rb:158
  Banzai::Filter::CommitTrailersFilter detects non GitLab users when Gravatar is disabled behaves like mailto links replaces them with mailto links
    4.81 seconds ./spec/lib/banzai/filter/commit_trailers_filter_spec.rb:54
  Gitlab::CycleAnalytics::UsageData#to_json a valid usage data result returns the aggregated usage data of every selected project
    3.46 seconds ./spec/lib/gitlab/cycle_analytics/usage_data_spec.rb:76
  Gitlab::CycleAnalytics::StageSummary#commits finds a large (> 100) snumber of commits if present
    3.45 seconds ./spec/lib/gitlab/cycle_analytics/stage_summary_spec.rb:69
  Gitlab::Git::Repository#languages returns exactly the expected results
    2.88 seconds ./spec/lib/gitlab/git/repository_spec.rb:1483
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable when every Clusters::Project has Clusters::KubernetesNamespace does not create any Clusters::KubernetesNamespace
    2.48 seconds ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:60
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable when only some Clusters::Project have Clusters::KubernetesNamespace related does not modify clusters with Clusters::KubernetesNamespace
    2.46 seconds ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:81
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable when only some Clusters::Project have Clusters::KubernetesNamespace related behaves like consistent kubernetes namespace attributes populates namespace and service account information
    2.4 seconds ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:22
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable when no Clusters::Project has a Clusters::KubernetesNamespace behaves like consistent kubernetes namespace attributes populates namespace and service account information
    2.39 seconds ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:22
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable when only some Clusters::Project have Clusters::KubernetesNamespace related creates limited number of Clusters::KubernetesNamespace
    2.38 seconds ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:75
  Gitlab::CycleAnalytics::GroupStageSummary#deploys with from date with subgroups finds deploys from them
    2.35 seconds ./spec/lib/gitlab/cycle_analytics/group_stage_summary_spec.rb:90
  Gitlab::CycleAnalytics::GroupStageSummary#deploys with from date with projects specified in options shows deploys from those projects
    2.29 seconds ./spec/lib/gitlab/cycle_analytics/group_stage_summary_spec.rb:104
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable when no Clusters::Project has a Clusters::KubernetesNamespace creates a Clusters::KubernetesNamespace per Clusters::Project
    2.24 seconds ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:44
  cycle analytics events #staging_events has the author's avatar URL
    2.24 seconds ./spec/lib/gitlab/cycle_analytics/events_spec.rb:300
  cycle analytics events #staging_events has the branch name
    2.23 seconds ./spec/lib/gitlab/cycle_analytics/events_spec.rb:272
  cycle analytics events #production_events has the author's avatar URL
    2.11 seconds ./spec/lib/gitlab/cycle_analytics/events_spec.rb:342
  Gitlab::CycleAnalytics::GroupStageSummary#deploys with from date finds the number of deploys made created after it
    2.09 seconds ./spec/lib/gitlab/cycle_analytics/group_stage_summary_spec.rb:79
  Gitlab::Gpg::Commit#signature multiple commits with signatures does an aggregated sql request instead of 2 separate ones
    2.03 seconds ./spec/lib/gitlab/gpg/commit_spec.rb:395
  Gitlab::ExclusiveLease#try_obtain can obtain after the lease has expired
    2.01 seconds ./spec/lib/gitlab/exclusive_lease_spec.rb:15

Top 20 slowest example groups:
  Gitlab::BackgroundMigration::MigrateStageIndex
    29.29 seconds average (29.29 seconds / 1 example) ./spec/lib/gitlab/background_migration/migrate_stage_index_spec.rb:5
  Gitlab::BackgroundMigration::PopulateMergeRequestAssigneesTable
    17.89 seconds average (35.78 seconds / 2 examples) ./spec/lib/gitlab/background_migration/populate_merge_request_assignees_table_spec.rb:5
  Gitlab::BackgroundMigration::ResetMergeStatus
    14.71 seconds average (14.71 seconds / 1 example) ./spec/lib/gitlab/background_migration/reset_merge_status_spec.rb:5
  Gitlab::BackgroundMigration::SetConfidentialNoteEventsOnWebhooks
    14.15 seconds average (42.44 seconds / 3 examples) ./spec/lib/gitlab/background_migration/set_confidential_note_events_on_webhooks_spec.rb:5
  Gitlab::BackgroundMigration::MigrateNullPrivateProfileToFalse
    11.3 seconds average (11.3 seconds / 1 example) ./spec/lib/gitlab/background_migration/migrate_null_private_profile_to_false_spec.rb:5
  Gitlab::BackgroundMigration::SetConfidentialNoteEventsOnServices
    11.3 seconds average (33.89 seconds / 3 examples) ./spec/lib/gitlab/background_migration/set_confidential_note_events_on_services_spec.rb:5
  Gitlab::BackgroundMigration::AddMergeRequestDiffCommitsCount
    10.8 seconds average (32.39 seconds / 3 examples) ./spec/lib/gitlab/background_migration/add_merge_request_diff_commits_count_spec.rb:5
  Gitlab::BackgroundMigration::EncryptRunnersTokens
    10.72 seconds average (42.89 seconds / 4 examples) ./spec/lib/gitlab/background_migration/encrypt_runners_tokens_spec.rb:5
  Gitlab::BackgroundMigration::ArchiveLegacyTraces
    9.9 seconds average (29.7 seconds / 3 examples) ./spec/lib/gitlab/background_migration/archive_legacy_traces_spec.rb:5
  Gitlab::BackgroundMigration::MigrateBuildStage
    9.57 seconds average (28.7 seconds / 3 examples) ./spec/lib/gitlab/background_migration/migrate_build_stage_spec.rb:5
  Gitlab::BackgroundMigration::PopulateClusterKubernetesNamespaceTable
    6.88 seconds average (41.25 seconds / 6 examples) ./spec/lib/gitlab/background_migration/populate_cluster_kubernetes_namespace_table_spec.rb:5
  Gitlab::BackgroundMigration::DigestColumn
    6.66 seconds average (26.62 seconds / 4 examples) ./spec/lib/gitlab/background_migration/digest_column_spec.rb:5
  ScheduleCalculateWikiSizes
    5.89 seconds average (17.67 seconds / 3 examples) ./spec/lib/gitlab/background_migration/schedule_calculate_wiki_sizes_spec.rb:6
  Gitlab::BackgroundMigration::BackfillHashedProjectRepositories
    5.8 seconds average (23.19 seconds / 4 examples) ./spec/lib/gitlab/background_migration/backfill_hashed_project_repositories_spec.rb:5
  Gitlab::BackgroundMigration::BackfillLegacyProjectRepositories
    5.64 seconds average (22.56 seconds / 4 examples) ./spec/lib/gitlab/background_migration/backfill_legacy_project_repositories_spec.rb:5
  Gitlab::BackgroundMigration::FixPromotedEpicsDiscussionIds
    5.54 seconds average (11.08 seconds / 2 examples) ./spec/lib/gitlab/background_migration/fix_promoted_epics_discussion_ids_spec.rb:5
  Gitlab::BackgroundMigration::EncryptColumns
    4.96 seconds average (29.77 seconds / 6 examples) ./spec/lib/gitlab/background_migration/encrypt_columns_spec.rb:5
  Gitlab::BackgroundMigration::RemoveRestrictedTodos
    4.84 seconds average (33.86 seconds / 7 examples) ./spec/lib/gitlab/background_migration/remove_restricted_todos_spec.rb:5
  Gitlab::BackgroundMigration::BackfillProjectFullpathInRepoConfig
    3.72 seconds average (22.35 seconds / 6 examples) ./spec/lib/gitlab/background_migration/backfill_project_fullpath_in_repo_config_spec.rb:5
  Gitlab::BackgroundMigration::MigratePagesMetadata
    3.71 seconds average (7.42 seconds / 2 examples) ./spec/lib/gitlab/background_migration/migrate_pages_metadata_spec.rb:5

Finished in 34 minutes 31 seconds (files took 25.62 seconds to load)
16150 examples, 1468 failures, 8 pending

Failed examples:

rspec ./spec/lib/bitbucket_server/client_spec.rb:38 # BitbucketServer::Client#repo requests a specific repository
rspec ./spec/lib/bitbucket_server/client_spec.rb:79 # BitbucketServer::Client#create_branch requests Bitbucket to create a branch
rspec ./spec/lib/bitbucket_server/client_spec.rb:93 # BitbucketServer::Client#delete_branch requests Bitbucket to create a branch
rspec ./spec/lib/bitbucket_server/connection_spec.rb:14 # BitbucketServer::Connection#get returns JSON body
rspec ./spec/lib/bitbucket_server/connection_spec.rb:20 # BitbucketServer::Connection#get throws an exception if the response is not 200
rspec ./spec/lib/bitbucket_server/connection_spec.rb:26 # BitbucketServer::Connection#get throws an exception if the response is not JSON
rspec ./spec/lib/bitbucket_server/connection_spec.rb:32 # BitbucketServer::Connection#get throws an exception upon a network error
rspec ./spec/lib/bitbucket_server/connection_spec.rb:42 # BitbucketServer::Connection#post returns JSON body
rspec ./spec/lib/bitbucket_server/connection_spec.rb:48 # BitbucketServer::Connection#post throws an exception if the response is not 200
rspec ./spec/lib/bitbucket_server/connection_spec.rb:54 # BitbucketServer::Connection#post throws an exception upon a network error
rspec ./spec/lib/bitbucket_server/connection_spec.rb:69 # BitbucketServer::Connection#delete branch API returns JSON body
rspec ./spec/lib/bitbucket_server/connection_spec.rb:75 # BitbucketServer::Connection#delete branch API throws an exception if the response is not 200
rspec ./spec/lib/bitbucket_server/connection_spec.rb:81 # BitbucketServer::Connection#delete branch API throws an exception upon a network error
rspec ./spec/lib/gitlab/background_migration_spec.rb:95 # Gitlab::BackgroundMigration.steal when there are enqueued and scheduled jobs present steals from the scheduled sets queue first
rspec ./spec/lib/gitlab/health_checks/probes/collection_spec.rb:23 # Gitlab::HealthChecks::Probes::Collection#execute with all checks responds with readiness checks data
rspec ./spec/lib/gitlab/highlight_spec.rb:92 # Gitlab::Highlight#highlight with CRLF strips extra LFs
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:1:1] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains project data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:1:2] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains deprecated repository data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:1:3:1] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue contains issuable data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:1:3:2] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue does not contain certain keys
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:1:3:3:1] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue changes are given populates the :changes hash
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:1:3:3:2] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a issue changes are given does not contain certain keys
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:2:1] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains project data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:2:2] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data contains deprecated repository data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:2:3:1] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request contains issuable data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:2:3:2] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request does not contain certain keys
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:2:3:3:1] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request changes are given populates the :changes hash
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb[1:1:2:3:3:2] # Gitlab::HookData::IssuableBuilder#build behaves like issuable hook data with a merge_request changes are given does not contain certain keys
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:110 # Gitlab::HookData::IssuableBuilder#build issue is assigned returns correct hook data
rspec ./spec/lib/gitlab/hook_data/issuable_builder_spec.rb:121 # Gitlab::HookData::IssuableBuilder#build merge_request is assigned returns correct hook data
rspec ./spec/lib/gitlab/hook_data/issue_builder_spec.rb:13 # Gitlab::HookData::IssueBuilder#build includes safe attribute
rspec ./spec/lib/gitlab/hook_data/issue_builder_spec.rb:41 # Gitlab::HookData::IssueBuilder#build includes additional attrs
rspec ./spec/lib/gitlab/hook_data/issue_builder_spec.rb:54 # Gitlab::HookData::IssueBuilder#build when the issue has an image in the description sets the image to use an absolute URL
rspec ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:12 # Gitlab::HookData::MergeRequestBuilder#build includes safe attribute
rspec ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:53 # Gitlab::HookData::MergeRequestBuilder#build includes additional attrs
rspec ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb[1:1:2:1] # Gitlab::HookData::MergeRequestBuilder#build source key contains project data
rspec ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb[1:1:3:1] # Gitlab::HookData::MergeRequestBuilder#build target key contains project data
rspec ./spec/lib/gitlab/hook_data/merge_request_builder_spec.rb:67 # Gitlab::HookData::MergeRequestBuilder#build when the MR has an image in the description sets the image to use an absolute URL
rspec ./spec/lib/gitlab/import/database_helpers_spec.rb:18 # Gitlab::Import::DatabaseHelpers.insert_and_return_id returns the ID returned by the query
rspec ./spec/lib/gitlab/import/merge_request_creator_spec.rb:16 # Gitlab::Import::MergeRequestCreator#execute merge request already exists updates the data
rspec ./spec/lib/gitlab/import/merge_request_creator_spec.rb:36 # Gitlab::Import::MergeRequestCreator#execute new merge request creates a new merge request
rspec ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:30 # Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when merge request does not exist returns a new object
rspec ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:35 # Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when merge request does not exist does load all existing objects
rspec ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:57 # Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when merge request does exist returns an existing object
rspec ./spec/lib/gitlab/import/merge_request_helpers_spec.rb:68 # Gitlab::Import::MergeRequestHelpers.create_merge_request_without_hooks when project is deleted returns an existing object
rspec ./spec/lib/gitlab/import/set_async_jid_spec.rb:8 # Gitlab::Import::SetAsyncJid.set_jid sets the JID in Redis
rspec ./spec/lib/gitlab/import/set_async_jid_spec.rb:17 # Gitlab::Import::SetAsyncJid.set_jid updates the import JID of the project
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:16 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute returns if project exported file is not found
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:24 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute creates a lock file in the export dir
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:33 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method succeeds removes the lock file
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:39 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method succeeds removes the archive path
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:58 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails does not create the lock file
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:64 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails does not execute main logic
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:70 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails logs validation errors in shared context
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:76 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when validation fails removes the archive path
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:86 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#execute when the method fails when an exception is raised removes the lock
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:96 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#log_validation_errors add the message to the shared context
rspec ./spec/lib/gitlab/import_export/after_export_strategies/base_after_export_strategy_spec.rb:111 # Gitlab::ImportExport::AfterExportStrategies::BaseAfterExportStrategy#to_json adds the current strategy class to the serialized attributes
rspec ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:16 # Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy validations only POST and PUT method allowed
rspec ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:24 # Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy validations onyl allow urls as upload urls
rspec ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:31 # Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy#execute removes the exported project file after the upload
rspec ./spec/lib/gitlab/import_export/after_export_strategies/web_upload_strategy_spec.rb:41 # Gitlab::ImportExport::AfterExportStrategies::WebUploadStrategy#execute when upload fails stores the export error
rspec ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:33 # Gitlab::ImportExport::AvatarRestorer does not break if there is just a directory
rspec ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:22 # Gitlab::ImportExport::AvatarRestorer with avatar restores a project avatar
rspec ./spec/lib/gitlab/import_export/avatar_restorer_spec.rb:26 # Gitlab::ImportExport::AvatarRestorer with avatar saves the avatar into the project
rspec ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:22 # Gitlab::ImportExport::AvatarSaver saves a project avatar
rspec ./spec/lib/gitlab/import_export/avatar_saver_spec.rb:28 # Gitlab::ImportExport::AvatarSaver is fine not to have an avatar
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:25 # Gitlab::ImportExport::FastHashSerializer saves the correct hash
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:29 # Gitlab::ImportExport::FastHashSerializer has approvals_before_merge set
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:33 # Gitlab::ImportExport::FastHashSerializer has milestones
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:37 # Gitlab::ImportExport::FastHashSerializer has merge requests
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:41 # Gitlab::ImportExport::FastHashSerializer has merge request's milestones
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:45 # Gitlab::ImportExport::FastHashSerializer has merge request's source branch SHA
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:49 # Gitlab::ImportExport::FastHashSerializer has merge request's target branch SHA
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:53 # Gitlab::ImportExport::FastHashSerializer has events
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:57 # Gitlab::ImportExport::FastHashSerializer has snippets
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:61 # Gitlab::ImportExport::FastHashSerializer has snippet notes
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:65 # Gitlab::ImportExport::FastHashSerializer has releases
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:69 # Gitlab::ImportExport::FastHashSerializer has no author on releases
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:73 # Gitlab::ImportExport::FastHashSerializer has the author ID on releases
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:77 # Gitlab::ImportExport::FastHashSerializer has issues
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:81 # Gitlab::ImportExport::FastHashSerializer has issue comments
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:88 # Gitlab::ImportExport::FastHashSerializer has issue assignees
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:92 # Gitlab::ImportExport::FastHashSerializer has author on issue comments
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:96 # Gitlab::ImportExport::FastHashSerializer has project members
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:100 # Gitlab::ImportExport::FastHashSerializer has merge requests diffs
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:104 # Gitlab::ImportExport::FastHashSerializer has merge request diff files
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:108 # Gitlab::ImportExport::FastHashSerializer has merge request diff commits
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:112 # Gitlab::ImportExport::FastHashSerializer has merge requests comments
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:116 # Gitlab::ImportExport::FastHashSerializer has author on merge requests comments
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:120 # Gitlab::ImportExport::FastHashSerializer has pipeline stages
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:124 # Gitlab::ImportExport::FastHashSerializer has pipeline statuses
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:128 # Gitlab::ImportExport::FastHashSerializer has pipeline builds
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:136 # Gitlab::ImportExport::FastHashSerializer has no when YML attributes but only the DB column
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:142 # Gitlab::ImportExport::FastHashSerializer has pipeline commits
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:146 # Gitlab::ImportExport::FastHashSerializer has ci pipeline notes
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:150 # Gitlab::ImportExport::FastHashSerializer has labels with no associations
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:154 # Gitlab::ImportExport::FastHashSerializer has labels associated to records
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:158 # Gitlab::ImportExport::FastHashSerializer has project and group labels
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:164 # Gitlab::ImportExport::FastHashSerializer has priorities associated to labels
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:170 # Gitlab::ImportExport::FastHashSerializer has issue resource label events
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:174 # Gitlab::ImportExport::FastHashSerializer has merge request resource label events
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:178 # Gitlab::ImportExport::FastHashSerializer saves the correct service type
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:182 # Gitlab::ImportExport::FastHashSerializer saves the properties for a service
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:186 # Gitlab::ImportExport::FastHashSerializer has project feature
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:194 # Gitlab::ImportExport::FastHashSerializer has custom attributes
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:198 # Gitlab::ImportExport::FastHashSerializer has badges
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:202 # Gitlab::ImportExport::FastHashSerializer does not complain about non UTF-8 characters in MR diff files
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:214 # Gitlab::ImportExport::FastHashSerializer has a board and a list
rspec ./spec/lib/gitlab/import_export/fast_hash_serializer_spec.rb:209 # Gitlab::ImportExport::FastHashSerializer project attributes does not contain the runners token
rspec ./spec/lib/gitlab/import_export/fork_spec.rb:54 # forked project import can access the MR
rspec ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:16 # Gitlab::ImportExport::GroupProjectObjectBuilder labels finds the existing group label
rspec ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:25 # Gitlab::ImportExport::GroupProjectObjectBuilder labels creates a new label
rspec ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:36 # Gitlab::ImportExport::GroupProjectObjectBuilder milestones finds the existing group milestone
rspec ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:45 # Gitlab::ImportExport::GroupProjectObjectBuilder milestones creates a new milestone
rspec ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:56 # Gitlab::ImportExport::GroupProjectObjectBuilder merge_request finds the existing merge_request
rspec ./spec/lib/gitlab/import_export/group_project_object_builder_spec.rb:68 # Gitlab::ImportExport::GroupProjectObjectBuilder merge_request creates a new merge_request
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:22 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object saves group successfully
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:50 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is enabled uses FastHashSerializer
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:62 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is disabled is serialized via built-in `as_json`
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:82 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON saves the correct json
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:86 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has milestones
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:90 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has labels
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:94 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has boards
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:98 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has group members
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:102 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has priorities associated to labels
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:106 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON has badges
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:113 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group children exports group children
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:117 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group children exports group children of children
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:134 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group members exports group members as group owner
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:143 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group members as admin exports group members as admin
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:147 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group members as admin exports group members
rspec ./spec/lib/gitlab/import_export/group_tree_saver_spec.rb:156 # Gitlab::ImportExport::GroupTreeSaver saves the group tree into a json object JSON group attributes does not contain the runners token
rspec ./spec/lib/gitlab/import_export/import_export_spec.rb:10 # Gitlab::ImportExport export filename contains the project path
rspec ./spec/lib/gitlab/import_export/import_export_spec.rb:14 # Gitlab::ImportExport export filename contains the namespace path
rspec ./spec/lib/gitlab/import_export/import_export_spec.rb:18 # Gitlab::ImportExport export filename does not go over a certain length
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:28 # Gitlab::ImportExport::Importer#execute succeeds
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:34 # Gitlab::ImportExport::Importer#execute extracts the archive
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:40 # Gitlab::ImportExport::Importer#execute checks the version
rspec ./spec/lib/gitlab/import_export/importer_spec.rb[1:1:4:1] # Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::AvatarRestorer
rspec ./spec/lib/gitlab/import_export/importer_spec.rb[1:1:4:2] # Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::RepoRestorer
rspec ./spec/lib/gitlab/import_export/importer_spec.rb[1:1:4:3] # Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::WikiRestorer
rspec ./spec/lib/gitlab/import_export/importer_spec.rb[1:1:4:4] # Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::UploadsRestorer
rspec ./spec/lib/gitlab/import_export/importer_spec.rb[1:1:4:5] # Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::LfsRestorer
rspec ./spec/lib/gitlab/import_export/importer_spec.rb[1:1:4:6] # Gitlab::ImportExport::Importer#execute all restores are executed calls the Gitlab::ImportExport::StatisticsRestorer
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:65 # Gitlab::ImportExport::Importer#execute all restores are executed restores the ProjectTree
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:71 # Gitlab::ImportExport::Importer#execute all restores are executed removes the import file
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:79 # Gitlab::ImportExport::Importer#execute all restores are executed sets the correct visibility_level when visibility level is a string
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:105 # Gitlab::ImportExport::Importer#execute when project successfully restored when import_data has original_path overwrites existing project
rspec ./spec/lib/gitlab/import_export/importer_spec.rb:117 # Gitlab::ImportExport::Importer#execute when project successfully restored when import_data has not original_path does not call the overwrite service
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:49 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files succeeds
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:54 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files does not create a new `LfsObject` records, as one already exists
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:58 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files creates new `LfsObjectsProject` records in order to link the project to the existing `LfsObject`
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:62 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files restores the correct `LfsObject` records
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:68 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files restores the correct `LfsObjectsProject` records for the project
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:76 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files assigns the file correctly
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:87 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is not an existing `LfsObject` creates a new lfs object
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:91 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is not an existing `LfsObject` stores the upload
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:105 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is no lfs-objects.json file restores the correct `LfsObject` records
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:111 # Gitlab::ImportExport::LfsRestorer#restore when the archive contains lfs files when there is no lfs-objects.json file restores a single `LfsObjectsProject` record for the project with "project" for the `repository_type`
rspec ./spec/lib/gitlab/import_export/lfs_restorer_spec.rb:122 # Gitlab::ImportExport::LfsRestorer#restore without any LFS-objects succeeds
rspec ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:36 # Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored does not cause errors
rspec ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:42 # Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored copies the file in the correct location when there is an lfs object
rspec ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:63 # Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored saving a json file saves a json file correctly
rspec ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:78 # Gitlab::ImportExport::LfsSaver#save when the project has LFS objects locally stored saving a json file does not save a json file if feature is disabled
rspec ./spec/lib/gitlab/import_export/lfs_saver_spec.rb:100 # Gitlab::ImportExport::LfsSaver#save when the LFS objects are stored in object storage downloads the file to include in an archive
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:53 # Gitlab::ImportExport::MembersMapper map members includes the exported user ID in the map
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:57 # Gitlab::ImportExport::MembersMapper map members maps a project member
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:61 # Gitlab::ImportExport::MembersMapper map members defaults to importer project member if it does not exist
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:65 # Gitlab::ImportExport::MembersMapper map members has invited members with no user
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:71 # Gitlab::ImportExport::MembersMapper map members authorizes the users to the project
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:78 # Gitlab::ImportExport::MembersMapper map members maps an owner as a maintainer
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:85 # Gitlab::ImportExport::MembersMapper map members removes old user_id from member_hash to avoid conflict with user key
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:98 # Gitlab::ImportExport::MembersMapper map members user is not an admin does not map a project member
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:102 # Gitlab::ImportExport::MembersMapper map members user is not an admin defaults to importer project member if it does not exist
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:110 # Gitlab::ImportExport::MembersMapper map members chooses the one with an email first maps the project member that has a matching email first
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:128 # Gitlab::ImportExport::MembersMapper map members importer same as group member maps the project member
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:132 # Gitlab::ImportExport::MembersMapper map members importer same as group member maps the project member if it already exists
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:152 # Gitlab::ImportExport::MembersMapper map members importing group members maps the importer
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:156 # Gitlab::ImportExport::MembersMapper map members importing group members maps the group member
rspec ./spec/lib/gitlab/import_export/members_mapper_spec.rb:164 # Gitlab::ImportExport::MembersMapper map members when importer mapping fails includes importer specific error message
rspec ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:29 # Gitlab::ImportExport::MergeRequestParser has a source branch
rspec ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:33 # Gitlab::ImportExport::MergeRequestParser has a target branch
rspec ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:37 # Gitlab::ImportExport::MergeRequestParser parses a MR that has no source branch
rspec ./spec/lib/gitlab/import_export/merge_request_parser_spec.rb:57 # Gitlab::ImportExport::MergeRequestParser when the merge request has diffs when the diff is invalid sets the diff to nil
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:43 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores models based on JSON
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:47 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restore correct project features
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:57 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the project description
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:61 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the same label associated to two issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:65 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has milestones associated to two separate issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:89 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON creates a valid pipeline note
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:93 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON pipeline has the correct user ID
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:97 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores pipelines with missing ref
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:101 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores pipeline for merge request
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:112 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON preserves updated_at on issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:118 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has multiple issue assignees
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:123 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON contains the merge access levels on a protected branch
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:127 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON contains the push access levels on a protected branch
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:131 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON contains the create access levels on a protected tag
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:135 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores issue resource label events
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:139 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores merge requests resource label events
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:143 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores suggestion
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:166 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the correct data for merge request diff files
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:170 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the correct data for merge request diff commits
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:174 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has the correct data for merge request latest_merge_request_diff
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:180 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has labels associated to label links, associated to issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:184 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has project labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:188 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has no group labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:192 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has issue boards
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:196 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has lists associated with the issue board
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:200 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has a project feature
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:204 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has custom attributes
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:208 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has badges
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:212 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has snippets
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:216 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has award emoji for a snippet
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:222 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores `ci_cd_settings` : `group_runners_enabled` setting
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:226 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores the correct service
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:230 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores zoom meetings
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:237 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores sentry issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:243 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON restores container_expiration_policy
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:71 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when importing a project with cached_markdown_version and note_html for an Issue does not import note_html
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:80 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when importing a project with cached_markdown_version and note_html for a Merge Request does not import note_html
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:153 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON event at forth level of the tree restores the event
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:157 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON event at forth level of the tree has the action
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:161 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON event at forth level of the tree event belongs to note, belongs to merge request, belongs to a project
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:254 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests always has the new project as a target
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:258 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests has the same source project as originally if source/target are the same
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:262 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests has the new project as target if source/target differ
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:266 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON Merge requests has no source if source/target differ
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:272 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON tokens are regenerated has new CI trigger tokens
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:277 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON tokens are regenerated has a new CI build token
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:283 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has restored the correct number of records has the correct number of merge requests
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:287 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has restored the correct number of records only restores valid triggers
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:291 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON has restored the correct number of records has the correct number of pipelines and statuses
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:302 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores pipelines
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:306 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores pipeline stages
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:310 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs correctly restores association between stage and a pipeline
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:314 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores statuses
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:318 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs correctly restores association between a stage and a job
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:322 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs correctly restores association between a pipeline and a job
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:326 # Gitlab::ImportExport::ProjectTreeRestorer restore project tree JSON when restoring hierarchy of pipeline, stages and jobs restores a Hash for CommitStatus options
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:355 # Gitlab::ImportExport::ProjectTreeRestorer project.json file access check does not read a symlink
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:1] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully restores the project
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:2] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:3] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has label priorities
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:4] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has milestones
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:5] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully has issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:6] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully does not set params that are excluded from import_export settings
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:1:7] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project behaves like restores project successfully records exact number of import failures
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:1] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully restores the project
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:2] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:3] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has label priorities
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:4] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has milestones
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:5] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully has issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:6] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully does not set params that are excluded from import_export settings
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:1:2:1:7] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a simple project when there is an existing build with build token behaves like restores project successfully records exact number of import failures
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:405 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data handles string versions of visibility_level
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:417 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data overwrites the params stored in the JSON
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:424 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data does not allow setting params that are excluded from import_export settings
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:431 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON when the project has overridden params in import data overrides project feature access levels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:480 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group restores issue states
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:1] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully restores the project
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:2] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:3] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has label priorities
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:4] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has milestones
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:5] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully has issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:6] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully does not set params that are excluded from import_export settings
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:3:3:1:7] # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores project successfully records exact number of import failures
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:334 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores group correctly has group label
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:339 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores group correctly has group milestone
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:343 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with a project that has a group behaves like restores group correctly has the correct visibility level
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:500 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with existing group models does not import any templated services
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:506 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with existing group models imports labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:515 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with existing group models imports milestones
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:540 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with clashing milestones on IID preserves the project milestone IID
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:555 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with external authorization classification labels converts empty external classification authorization labels to nil
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:562 # Gitlab::ImportExport::ProjectTreeRestorer Light JSON with external authorization classification labels preserves valid external classification authorization labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:584 # Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON no group visibility uses the project visibility
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:594 # Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with restricted internal visibility internal project uses private visibility
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:614 # Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility private group visibility uses the group visibility
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:624 # Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility public group visibility uses the project visibility
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:634 # Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility internal group visibility uses the group visibility
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:640 # Gitlab::ImportExport::ProjectTreeRestorer Minimal JSON with group visibility internal group visibility with restricted internal visibility sets private visibility
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb:677 # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed records the failures in the database
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:1] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully restores the project
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:2] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has labels
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:3] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has label priorities
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:4] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has milestones
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:5] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully has issues
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:6] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully does not set params that are excluded from import_export settings
rspec ./spec/lib/gitlab/import_export/project_tree_restorer_spec.rb[1:5:1:1:7] # Gitlab::ImportExport::ProjectTreeRestorer JSON with invalid records when failures occur because a relation fails to be processed behaves like restores project successfully records exact number of import failures
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:24 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object saves project successfully
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:48 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is enabled uses FastHashSerializer
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:65 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object :export_fast_serialize feature flag checks when :export_fast_serialize feature is disabled is serialized via built-in `as_json`
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:96 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON saves the correct json
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:100 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has approvals_before_merge set
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:104 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has milestones
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:108 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge requests
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:112 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request's milestones
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:116 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request's source branch SHA
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:120 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request's target branch SHA
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:124 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has events
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:128 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has snippets
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:132 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has snippet notes
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:136 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has releases
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:140 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has no author on releases
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:144 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has the author ID on releases
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:148 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issues
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:152 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issue comments
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:159 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issue assignees
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:163 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has author on issue comments
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:167 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has project members
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:171 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge requests diffs
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:175 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request diff files
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:179 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request diff commits
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:183 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge requests comments
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:187 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has author on merge requests comments
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:191 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline stages
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:195 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline statuses
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:199 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline builds
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:207 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has no when YML attributes but only the DB column
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:213 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has pipeline commits
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:217 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has ci pipeline notes
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:221 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has labels with no associations
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:225 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has labels associated to records
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:229 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has project and group labels
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:235 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has priorities associated to labels
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:241 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has issue resource label events
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:245 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has merge request resource label events
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:249 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON saves the correct service type
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:253 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON saves the properties for a service
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:257 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has project feature
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:265 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has custom attributes
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:269 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has badges
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:273 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON does not complain about non UTF-8 characters in MR diff files
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:330 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON has a board and a list
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:91 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON with description override overrides the project description
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:291 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members does not export group members if it has no permission
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:297 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members does not export group members as maintainer
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:303 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members exports group members as group owner
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:312 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members as admin exports group members as admin
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:316 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON group members as admin exports group members as project members
rspec ./spec/lib/gitlab/import_export/project_tree_saver_spec.rb:325 # Gitlab::ImportExport::ProjectTreeSaver saves the project tree into a json object JSON project attributes does not contain the runners token
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:49 # Gitlab::ImportExport::RelationFactory hook object does not have the original ID
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:53 # Gitlab::ImportExport::RelationFactory hook object does not have the original service_id
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:57 # Gitlab::ImportExport::RelationFactory hook object does not have the original project_id
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:61 # Gitlab::ImportExport::RelationFactory hook object has the new project_id
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:65 # Gitlab::ImportExport::RelationFactory hook object has a nil token
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:72 # Gitlab::ImportExport::RelationFactory hook object original service exists does not have the original service_id
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:80 # Gitlab::ImportExport::RelationFactory hook object excluded attributes are removed from the imported object
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:121 # Gitlab::ImportExport::RelationFactory Potentially hazardous foreign keys does not preserve any foreign key IDs
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:140 # Gitlab::ImportExport::RelationFactory overrided model with pluralized name does not raise errors
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:155 # Gitlab::ImportExport::RelationFactory Project references does not preserve any project foreign key IDs
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:209 # Gitlab::ImportExport::RelationFactory Notes user references maps the right author to the imported note
rspec ./spec/lib/gitlab/import_export/relation_factory_spec.rb:220 # Gitlab::ImportExport::RelationFactory encrypted attributes has no value for the encrypted attribute
rspec ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:45 # Gitlab::ImportExport::RelationRenameService when importing when the file has only old relationship names renames old relationships to the new name
rspec ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:65 # Gitlab::ImportExport::RelationRenameService when importing when the file has both the old and new relationships uses the new relationships and removes the old ones from the hash
rspec ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:85 # Gitlab::ImportExport::RelationRenameService when importing when the file has only new relationship names uses the new relationships
rspec ./spec/lib/gitlab/import_export/relation_rename_service_spec.rb:110 # Gitlab::ImportExport::RelationRenameService when exporting adds old relationships to the exported file
rspec ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:45 # Gitlab::ImportExport::RelationTreeRestorer when restoring a project restores project tree
rspec ./spec/lib/gitlab/import_export/relation_tree_restorer_spec.rb:56 # Gitlab::ImportExport::RelationTreeRestorer when restoring a project imported project has the project attributes and relations
rspec ./spec/lib/gitlab/import_export/repo_restorer_spec.rb:38 # Gitlab::ImportExport::RepoRestorer bundle a project Git repo restores the repo successfully
rspec ./spec/lib/gitlab/import_export/repo_saver_spec.rb:24 # Gitlab::ImportExport::RepoSaver bundle a project Git repo bundles the repo successfully
rspec ./spec/lib/gitlab/import_export/repo_saver_spec.rb:31 # Gitlab::ImportExport::RepoSaver bundle a project Git repo when the repo is empty bundles the repo successfully
rspec ./spec/lib/gitlab/import_export/saver_spec.rb:26 # Gitlab::ImportExport::Saver saves the repo using object storage
rspec ./spec/lib/gitlab/import_export/shared_spec.rb:16 # Gitlab::ImportExport::Shared with a repository on disk #archive_path uses a random hash to avoid conflicts
rspec ./spec/lib/gitlab/import_export/shared_spec.rb:20 # Gitlab::ImportExport::Shared with a repository on disk #archive_path memoizes the path
rspec ./spec/lib/gitlab/import_export/shared_spec.rb:28 # Gitlab::ImportExport::Shared with a repository on disk #export_path uses a random hash relative to project path
rspec ./spec/lib/gitlab/import_export/shared_spec.rb:32 # Gitlab::ImportExport::Shared with a repository on disk #export_path memoizes the path
rspec ./spec/lib/gitlab/import_export/shared_spec.rb:49 # Gitlab::ImportExport::Shared#error updates the import JID
rspec ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:33 # Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored does not cause errors
rspec ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:39 # Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored copies the file in the correct location when there is an upload
rspec ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:58 # Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored with orphaned project upload files excludes orphaned upload files
rspec ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:70 # Gitlab::ImportExport::UploadsManager#save when the project has uploads locally stored with an upload missing its file does not cause errors
rspec ./spec/lib/gitlab/import_export/uploads_manager_spec.rb:87 # Gitlab::ImportExport::UploadsManager#restore restores the file
rspec ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:27 # Gitlab::ImportExport::UploadsRestorer bundle a project Git repo legacy storage saves the uploads successfully
rspec ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:31 # Gitlab::ImportExport::UploadsRestorer bundle a project Git repo legacy storage copies the uploads to the project path
rspec ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:43 # Gitlab::ImportExport::UploadsRestorer bundle a project Git repo hashed storage saves the uploads successfully
rspec ./spec/lib/gitlab/import_export/uploads_restorer_spec.rb:47 # Gitlab::ImportExport::UploadsRestorer bundle a project Git repo hashed storage copies the uploads to the project path
rspec ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:30 # Gitlab::ImportExport::UploadsSaver bundle a project Git repo legacy storage saves the uploads successfully
rspec ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:34 # Gitlab::ImportExport::UploadsSaver bundle a project Git repo legacy storage copies the uploads to the export path
rspec ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:52 # Gitlab::ImportExport::UploadsSaver bundle a project Git repo hashed storage saves the uploads successfully
rspec ./spec/lib/gitlab/import_export/uploads_saver_spec.rb:56 # Gitlab::ImportExport::UploadsSaver bundle a project Git repo hashed storage copies the uploads to the export path
rspec ./spec/lib/gitlab/import_export/wiki_repo_saver_spec.rb:27 # Gitlab::ImportExport::WikiRepoSaver bundle a wiki Git repo bundles the repo successfully
rspec ./spec/lib/gitlab/import_export/wiki_repo_saver_spec.rb:34 # Gitlab::ImportExport::WikiRepoSaver bundle a wiki Git repo when the repo is empty bundles the repo successfully
rspec ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:33 # Gitlab::ImportExport::WikiRestorer restore a wiki Git repo restores the wiki repo successfully
rspec ./spec/lib/gitlab/import_export/wiki_restorer_spec.rb:40 # Gitlab::ImportExport::WikiRestorer restore a wiki Git repo no wiki in the bundle creates an empty wiki
rspec ./spec/lib/gitlab/issuable_metadata_spec.rb:11 # Gitlab::IssuableMetadata returns an empty Hash if an empty collection is provided
rspec ./spec/lib/gitlab/issuable_metadata_spec.rb:15 # Gitlab::IssuableMetadata raises an error when given a collection with no limit
rspec ./spec/lib/gitlab/issuable_metadata_spec.rb:27 # Gitlab::IssuableMetadata issues aggregates stats on issues
rspec ./spec/lib/gitlab/issuable_metadata_spec.rb:50 # Gitlab::IssuableMetadata merge requests aggregates stats on merge requests
rspec ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:14 # Gitlab::Kubernetes::DefaultNamespace#from_environment_name generates a slug and passes it to #from_environment_slug
rspec ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:39 # Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is enabled platform namespace is specified 
rspec ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:44 # Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is enabled platform namespace is specified cluster is unmanaged 
rspec ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:52 # Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is enabled platform namespace is blank constructs a namespace from the project and environment
rspec ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:68 # Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is disabled platform namespace is specified 
rspec ./spec/lib/gitlab/kubernetes/default_namespace_spec.rb:75 # Gitlab::Kubernetes::DefaultNamespace#from_environment_slug namespace per environment is disabled platform namespace is blank constructs a namespace from the project and environment
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:1:1:1] # Gitlab::Kubernetes::KubeClient core API #get_pods api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:2:1:1] # Gitlab::Kubernetes::KubeClient core API #get_secrets api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:3:1:1] # Gitlab::Kubernetes::KubeClient core API #get_config_map api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:4:1:1] # Gitlab::Kubernetes::KubeClient core API #get_pod api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:5:1:1] # Gitlab::Kubernetes::KubeClient core API #get_namespace api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:6:1:1] # Gitlab::Kubernetes::KubeClient core API #get_secret api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:7:1:1] # Gitlab::Kubernetes::KubeClient core API #get_service api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:8:1:1] # Gitlab::Kubernetes::KubeClient core API #get_service_account api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:9:1:1] # Gitlab::Kubernetes::KubeClient core API #delete_namespace api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:10:1:1] # Gitlab::Kubernetes::KubeClient core API #delete_pod api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:11:1:1] # Gitlab::Kubernetes::KubeClient core API #delete_service_account api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:12:1:1] # Gitlab::Kubernetes::KubeClient core API #create_config_map api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:13:1:1] # Gitlab::Kubernetes::KubeClient core API #create_namespace api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:14:1:1] # Gitlab::Kubernetes::KubeClient core API #create_pod api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:15:1:1] # Gitlab::Kubernetes::KubeClient core API #create_secret api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:16:1:1] # Gitlab::Kubernetes::KubeClient core API #create_service_account api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:17:1:1] # Gitlab::Kubernetes::KubeClient core API #update_config_map api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:18:1:1] # Gitlab::Kubernetes::KubeClient core API #update_secret api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:6:19:1:1] # Gitlab::Kubernetes::KubeClient core API #update_service_account api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:7:1:1:1] # Gitlab::Kubernetes::KubeClient rbac API group #create_role api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:7:2:1:1] # Gitlab::Kubernetes::KubeClient rbac API group #get_role api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:7:3:1:1] # Gitlab::Kubernetes::KubeClient rbac API group #update_role api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:7:4:1:1] # Gitlab::Kubernetes::KubeClient rbac API group #create_cluster_role_binding api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:7:5:1:1] # Gitlab::Kubernetes::KubeClient rbac API group #get_cluster_role_binding api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:7:6:1:1] # Gitlab::Kubernetes::KubeClient rbac API group #update_cluster_role_binding api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/kubernetes/kube_client_spec.rb[1:8:1:1:1] # Gitlab::Kubernetes::KubeClient extensions API group #get_deployments api_url is redirected does not follow redirects
rspec ./spec/lib/gitlab/language_detection_spec.rb:29 # Gitlab::LanguageDetection#languages returns the language names
rspec ./spec/lib/gitlab/language_detection_spec.rb:40 # Gitlab::LanguageDetection#insertions only includes new languages
rspec ./spec/lib/gitlab/language_detection_spec.rb:51 # Gitlab::LanguageDetection#updates updates the share of languages
rspec ./spec/lib/gitlab/language_detection_spec.rb:59 # Gitlab::LanguageDetection#updates does not include languages to be removed
rspec ./spec/lib/gitlab/language_detection_spec.rb:70 # Gitlab::LanguageDetection#updates when silent writes occur doesn't include them in the result
rspec ./spec/lib/gitlab/language_detection_spec.rb:82 # Gitlab::LanguageDetection#deletions lists undetected languages
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:18 # Gitlab::LegacyGithubImport::BranchFormatter#exists? returns true when branch exists and commit is part of the branch
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:24 # Gitlab::LegacyGithubImport::BranchFormatter#exists? returns false when branch exists and commit is not part of the branch
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:30 # Gitlab::LegacyGithubImport::BranchFormatter#exists? returns false when branch does not exist
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:38 # Gitlab::LegacyGithubImport::BranchFormatter#repo returns raw repo
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:46 # Gitlab::LegacyGithubImport::BranchFormatter#sha returns raw sha
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:54 # Gitlab::LegacyGithubImport::BranchFormatter#valid? returns true when raw sha and ref are present
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:60 # Gitlab::LegacyGithubImport::BranchFormatter#valid? returns false when raw sha is blank
rspec ./spec/lib/gitlab/legacy_github_import/branch_formatter_spec.rb:66 # Gitlab::LegacyGithubImport::BranchFormatter#valid? returns false when raw ref is blank
rspec ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:32 # Gitlab::LegacyGithubImport::CommentFormatter#attributes when do not reference a portion of the diff returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:60 # Gitlab::LegacyGithubImport::CommentFormatter#attributes when on a portion of the diff returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:79 # Gitlab::LegacyGithubImport::CommentFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
rspec ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:85 # Gitlab::LegacyGithubImport::CommentFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
rspec ./spec/lib/gitlab/legacy_github_import/comment_formatter_spec.rb:91 # Gitlab::LegacyGithubImport::CommentFormatter#attributes when author is a GitLab user returns note without created at tag line
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:1:1:1] # Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute calls import methods
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:1:2:1] # Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs returns true
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:1:2:2] # Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs does not raise an error
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:1:2:3] # Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs stores error messages
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:1:3:1:1:1] # Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request stills open does not remove branches
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:1:3:1:2:1] # Gitlab::LegacyGithubImport::Importer when importing a GitHub project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request is closed does remove branches
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:276 # Gitlab::LegacyGithubImport::Importer when importing a GitHub project #client instantiates a Client
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:2:1:1] # Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute calls import methods
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:2:2:1] # Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs returns true
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:2:2:2] # Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs does not raise an error
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:2:2:3] # Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport::Importer#execute an error occurs stores error messages
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:2:3:1:1:1] # Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request stills open does not remove branches
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb[1:2:3:1:2:1] # Gitlab::LegacyGithubImport::Importer when importing a Gitea project behaves like Gitlab::LegacyGithubImport unit-testing #clean_up_restored_branches when pull request is closed does remove branches
rspec ./spec/lib/gitlab/legacy_github_import/importer_spec.rb:305 # Gitlab::LegacyGithubImport::Importer when importing a Gitea project #client instantiates a Client
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:1:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is open returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:2:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is closed returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:3:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:3:2] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:3:3] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:4:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns nil when milestone does not exist
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:4:2] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns milestone when it exists
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:5:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:5:2] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:5:3] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:1:5:4] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns description without created at tag line
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:1:2:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::IssueFormatter#number returns issue number
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:1:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is open returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:2:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when issue is closed returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:3:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:3:2] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:3:3] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:4:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns nil when milestone does not exist
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:4:2] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when it has a milestone returns milestone when it exists
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:5:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:5:2] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:5:3] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:1:5:4] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#attributes when author is a GitLab user returns description without created at tag line
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb[1:2:2:1] # Gitlab::LegacyGithubImport::IssueFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::IssueFormatter#number returns issue number
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:166 # Gitlab::LegacyGithubImport::IssueFormatter#has_comments? when number of comments is greater than zero returns true
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:174 # Gitlab::LegacyGithubImport::IssueFormatter#has_comments? when number of comments is equal to zero returns false
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:184 # Gitlab::LegacyGithubImport::IssueFormatter#pull_request? when mention a pull request returns true
rspec ./spec/lib/gitlab/legacy_github_import/issue_formatter_spec.rb:192 # Gitlab::LegacyGithubImport::IssueFormatter#pull_request? when does not mention a pull request returns false
rspec ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:12 # Gitlab::LegacyGithubImport::LabelFormatter#attributes returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:23 # Gitlab::LegacyGithubImport::LabelFormatter#create! when label does not exist creates a new label
rspec ./spec/lib/gitlab/legacy_github_import/label_formatter_spec.rb:29 # Gitlab::LegacyGithubImport::LabelFormatter#create! when label exists does not create a new label
rspec ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb[1:1:1:1:1] # Gitlab::LegacyGithubImport::MilestoneFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is open returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb[1:1:1:2:1] # Gitlab::LegacyGithubImport::MilestoneFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is closed returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb[1:1:1:3:1] # Gitlab::LegacyGithubImport::MilestoneFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone has a due date returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb[1:2:1:1:1] # Gitlab::LegacyGithubImport::MilestoneFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is open returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb[1:2:1:2:1] # Gitlab::LegacyGithubImport::MilestoneFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone is closed returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/milestone_formatter_spec.rb[1:2:1:3:1] # Gitlab::LegacyGithubImport::MilestoneFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::MilestoneFormatter#attributes when milestone has a due date returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:29 # Gitlab::LegacyGithubImport::ProjectCreator#execute creates a project
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:33 # Gitlab::LegacyGithubImport::ProjectCreator#execute handle GitHub credentials
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:42 # Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project is private sets project visibility to private
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:52 # Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project is public sets project visibility to namespace visibility level
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:62 # Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project is public when importing into a user namespace sets project visibility to user namespace visibility level
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:78 # Gitlab::LegacyGithubImport::ProjectCreator#execute when visibility level is restricted when GitHub project is private sets project visibility to the default project visibility
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:93 # Gitlab::LegacyGithubImport::ProjectCreator#execute when visibility level is restricted when GitHub project is public sets project visibility to the default project visibility
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:104 # Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project has wiki does not create the wiki repository
rspec ./spec/lib/gitlab/legacy_github_import/project_creator_spec.rb:114 # Gitlab::LegacyGithubImport::ProjectCreator#execute when GitHub project does not have wiki creates the wiki repository
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:1:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is open returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is closed returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:3:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is merged returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:4:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:4:2] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:4:3] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:5:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:5:2] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:5:3] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:5:4] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns description without created at tag line
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:6:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns nil when milestone does not exist
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:1:6:2] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns milestone when it exists
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#number returns pull request number
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:3:1:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch exists returns branch ref
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:3:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:3:3:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:3:4:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a deleted fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:4:1:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch exists returns branch ref
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:1:4:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a GitHub project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:1:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is open returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is closed returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:3:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when pull request is merged returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:4:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns nil as assignee_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:4:2] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub id as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:4:3] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it is assigned to someone returns GitLab user id associated with GitHub email as assignee_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:5:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns project creator_id as author_id when is not a GitLab user
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:5:2] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub id as author_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:5:3] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns GitLab user id associated with GitHub email as author_id
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:5:4] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when author is a GitLab user returns description without created at tag line
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:6:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns nil when milestone does not exist
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:1:6:2] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#attributes when it has a milestone returns milestone when it exists
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#number returns pull request number
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:3:1:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch exists returns branch ref
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:3:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:3:3:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:3:4:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_name when source branch is from a deleted fork prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:4:1:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch exists returns branch ref
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb[1:2:4:2:1] # Gitlab::LegacyGithubImport::PullRequestFormatter when importing a Gitea project behaves like Gitlab::LegacyGithubImport::PullRequestFormatter#target_branch_name when target branch does not exist prefixes branch name with gh-:short_sha/:number/:user pattern to avoid collision
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:276 # Gitlab::LegacyGithubImport::PullRequestFormatter#valid? when source, and target repos are not a fork returns true
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:285 # Gitlab::LegacyGithubImport::PullRequestFormatter#valid? when source repo is a fork returns true
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:294 # Gitlab::LegacyGithubImport::PullRequestFormatter#valid? when target repo is a fork returns true
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:304 # Gitlab::LegacyGithubImport::PullRequestFormatter#cross_project? when source and target repositories are different returns true
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:312 # Gitlab::LegacyGithubImport::PullRequestFormatter#cross_project? when source repository does not exist anymore returns true
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:320 # Gitlab::LegacyGithubImport::PullRequestFormatter#cross_project? when source and target repositories are the same returns false
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:329 # Gitlab::LegacyGithubImport::PullRequestFormatter#source_branch_exists? returns false when is a cross_project
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:337 # Gitlab::LegacyGithubImport::PullRequestFormatter#url return raw url
rspec ./spec/lib/gitlab/legacy_github_import/pull_request_formatter_spec.rb:345 # Gitlab::LegacyGithubImport::PullRequestFormatter#opened? returns true when state is "open"
rspec ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:27 # Gitlab::LegacyGithubImport::ReleaseFormatter#attributes returns formatted attributes
rspec ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:44 # Gitlab::LegacyGithubImport::ReleaseFormatter#attributes with a nil published_at date inserts a timestamp for released_at
rspec ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:54 # Gitlab::LegacyGithubImport::ReleaseFormatter#valid when release is not a draft returns true
rspec ./spec/lib/gitlab/legacy_github_import/release_formatter_spec.rb:62 # Gitlab::LegacyGithubImport::ReleaseFormatter#valid when release is draft returns false
rspec ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:15 # Gitlab::LegacyGithubImport::WikiFormatter#disk_path appends .wiki to disk path
rspec ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:21 # Gitlab::LegacyGithubImport::WikiFormatter#full_path appends .wiki to project path
rspec ./spec/lib/gitlab/legacy_github_import/wiki_formatter_spec.rb:27 # Gitlab::LegacyGithubImport::WikiFormatter#import_url returns URL of the wiki repository
rspec ./spec/lib/gitlab/lfs_token_spec.rb:168 # Gitlab::LfsToken#deploy_key_pushable? when actor is not a DeployKey returns false
rspec ./spec/lib/gitlab/lfs_token_spec.rb:181 # Gitlab::LfsToken#deploy_key_pushable? when actor is a DeployKey but the DeployKey cannot push to the project returns false
rspec ./spec/lib/gitlab/lfs_token_spec.rb:189 # Gitlab::LfsToken#deploy_key_pushable? when actor is a DeployKey and the DeployKey can push to the project returns true
rspec ./spec/lib/gitlab/manifest_import/project_creator_spec.rb:23 # Gitlab::ManifestImport::ProjectCreator#execute should change `Project.count` by 1
rspec ./spec/lib/gitlab/manifest_import/project_creator_spec.rb:26 # Gitlab::ManifestImport::ProjectCreator#execute creates project with valid full path and import url
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:20 # Gitlab::Metrics::Dashboard::Finder.find behaves like misconfigured dashboard service response returns an appropriate message and status code
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:25 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard exists behaves like valid dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:31 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is configured incorrectly behaves like misconfigured dashboard service response returns an appropriate message and status code
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:38 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard contains a metric without a query behaves like misconfigured dashboard service response returns an appropriate message and status code
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:44 # Gitlab::Metrics::Dashboard::Finder.find when the system dashboard is specified behaves like valid dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:50 # Gitlab::Metrics::Dashboard::Finder.find when no dashboard is specified behaves like valid dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:57 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:62 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when params are incomplete behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:78 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a custom metric behaves like misconfigured dashboard service response returns an appropriate message and status code
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:85 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a custom metric when the metric exists behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:102 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a project-defined panel behaves like misconfigured dashboard service response returns an appropriate message and status code
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:107 # Gitlab::Metrics::Dashboard::Finder.find when the dashboard is expected to be embedded when the panel is specified as a project-defined panel when the metric exists behaves like valid embedded dashboard service response behaves like valid dashboard service response for schema returns a json representation of the dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:120 # Gitlab::Metrics::Dashboard::Finder.find_raw 
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:125 # Gitlab::Metrics::Dashboard::Finder.find_raw when the system dashboard is specified 
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:133 # Gitlab::Metrics::Dashboard::Finder.find_raw when an existing project dashboard is specified 
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:141 # Gitlab::Metrics::Dashboard::Finder.find_all_paths includes only the system dashboard by default
rspec ./spec/lib/gitlab/metrics/dashboard/finder_spec.rb:149 # Gitlab::Metrics::Dashboard::Finder.find_all_paths when the project contains dashboards includes system and project dashboards
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:22 # Gitlab::Metrics::Dashboard::Processor process includes a path for the prometheus endpoint with each metric
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:31 # Gitlab::Metrics::Dashboard::Processor process when the dashboard is not present returns nil
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:39 # Gitlab::Metrics::Dashboard::Processor process when dashboard config corresponds to common metrics inserts metric ids into the config
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:52 # Gitlab::Metrics::Dashboard::Processor process when the project has associated metrics includes project-specific metrics
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:58 # Gitlab::Metrics::Dashboard::Processor process when the project has associated metrics orders groups by priority and panels by weight
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb:82 # Gitlab::Metrics::Dashboard::Processor process when the project has associated metrics when the dashboard should not include project metrics includes only dashboard metrics
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb[1:1:5:1:1] # Gitlab::Metrics::Dashboard::Processor process when the dashboard is missing panel_groups behaves like errors with message raises a DashboardLayoutError
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb[1:1:6:1:1] # Gitlab::Metrics::Dashboard::Processor process when the dashboard contains a panel_group which is missing panels behaves like errors with message raises a DashboardLayoutError
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb[1:1:7:1:1] # Gitlab::Metrics::Dashboard::Processor process when the dashboard contains a panel which is missing metrics behaves like errors with message raises a DashboardLayoutError
rspec ./spec/lib/gitlab/metrics/dashboard/processor_spec.rb[1:1:8:1:1] # Gitlab::Metrics::Dashboard::Processor process when the dashboard contains a metric which is missing a query behaves like errors with message raises a DashboardLayoutError
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb:28 # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the query and resources are configured correctly generates a gitlab-yml formatted dashboard
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:1:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the datasource is not proxyable behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:2:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when query param "panelId" is not specified behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:3:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when query param "from" is not specified behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:4:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when query param "to" is not specified behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:5:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the panel is not a graph behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:6:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the panel is not a line graph behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:7:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the query dashboard includes undefined variables behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/metrics/dashboard/stages/grafana_formatter_spec.rb[1:1:2:8:1:1] # Gitlab::Metrics::Dashboard::Stages::GrafanaFormatter#transform! when the inputs are invalid when the expression contains unsupported global variables behaves like processing error raises a processing error
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with simple 2-segment project path with subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:1:2:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with simple 2-segment project path without subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:1:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:1:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:1:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:1:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:1:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:2:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:2:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:2:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:2:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:2:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:3:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:3:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:3:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:3:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:3:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:2:3:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:4:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a public project without a repository returns 404
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:1:5:1] # Gitlab::Middleware::Go#call when go-get=1 with SSH disabled with a non-standard head returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with simple 2-segment project path with subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:1:2:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with simple 2-segment project path without subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:1:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:1:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:1:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:1:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:1:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:2:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:2:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:2:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:2:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:2:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:3:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:3:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:3:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:3:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:3:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:2:3:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:4:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a public project without a repository returns 404
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:2:5:1] # Gitlab::Middleware::Go#call when go-get=1 with HTTP disabled with a non-standard head returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with simple 2-segment project path with subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:1:2:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with simple 2-segment project path without subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:1:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:1:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:1:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:1:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:1:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:2:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:2:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:2:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:2:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:2:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:3:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:3:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:3:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:3:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:3:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:2:3:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:4:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a public project without a repository returns 404
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:3:5:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled with a non-standard head returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with simple 2-segment project path with subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:1:2:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with simple 2-segment project path without subpackages returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:1:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:1:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:1:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:1:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:1:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:2:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:2:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:2:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:2:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:2:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path with a subpackage that is not a valid project path behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:3:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is public returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:3:1:2:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when not authenticated behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:3:1:2:2:1:1:1:1:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with access to the project returns the full project path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:3:1:2:2:1:1:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated without access to the project behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:3:1:2:2:1:1:1:1:3:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with api scope behaves like authenticated with user is blocked behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:2:3:1:2:2:1:1:2:1:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a nested project path without subpackages behaves like a nested project when the project is private when authenticated using basic auth using a personal access token with read_user scope behaves like unauthorized returns the 2-segment group path
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:4:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a public project without a repository returns 404
rspec ./spec/lib/gitlab/middleware/go_spec.rb[1:1:2:4:5:1] # Gitlab::Middleware::Go#call when go-get=1 with nothing disabled (blank string) with a non-standard head returns the full project path
rspec ./spec/lib/gitlab/multi_collection_paginator_spec.rb:8 # Gitlab::MultiCollectionPaginator combines both collections
rspec ./spec/lib/gitlab/multi_collection_paginator_spec.rb:25 # Gitlab::MultiCollectionPaginator with a full first page knows the total count of the collection
rspec ./spec/lib/gitlab/multi_collection_paginator_spec.rb:29 # Gitlab::MultiCollectionPaginator with a full first page fills the first page with elements of the first collection
rspec ./spec/lib/gitlab/multi_collection_paginator_spec.rb:33 # Gitlab::MultiCollectionPaginator with a full first page fils the second page with a mixture of the first & second collection
rspec ./spec/lib/gitlab/multi_collection_paginator_spec.rb:42 # Gitlab::MultiCollectionPaginator with a full first page fils the last page with elements from the second collection
rspec ./spec/lib/gitlab/noteable_metadata_spec.rb:21 # Gitlab::NoteableMetadata snippets aggregates stats on snippets
rspec ./spec/lib/gitlab/optimistic_locking_spec.rb:10 # Gitlab::OptimisticLocking#retry_lock does not reload object if state changes
rspec ./spec/lib/gitlab/optimistic_locking_spec.rb:19 # Gitlab::OptimisticLocking#retry_lock retries action if exception is raised
rspec ./spec/lib/gitlab/optimistic_locking_spec.rb:30 # Gitlab::OptimisticLocking#retry_lock raises exception when too many retries
rspec ./spec/lib/gitlab/optimistic_locking_spec.rb:48 # Gitlab::OptimisticLocking#retry_optimistic_lock when locking module is mixed in is an alias for retry_lock
rspec ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:18 # Gitlab::Pagination::Keyset::Pager#paginate loads the result relation only once
rspec ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:24 # Gitlab::Pagination::Keyset::Pager#paginate passes information about next page to request
rspec ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:56 # Gitlab::Pagination::Keyset::Pager#paginate returns an array with the loaded records
rspec ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:35 # Gitlab::Pagination::Keyset::Pager#paginate when retrieving the last page indicates this is the last page
rspec ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:47 # Gitlab::Pagination::Keyset::Pager#paginate when retrieving an empty page indicates this is the last page
rspec ./spec/lib/gitlab/pagination/keyset/pager_spec.rb:63 # Gitlab::Pagination::Keyset::Pager#paginate validating the order clause raises an error if has a different order clause than the page
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:1:1:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is unset behaves like paginated response returns appropriate amount of resources
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:1:1:2] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is unset behaves like paginated response executes only one SELECT COUNT query
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:1:2:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is unset behaves like response with pagination headers adds appropriate headers
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:2:1:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is disabled behaves like paginated response returns appropriate amount of resources
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:2:1:2] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is disabled behaves like paginated response executes only one SELECT COUNT query
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:2:2:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is disabled behaves like response with pagination headers adds appropriate headers
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:3:1:1:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is less than MAX_COUNT_LIMIT behaves like paginated response returns appropriate amount of resources
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:3:1:1:2] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is less than MAX_COUNT_LIMIT behaves like paginated response executes only one SELECT COUNT query
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:3:1:2:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is less than MAX_COUNT_LIMIT behaves like response with pagination headers adds appropriate headers
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:104 # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is more than MAX_COUNT_LIMIT does not return the X-Total and X-Total-Pages headers
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:3:2:1:1] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is more than MAX_COUNT_LIMIT behaves like paginated response returns appropriate amount of resources
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb[1:1:1:1:3:2:1:2] # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated first page when the api_kaminari_count_with_limit feature flag is enabled when resources count is more than MAX_COUNT_LIMIT behaves like paginated response executes only one SELECT COUNT query
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:128 # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated second page returns appropriate amount of resources
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:132 # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated second page adds appropriate headers
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:152 # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated if order is not present it adds default order(:id) if no order is present
rspec ./spec/lib/gitlab/pagination/offset_pagination_spec.rb:163 # Gitlab::Pagination::OffsetPagination#paginate when resource can be paginated if order is present it does not add anything
rspec ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:42 # Gitlab::PhabricatorImport::BaseWorker#perform does not do anything when the import is not in progress
rspec ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:50 # Gitlab::PhabricatorImport::BaseWorker#perform calls import for the project
rspec ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:56 # Gitlab::PhabricatorImport::BaseWorker#perform marks the project as imported if there was only one job running
rspec ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:62 # Gitlab::PhabricatorImport::BaseWorker#perform does not mark the job as finished when there are more scheduled jobs
rspec ./spec/lib/gitlab/phabricator_import/base_worker_spec.rb:70 # Gitlab::PhabricatorImport::BaseWorker#perform decrements the job counter
rspec ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:12 # Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model returns nil if there was nothing cached for the phabricator id
rspec ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:16 # Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model returns the object if it was set in redis
rspec ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:23 # Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model extends the TTL for the cache key
rspec ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:35 # Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model sets the object in redis once if a block was given and nothing was cached
rspec ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:44 # Gitlab::PhabricatorImport::Cache::Map#get_gitlab_model does not cache `nil` objects
rspec ./spec/lib/gitlab/phabricator_import/cache/map_spec.rb:56 # Gitlab::PhabricatorImport::Cache::Map#set_gitlab_model sets the class and id in redis with a ttl
rspec ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:10 # Gitlab::PhabricatorImport::Conduit::Client#get performs and parses a request
rspec ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:20 # Gitlab::PhabricatorImport::Conduit::Client#get wraps request errors in an `ApiError`
rspec ./spec/lib/gitlab/phabricator_import/conduit/client_spec.rb:26 # Gitlab::PhabricatorImport::Conduit::Client#get raises response error
rspec ./spec/lib/gitlab/phabricator_import/import_tasks_worker_spec.rb:6 # Gitlab::PhabricatorImport::ImportTasksWorker#perform calls the correct importer
rspec ./spec/lib/gitlab/phabricator_import/importer_spec.rb:17 # Gitlab::PhabricatorImport::Importer#execute sets a custom jid that will be kept up to date
rspec ./spec/lib/gitlab/phabricator_import/importer_spec.rb:21 # Gitlab::PhabricatorImport::Importer#execute starts importing tasks
rspec ./spec/lib/gitlab/phabricator_import/importer_spec.rb:27 # Gitlab::PhabricatorImport::Importer#execute marks the import as failed when something goes wrong
rspec ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:23 # Gitlab::PhabricatorImport::Issues::Importer#execute imports each task in the response
rspec ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:44 # Gitlab::PhabricatorImport::Issues::Importer#execute stubbed task import schedules the next batch if there is one
rspec ./spec/lib/gitlab/phabricator_import/issues/importer_spec.rb:51 # Gitlab::PhabricatorImport::Issues::Importer#execute stubbed task import does not reschedule when there is no next page
rspec ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:34 # Gitlab::PhabricatorImport::Issues::TaskImporter#execute creates the issue with the expected attributes
rspec ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:47 # Gitlab::PhabricatorImport::Issues::TaskImporter#execute does not recreate the issue when called multiple times
rspec ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:54 # Gitlab::PhabricatorImport::Issues::TaskImporter#execute does not trigger a save when the object did not change
rspec ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:64 # Gitlab::PhabricatorImport::Issues::TaskImporter#execute links the author if the author can be found
rspec ./spec/lib/gitlab/phabricator_import/issues/task_importer_spec.rb:73 # Gitlab::PhabricatorImport::Issues::TaskImporter#execute links an assignee if the user can be found
rspec ./spec/lib/gitlab/phabricator_import/project_creator_spec.rb:15 # Gitlab::PhabricatorImport::ProjectCreator#execute creates a project correctly and schedule an import
rspec ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:27 # Gitlab::PhabricatorImport::UserFinder#find for a cached phid returns the existing user
rspec ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:31 # Gitlab::PhabricatorImport::UserFinder#find for a cached phid does not perform a find using the API
rspec ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:37 # Gitlab::PhabricatorImport::UserFinder#find for a cached phid excludes the phid from the request if one needs to be made
rspec ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:72 # Gitlab::PhabricatorImport::UserFinder#find when the phid is not cached loads the users from the API once
rspec ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:79 # Gitlab::PhabricatorImport::UserFinder#find when the phid is not cached adds found users to the cache
rspec ./spec/lib/gitlab/phabricator_import/user_finder_spec.rb:85 # Gitlab::PhabricatorImport::UserFinder#find when the phid is not cached only returns users that are members of the project
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:28 # Gitlab::ProjectAuthorizations user added to group and project returns the correct number of authorizations
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:32 # Gitlab::ProjectAuthorizations user added to group and project includes the correct projects
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:37 # Gitlab::ProjectAuthorizations user added to group and project includes the correct access levels
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:56 # Gitlab::ProjectAuthorizations with nested groups includes nested groups
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:60 # Gitlab::ProjectAuthorizations with nested groups inherits access levels when the user is not a member of a nested group
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:66 # Gitlab::ProjectAuthorizations with nested groups uses the greatest access level when a user is a member of a nested group
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:108 # Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is enabled group user creates proper authorizations
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:120 # Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is enabled parent group user creates proper authorizations
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:132 # Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is enabled child group user creates proper authorizations
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:150 # Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is disabled group user creates proper authorizations
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:162 # Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is disabled parent group user creates proper authorizations
rspec ./spec/lib/gitlab/project_authorizations_spec.rb:174 # Gitlab::ProjectAuthorizations with shared groups when feature flag share_group_with_group is disabled child group user creates proper authorizations
rspec ./spec/lib/gitlab/project_search_results_spec.rb:183 # Gitlab::ProjectSearchResults does not list issues on private projects
rspec ./spec/lib/gitlab/project_search_results_spec.rb:15 # Gitlab::ProjectSearchResults initialize with empty ref 
rspec ./spec/lib/gitlab/project_search_results_spec.rb:16 # Gitlab::ProjectSearchResults initialize with empty ref 
rspec ./spec/lib/gitlab/project_search_results_spec.rb:23 # Gitlab::ProjectSearchResults initialize with ref 
rspec ./spec/lib/gitlab/project_search_results_spec.rb:24 # Gitlab::ProjectSearchResults initialize with ref 
rspec ./spec/lib/gitlab/project_search_results_spec.rb:25 # Gitlab::ProjectSearchResults initialize with ref 
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:3:1:1] # Gitlab::ProjectSearchResults#formatted_count scope: "blobs", count_method: :blobs_count, expected: "1234" returns the expected formatted count
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:3:2:1] # Gitlab::ProjectSearchResults#formatted_count scope: "notes", count_method: :limited_notes_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:3:3:1] # Gitlab::ProjectSearchResults#formatted_count scope: "wiki_blobs", count_method: :wiki_blobs_count, expected: "1234" returns the expected formatted count
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:3:4:1] # Gitlab::ProjectSearchResults#formatted_count scope: "commits", count_method: :commits_count, expected: "1234" returns the expected formatted count
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:3:5:1] # Gitlab::ProjectSearchResults#formatted_count scope: "projects", count_method: :limited_projects_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:3:6:1] # Gitlab::ProjectSearchResults#formatted_count scope: "unknown", count_method: nil, expected: nil returns the expected formatted count
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:3] # Gitlab::ProjectSearchResults blob search behaves like general blob search finds by name
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:4] # Gitlab::ProjectSearchResults blob search behaves like general blob search loads all blobs for path matches in single batch
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:5] # Gitlab::ProjectSearchResults blob search behaves like general blob search finds by content
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:1:1] # Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is disabled hides blobs from members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:1:2] # Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is disabled hides blobs from non-members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:2:1] # Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is internal finds blobs for members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:1:2:2] # Gitlab::ProjectSearchResults blob search behaves like general blob search when repository is internal hides blobs from non-members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:2:1:1] # Gitlab::ProjectSearchResults blob search behaves like blob search repository ref when repository_ref exists uses it
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:2:2:1] # Gitlab::ProjectSearchResults blob search behaves like blob search repository ref when repository_ref is not present uses project repository default reference
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:4:2:3:1] # Gitlab::ProjectSearchResults blob search behaves like blob search repository ref when repository_ref is blank uses project repository default reference
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:3] # Gitlab::ProjectSearchResults wiki search behaves like general blob search finds by name
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:4] # Gitlab::ProjectSearchResults wiki search behaves like general blob search loads all blobs for path matches in single batch
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:5] # Gitlab::ProjectSearchResults wiki search behaves like general blob search finds by content
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:1:1] # Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is disabled hides wiki blobs from members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:1:2] # Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is disabled hides wiki blobs from non-members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:2:1] # Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is internal finds wiki blobs for members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:1:2:2] # Gitlab::ProjectSearchResults wiki search behaves like general blob search when wiki is internal hides wiki blobs from non-members
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:2:1:1] # Gitlab::ProjectSearchResults wiki search behaves like blob search repository ref when repository_ref exists uses it
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:2:2:1] # Gitlab::ProjectSearchResults wiki search behaves like blob search repository ref when repository_ref is not present uses wiki repository default reference
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:5:2:3:1] # Gitlab::ProjectSearchResults wiki search behaves like blob search repository ref when repository_ref is blank uses wiki repository default reference
rspec ./spec/lib/gitlab/project_search_results_spec.rb:203 # Gitlab::ProjectSearchResults confidential issues does not list project confidential issues for non project members
rspec ./spec/lib/gitlab/project_search_results_spec.rb:213 # Gitlab::ProjectSearchResults confidential issues does not list project confidential issues for project members with guest role
rspec ./spec/lib/gitlab/project_search_results_spec.rb:225 # Gitlab::ProjectSearchResults confidential issues lists project confidential issues for author
rspec ./spec/lib/gitlab/project_search_results_spec.rb:235 # Gitlab::ProjectSearchResults confidential issues lists project confidential issues for assignee
rspec ./spec/lib/gitlab/project_search_results_spec.rb:245 # Gitlab::ProjectSearchResults confidential issues lists project confidential issues for project members
rspec ./spec/lib/gitlab/project_search_results_spec.rb:257 # Gitlab::ProjectSearchResults confidential issues lists all project issues for admin
rspec ./spec/lib/gitlab/project_search_results_spec.rb:269 # Gitlab::ProjectSearchResults notes search lists notes
rspec ./spec/lib/gitlab/project_search_results_spec.rb:278 # Gitlab::ProjectSearchResults notes search doesn't list issue notes when access is restricted
rspec ./spec/lib/gitlab/project_search_results_spec.rb:287 # Gitlab::ProjectSearchResults notes search doesn't list merge_request notes when access is restricted
rspec ./spec/lib/gitlab/project_search_results_spec.rb:307 # Gitlab::ProjectSearchResults#limited_notes_count when count_limit is lower than total amount calls note finder once to get the limited amount of notes
rspec ./spec/lib/gitlab/project_search_results_spec.rb:314 # Gitlab::ProjectSearchResults#limited_notes_count when count_limit is higher than total amount calls note finder multiple times to get the limited amount of notes
rspec ./spec/lib/gitlab/project_search_results_spec.rb:397 # Gitlab::ProjectSearchResults commit search by commit message finds commit by message
rspec ./spec/lib/gitlab/project_search_results_spec.rb:403 # Gitlab::ProjectSearchResults commit search by commit message handles when no commit match
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:1:3:1:1] # Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is internal does not search if user is not authenticated
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:1:3:1:2] # Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is internal searches if user is authenticated
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:1:3:2:1] # Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private does not show commit to stranger
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:1:3:2:2:1] # Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private team access shows commit to creator
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:1:3:2:2:2] # Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private team access shows commit to master
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:1:3:2:2:3] # Gitlab::ProjectSearchResults commit search by commit message behaves like access restricted commits when project is private team access shows commit to reporter
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:1] # Gitlab::ProjectSearchResults commit search by commit hash shows commit by short hash id
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:2] # Gitlab::ProjectSearchResults commit search by commit hash shows commit by full hash id
rspec ./spec/lib/gitlab/project_search_results_spec.rb:429 # Gitlab::ProjectSearchResults commit search by commit hash handles not existing commit hash correctly
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:4:1:1] # Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is internal does not search if user is not authenticated
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:4:1:2] # Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is internal searches if user is authenticated
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:4:2:1] # Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private does not show commit to stranger
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:4:2:2:1] # Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private team access shows commit to creator
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:4:2:2:2] # Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private team access shows commit to master
rspec ./spec/lib/gitlab/project_search_results_spec.rb[1:10:2:4:2:2:3] # Gitlab::ProjectSearchResults commit search by commit hash behaves like access restricted commits when project is private team access shows commit to reporter
rspec ./spec/lib/gitlab/project_search_results_spec.rb:443 # Gitlab::ProjectSearchResults user search returns the user belonging to the project matching the search query
rspec ./spec/lib/gitlab/project_search_results_spec.rb:459 # Gitlab::ProjectSearchResults user search returns the user belonging to the group matching the search query
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:2:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:4:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:6:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:8:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:10:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:12:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:14:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:16:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:18:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:20:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:22:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:24:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:26:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:28:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:30:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:32:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:34:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:36:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/project_template_spec.rb[1:7:38:1] # Gitlab::ProjectTemplate validate all templates with valid parameters can be imported
rspec ./spec/lib/gitlab/prometheus/metric_group_spec.rb:14 # Gitlab::Prometheus::MetricGroup.common_metrics returns exactly two groups
rspec ./spec/lib/gitlab/prometheus/metric_group_spec.rb:19 # Gitlab::Prometheus::MetricGroup.common_metrics returns exactly three metric queries
rspec ./spec/lib/gitlab/prometheus/metric_group_spec.rb:25 # Gitlab::Prometheus::MetricGroup.common_metrics orders by priority
rspec ./spec/lib/gitlab/prometheus/metric_group_spec.rb:44 # Gitlab::Prometheus::MetricGroup.for_project returns exactly one common metric
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb:14 # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery queries using specific time
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:1:1:1:2] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters query context contains kube_namespace
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:1:1:1:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains ci_environment_slug
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:1:1:1:1:2] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains environment filter
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:1:2:2] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project without Kubernetes service query context contains empty kube_namespace
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:1:2:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains ci_environment_slug
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:1:2:1:2] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains environment filter
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:2:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery with one group where two metrics is found some queries return results return group data only for queries with results
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:3:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery with two groups with one metric each both queries return results return group data both queries
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_deployment_query_spec.rb[1:3:2:1] # Gitlab::Prometheus::Queries::AdditionalMetricsDeploymentQuery with two groups with one metric each one query returns result return group data only for query with results
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:13 # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery queries using specific time
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:1:1:1:2] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters query context contains kube_namespace
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:1:1:1:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains ci_environment_slug
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:1:1:1:1:2] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project has Kubernetes service when user configured kubernetes from CI/CD > Clusters behaves like query context containing environment slug and filter contains environment filter
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:1:2:2] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project without Kubernetes service query context contains empty kube_namespace
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:1:2:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains ci_environment_slug
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:1:2:1:2] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery metrics query context project without Kubernetes service behaves like query context containing environment slug and filter contains environment filter
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:2:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery with one group where two metrics is found some queries return results return group data only for queries with results
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:3:1:1] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery with two groups with one metric each both queries return results return group data both queries
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb[1:3:2:1] # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery with two groups with one metric each one query returns result return group data only for query with results
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:26 # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery when start and end time parameters are provided as unix timestamps queries using the provided times
rspec ./spec/lib/gitlab/prometheus/queries/additional_metrics_environment_query_spec.rb:37 # Gitlab::Prometheus::Queries::AdditionalMetricsEnvironmentQuery when start and end time parameters are provided as Date/Time objects queries using the provided times converted to unix
rspec ./spec/lib/gitlab/prometheus/queries/deployment_query_spec.rb:17 # Gitlab::Prometheus::Queries::DeploymentQuery sends appropriate queries to prometheus
rspec ./spec/lib/gitlab/prometheus/queries/knative_invocation_query_spec.rb:22 # Gitlab::Prometheus::Queries::KnativeInvocationQuery verify queries has the query, but no data
rspec ./spec/lib/gitlab/prometheus/query_variables_spec.rb:13 # Gitlab::Prometheus::QueryVariables.call 
rspec ./spec/lib/gitlab/prometheus/query_variables_spec.rb:15 # Gitlab::Prometheus::QueryVariables.call 
rspec ./spec/lib/gitlab/prometheus/query_variables_spec.rb:21 # Gitlab::Prometheus::QueryVariables.call without deployment platform 
rspec ./spec/lib/gitlab/prometheus/query_variables_spec.rb:32 # Gitlab::Prometheus::QueryVariables.call with deployment platform with project cluster 
rspec ./spec/lib/gitlab/prometheus/query_variables_spec.rb:49 # Gitlab::Prometheus::QueryVariables.call with deployment platform with group cluster 
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:11 # Gitlab::PrometheusClient#ping issues a "query" request to the API endpoint
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:1:1:1] # Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SocketError is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:1:1:2] # Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SSLError is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:1:1:3] # Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:1:1:4] # Gitlab::PrometheusClient failure to reach a provided prometheus url ping behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError with a code is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:2:1:1] # Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SocketError is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:2:1:2] # Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a SSLError is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:2:1:3] # Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:2:2:1:4] # Gitlab::PrometheusClient failure to reach a provided prometheus url proxy behaves like exceptions are raised raises a Gitlab::PrometheusClient::Error error when a Gitlab::HTTP::ResponseError with a code is rescued
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:123 # Gitlab::PrometheusClient#query when request returns vector results returns data from the API call
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:132 # Gitlab::PrometheusClient#query when request returns matrix results returns nil
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:141 # Gitlab::PrometheusClient#query when request returns no data returns []
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:3:4:1:1] # Gitlab::PrometheusClient#query behaves like failure response when request returns 400 with an error message raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:3:4:2:1] # Gitlab::PrometheusClient#query behaves like failure response when request returns 400 without an error message raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:3:4:3:1] # Gitlab::PrometheusClient#query behaves like failure response when request returns 500 raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:3:4:4:1] # Gitlab::PrometheusClient#query behaves like failure response when request returns non json data raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:161 # Gitlab::PrometheusClient#series calls endpoint and returns list of series
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:174 # Gitlab::PrometheusClient#label_values calls endpoint and returns label values
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:198 # Gitlab::PrometheusClient#query_range when non utc time is passed passed dates are properly converted to utc
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:209 # Gitlab::PrometheusClient#query_range when a start time is passed passed it in the requested URL
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:218 # Gitlab::PrometheusClient#query_range when request returns vector results returns nil
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:227 # Gitlab::PrometheusClient#query_range when request returns matrix results returns data from the API call
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:241 # Gitlab::PrometheusClient#query_range when request returns no data returns []
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:6:6:1:1] # Gitlab::PrometheusClient#query_range behaves like failure response when request returns 400 with an error message raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:6:6:2:1] # Gitlab::PrometheusClient#query_range behaves like failure response when request returns 400 without an error message raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:6:6:3:1] # Gitlab::PrometheusClient#query_range behaves like failure response when request returns 500 raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb[1:6:6:4:1] # Gitlab::PrometheusClient#query_range behaves like failure response when request returns non json data raises a Gitlab::PrometheusClient::Error error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:292 # Gitlab::PrometheusClient proxy get API when response status code is 200 returns response object
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:311 # Gitlab::PrometheusClient proxy get API when response status code is not 200 returns response object
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:331 # Gitlab::PrometheusClient proxy get API when Gitlab::HTTP::ResponseError is raised without response code raises PrometheusClient::Error
rspec ./spec/lib/gitlab/prometheus_client_spec.rb:345 # Gitlab::PrometheusClient proxy get API when Gitlab::HTTP::ResponseError is raised with response code raises Gitlab::PrometheusClient::QueryError
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:14 # Gitlab::ReferenceExtractor accesses valid user objects
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:26 # Gitlab::ReferenceExtractor ignores user mentions inside specific elements
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:120 # Gitlab::ReferenceExtractor does not include anchors from table of contents in issue references
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:129 # Gitlab::ReferenceExtractor accesses valid issue objects
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:138 # Gitlab::ReferenceExtractor accesses valid merge requests
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:147 # Gitlab::ReferenceExtractor accesses valid labels
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:157 # Gitlab::ReferenceExtractor accesses valid snippets
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:167 # Gitlab::ReferenceExtractor accesses valid commits
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:180 # Gitlab::ReferenceExtractor accesses valid commit ranges
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:69 # Gitlab::ReferenceExtractor directly addressed users when a user is directly addressed accesses the user object which is mentioned in the beginning of the line
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:75 # Gitlab::ReferenceExtractor directly addressed users when a user is directly addressed doesn't access the user object if it's not mentioned in the beginning of the line
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:83 # Gitlab::ReferenceExtractor directly addressed users when multiple users are addressed accesses the user objects which are mentioned in the beginning of the line
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:89 # Gitlab::ReferenceExtractor directly addressed users when multiple users are addressed doesn't access the user objects if they are not mentioned in the beginning of the line
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:97 # Gitlab::ReferenceExtractor directly addressed users when multiple users are addressed in different paragraphs accesses user objects which are mentioned in the beginning of each paragraph
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:200 # Gitlab::ReferenceExtractor with an external issue tracker when GitLab issues are enabled returns both Jira and internal issues
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:207 # Gitlab::ReferenceExtractor with an external issue tracker when GitLab issues are enabled returns only Jira issues if the internal one does not exists
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:220 # Gitlab::ReferenceExtractor with an external issue tracker when GitLab issues are disabled returns only Jira issues
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:236 # Gitlab::ReferenceExtractor with a project with an underscore handles project issue references
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:255 # Gitlab::ReferenceExtractor#all returns all referables
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:263 # Gitlab::ReferenceExtractor.references_pattern 
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:280 # Gitlab::ReferenceExtractor referables prefixes returns all supported prefixes
rspec ./spec/lib/gitlab/reference_extractor_spec.rb:284 # Gitlab::ReferenceExtractor referables prefixes does not allow one prefix for multiple referables if not allowed specificly
rspec ./spec/lib/gitlab/repo_path_spec.rb:49 # Gitlab::RepoPath.parse returns the default type for non existent paths
rspec ./spec/lib/gitlab/repo_path_spec.rb:10 # Gitlab::RepoPath.parse a repository storage path parses a full repository path
rspec ./spec/lib/gitlab/repo_path_spec.rb:14 # Gitlab::RepoPath.parse a repository storage path parses a full wiki path
rspec ./spec/lib/gitlab/repo_path_spec.rb:20 # Gitlab::RepoPath.parse a relative path parses a relative repository path
rspec ./spec/lib/gitlab/repo_path_spec.rb:24 # Gitlab::RepoPath.parse a relative path parses a relative wiki path
rspec ./spec/lib/gitlab/repo_path_spec.rb:28 # Gitlab::RepoPath.parse a relative path parses a relative path starting with /
rspec ./spec/lib/gitlab/repo_path_spec.rb:35 # Gitlab::RepoPath.parse a relative path of a redirected project parses a relative repository path
rspec ./spec/lib/gitlab/repo_path_spec.rb:39 # Gitlab::RepoPath.parse a relative path of a redirected project parses a relative wiki path
rspec ./spec/lib/gitlab/repo_path_spec.rb:43 # Gitlab::RepoPath.parse a relative path of a redirected project parses a relative path starting with /
rspec ./spec/lib/gitlab/repo_path_spec.rb:62 # Gitlab::RepoPath.find_project when finding a project by its canonical path when the cases match returns the project and false
rspec ./spec/lib/gitlab/repo_path_spec.rb:72 # Gitlab::RepoPath.find_project when finding a project by its canonical path when the cases do not match returns the project and false
rspec ./spec/lib/gitlab/repo_path_spec.rb:79 # Gitlab::RepoPath.find_project when finding a project via a redirect returns the project and true
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:23 # Gitlab::RepositoryCacheAdapter#cache_method_output with a non-existing repository returns the fallback value
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:27 # Gitlab::RepositoryCacheAdapter#cache_method_output with a non-existing repository avoids calling the original method
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:41 # Gitlab::RepositoryCacheAdapter#cache_method_output with a method throwing a non-existing-repository error returns the fallback value
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:45 # Gitlab::RepositoryCacheAdapter#cache_method_output with a method throwing a non-existing-repository error does not cache the data
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:54 # Gitlab::RepositoryCacheAdapter#cache_method_output with an existing repository caches the output
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:84 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with a non-existing repository returns the output of the original method
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:98 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with a method throwing a non-existing-repository error returns nil
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:102 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with a method throwing a non-existing-repository error does not cache the data
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:118 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns truthy caches the output in RequestStore
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:124 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns truthy caches the output in RepositoryCache
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:136 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns false caches the output in RequestStore
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:142 # Gitlab::RepositoryCacheAdapter#cache_method_output_asymmetrically with an existing repository when it returns false does NOT cache the output in RepositoryCache
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:163 # Gitlab::RepositoryCacheAdapter#memoize_method_output with a non-existing repository returns the fallback value
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:167 # Gitlab::RepositoryCacheAdapter#memoize_method_output with a non-existing repository avoids calling the original method
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:173 # Gitlab::RepositoryCacheAdapter#memoize_method_output with a non-existing repository does not set the instance variable
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:187 # Gitlab::RepositoryCacheAdapter#memoize_method_output with a method throwing a non-existing-repository error returns the fallback value
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:191 # Gitlab::RepositoryCacheAdapter#memoize_method_output with a method throwing a non-existing-repository error does not set the instance variable
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:199 # Gitlab::RepositoryCacheAdapter#memoize_method_output with an existing repository sets the instance variable
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:210 # Gitlab::RepositoryCacheAdapter#expire_method_caches expires the caches of the given methods
rspec ./spec/lib/gitlab/repository_cache_adapter_spec.rb:219 # Gitlab::RepositoryCacheAdapter#expire_method_caches does not expire caches for non-existent methods
rspec ./spec/lib/gitlab/repository_cache_spec.rb:15 # Gitlab::RepositoryCache#cache_key includes the namespace
rspec ./spec/lib/gitlab/repository_cache_spec.rb:26 # Gitlab::RepositoryCache#cache_key with a given namespace includes the full namespace
rspec ./spec/lib/gitlab/repository_cache_spec.rb:33 # Gitlab::RepositoryCache#expire expires the given key from the cache
rspec ./spec/lib/gitlab/repository_cache_spec.rb:40 # Gitlab::RepositoryCache#fetch fetches the given key from the cache
rspec ./spec/lib/gitlab/repository_cache_spec.rb:45 # Gitlab::RepositoryCache#fetch accepts a block
rspec ./spec/lib/gitlab/repository_cache_spec.rb:57 # Gitlab::RepositoryCache#fetch_without_caching_false requires a block
rspec ./spec/lib/gitlab/repository_cache_spec.rb:65 # Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is truthy returns the result of the block
rspec ./spec/lib/gitlab/repository_cache_spec.rb:71 # Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is truthy caches the value
rspec ./spec/lib/gitlab/repository_cache_spec.rb:81 # Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is falsey returns the result of the block
rspec ./spec/lib/gitlab/repository_cache_spec.rb:87 # Gitlab::RepositoryCache#fetch_without_caching_false when the key does not exist in the cache when the result of the block is falsey does not cache the value
rspec ./spec/lib/gitlab/repository_cache_spec.rb:100 # Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is truthy returns the cached value
rspec ./spec/lib/gitlab/repository_cache_spec.rb:106 # Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is truthy does not execute the block
rspec ./spec/lib/gitlab/repository_cache_spec.rb:112 # Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is truthy does not write to the cache
rspec ./spec/lib/gitlab/repository_cache_spec.rb:124 # Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is falsey returns the result of the block
rspec ./spec/lib/gitlab/repository_cache_spec.rb:130 # Gitlab::RepositoryCache#fetch_without_caching_false when the cached value is falsey writes the truthy value to the cache
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:14 # Gitlab::RepositorySetCache#cache_key includes the namespace
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:22 # Gitlab::RepositorySetCache#cache_key with a given namespace includes the full namespace
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:29 # Gitlab::RepositorySetCache#expire expires the given key from the cache
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:39 # Gitlab::RepositorySetCache#exist? checks whether the key exists
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:53 # Gitlab::RepositorySetCache#fetch fetches the key from the cache when filled
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:59 # Gitlab::RepositorySetCache#fetch writes the value of the provided block when empty
rspec ./spec/lib/gitlab/repository_set_cache_spec.rb:68 # Gitlab::RepositorySetCache#include? checks inclusion in the Redis set
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:46 # Gitlab::Sanitizers::Exif#batch_clean filters only jpg/tiff images
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:14 # Gitlab::Sanitizers::Exif#batch_clean with image uploads processes all uploads if range ID is not set
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:20 # Gitlab::Sanitizers::Exif#batch_clean with image uploads processes only uploads in the selected range
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:26 # Gitlab::Sanitizers::Exif#batch_clean with image uploads processes only uploads for the selected uploader
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:32 # Gitlab::Sanitizers::Exif#batch_clean with image uploads processes only uploads created since specified date
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:38 # Gitlab::Sanitizers::Exif#batch_clean with image uploads pauses if sleep_time is set
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:64 # Gitlab::Sanitizers::Exif#clean no dry run removes exif from the image
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:85 # Gitlab::Sanitizers::Exif#clean no dry run ignores image without exif
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:95 # Gitlab::Sanitizers::Exif#clean no dry run raises an error if the exiftool fails with an error
rspec ./spec/lib/gitlab/sanitizers/exif_spec.rb:103 # Gitlab::Sanitizers::Exif#clean dry run doesn't change the image
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:14 # Gitlab::Search::FoundBlob parsing content results returns a valid FoundBlob
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:24 # Gitlab::Search::FoundBlob parsing content results does not parse content if not needed
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:30 # Gitlab::Search::FoundBlob parsing content results parses content only once when needed
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:39 # Gitlab::Search::FoundBlob parsing content results when the matching filename contains a colon returns a valid FoundBlob
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:51 # Gitlab::Search::FoundBlob parsing content results when the matching content contains a number surrounded by colons returns a valid FoundBlob
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:63 # Gitlab::Search::FoundBlob parsing content results when the matching content contains multiple null bytes returns a valid FoundBlob
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:75 # Gitlab::Search::FoundBlob parsing content results when the search result ends with an empty line returns a valid FoundBlob that ends with an empty line
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:88 # Gitlab::Search::FoundBlob parsing content results when the search returns non-ASCII data with UTF-8 returns results as UTF-8
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:100 # Gitlab::Search::FoundBlob parsing content results when the search returns non-ASCII data with UTF-8 in the filename returns results as UTF-8
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:112 # Gitlab::Search::FoundBlob parsing content results when the search returns non-ASCII data with ISO-8859-1 returns results as UTF-8
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:125 # Gitlab::Search::FoundBlob parsing content results when filename has extension 
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:126 # Gitlab::Search::FoundBlob parsing content results when filename has extension 
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:132 # Gitlab::Search::FoundBlob parsing content results when file is under directory 
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:133 # Gitlab::Search::FoundBlob parsing content results when file is under directory 
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:149 # Gitlab::Search::FoundBlob parsing title results when file is under directory 
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:150 # Gitlab::Search::FoundBlob parsing title results when file is under directory 
rspec ./spec/lib/gitlab/search/found_blob_spec.rb:155 # Gitlab::Search::FoundBlob parsing title results when file is under directory when filename has multiple extensions 
rspec ./spec/lib/gitlab/search_results_spec.rb:182 # Gitlab::SearchResults does not list issues on private projects
rspec ./spec/lib/gitlab/search_results_spec.rb:293 # Gitlab::SearchResults does not list merge requests on projects with limited access
rspec ./spec/lib/gitlab/search_results_spec.rb:124 # Gitlab::SearchResults as a user with access includes merge requests from source and target projects
rspec ./spec/lib/gitlab/search_results_spec.rb:26 # Gitlab::SearchResults as a user with access #objects returns without_counts collection by default
rspec ./spec/lib/gitlab/search_results_spec.rb:30 # Gitlab::SearchResults as a user with access #objects returns with counts collection when requested
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:2:1:1] # Gitlab::SearchResults as a user with access #formatted_count scope: "projects", count_method: :limited_projects_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:2:2:1] # Gitlab::SearchResults as a user with access #formatted_count scope: "issues", count_method: :limited_issues_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:2:3:1] # Gitlab::SearchResults as a user with access #formatted_count scope: "merge_requests", count_method: :limited_merge_requests_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:2:4:1] # Gitlab::SearchResults as a user with access #formatted_count scope: "milestones", count_method: :limited_milestones_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:2:5:1] # Gitlab::SearchResults as a user with access #formatted_count scope: "users", count_method: :limited_users_count, expected: "99+" returns the expected formatted count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:2:6:1] # Gitlab::SearchResults as a user with access #formatted_count scope: "unknown", count_method: nil, expected: nil returns the expected formatted count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:3:1:1] # Gitlab::SearchResults as a user with access #formatted_limited_count count: 23, expected: "23" returns the expected formatted limited count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:3:2:1] # Gitlab::SearchResults as a user with access #formatted_limited_count count: 99, expected: "99" returns the expected formatted limited count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:3:3:1] # Gitlab::SearchResults as a user with access #formatted_limited_count count: 100, expected: "99+" returns the expected formatted limited count
rspec ./spec/lib/gitlab/search_results_spec.rb[1:1:3:4:1] # Gitlab::SearchResults as a user with access #formatted_limited_count count: 1234, expected: "99+" returns the expected formatted limited count
rspec ./spec/lib/gitlab/search_results_spec.rb:78 # Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_projects_count returns the limited amount of projects
rspec ./spec/lib/gitlab/search_results_spec.rb:86 # Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_merge_requests_count returns the limited amount of merge requests
rspec ./spec/lib/gitlab/search_results_spec.rb:94 # Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_milestones_count returns the limited amount of milestones
rspec ./spec/lib/gitlab/search_results_spec.rb:102 # Gitlab::SearchResults as a user with access when count_limit is lower than total amount #limited_issues_count runs single SQL query to get the limited amount of issues
rspec ./spec/lib/gitlab/search_results_spec.rb:115 # Gitlab::SearchResults as a user with access when count_limit is higher than total amount #limited_issues_count runs multiple queries to get the limited amount of issues
rspec ./spec/lib/gitlab/search_results_spec.rb:134 # Gitlab::SearchResults as a user with access #merge_requests includes project filter by default
rspec ./spec/lib/gitlab/search_results_spec.rb:140 # Gitlab::SearchResults as a user with access #merge_requests skips project filter if default project context is used
rspec ./spec/lib/gitlab/search_results_spec.rb:150 # Gitlab::SearchResults as a user with access #issues includes project filter by default
rspec ./spec/lib/gitlab/search_results_spec.rb:156 # Gitlab::SearchResults as a user with access #issues skips project filter if default project context is used
rspec ./spec/lib/gitlab/search_results_spec.rb:166 # Gitlab::SearchResults as a user with access #users does not call the UsersFinder when the current_user is not allowed to read users list
rspec ./spec/lib/gitlab/search_results_spec.rb:174 # Gitlab::SearchResults as a user with access #users calls the UsersFinder
rspec ./spec/lib/gitlab/search_results_spec.rb:208 # Gitlab::SearchResults confidential issues does not list confidential issues for non project members
rspec ./spec/lib/gitlab/search_results_spec.rb:221 # Gitlab::SearchResults confidential issues does not list confidential issues for project members with guest role
rspec ./spec/lib/gitlab/search_results_spec.rb:237 # Gitlab::SearchResults confidential issues lists confidential issues for author
rspec ./spec/lib/gitlab/search_results_spec.rb:250 # Gitlab::SearchResults confidential issues lists confidential issues for assignee
rspec ./spec/lib/gitlab/search_results_spec.rb:263 # Gitlab::SearchResults confidential issues lists confidential issues for project members
rspec ./spec/lib/gitlab/search_results_spec.rb:279 # Gitlab::SearchResults confidential issues lists all issues for admin
rspec ./spec/lib/gitlab/search_results_spec.rb:301 # Gitlab::SearchResults milestones returns correct set of milestones
rspec ./spec/lib/gitlab/shell_spec.rb:19 # Gitlab::Shell 
rspec ./spec/lib/gitlab/shell_spec.rb:20 # Gitlab::Shell 
rspec ./spec/lib/gitlab/shell_spec.rb:21 # Gitlab::Shell 
rspec ./spec/lib/gitlab/shell_spec.rb:22 # Gitlab::Shell 
rspec ./spec/lib/gitlab/shell_spec.rb:23 # Gitlab::Shell 
rspec ./spec/lib/gitlab/shell_spec.rb:25 # Gitlab::Shell 
rspec ./spec/lib/gitlab/shell_spec.rb:43 # Gitlab::Shell memoized secret_token creates and links the secret token file
rspec ./spec/lib/gitlab/shell_spec.rb:55 # Gitlab::Shell#add_key when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#add_key with id and key
rspec ./spec/lib/gitlab/shell_spec.rb:71 # Gitlab::Shell#add_key when authorized_keys_enabled is false does nothing
rspec ./spec/lib/gitlab/shell_spec.rb:83 # Gitlab::Shell#add_key when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#add_key with id and key
rspec ./spec/lib/gitlab/shell_spec.rb:99 # Gitlab::Shell#batch_add_keys when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#batch_add_keys with keys to be added
rspec ./spec/lib/gitlab/shell_spec.rb:115 # Gitlab::Shell#batch_add_keys when authorized_keys_enabled is false does nothing
rspec ./spec/lib/gitlab/shell_spec.rb:127 # Gitlab::Shell#batch_add_keys when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#batch_add_keys with keys to be added
rspec ./spec/lib/gitlab/shell_spec.rb:141 # Gitlab::Shell#remove_key when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#rm_key with the key to be removed
rspec ./spec/lib/gitlab/shell_spec.rb:154 # Gitlab::Shell#remove_key when authorized_keys_enabled is false does nothing
rspec ./spec/lib/gitlab/shell_spec.rb:166 # Gitlab::Shell#remove_key when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#rm_key with the key to be removed
rspec ./spec/lib/gitlab/shell_spec.rb:177 # Gitlab::Shell#remove_all_keys when authorized_keys_enabled is true calls Gitlab::AuthorizedKeys#clear
rspec ./spec/lib/gitlab/shell_spec.rb:190 # Gitlab::Shell#remove_all_keys when authorized_keys_enabled is false does nothing
rspec ./spec/lib/gitlab/shell_spec.rb:202 # Gitlab::Shell#remove_all_keys when authorized_keys_enabled is nil calls Gitlab::AuthorizedKeys#clear
rspec ./spec/lib/gitlab/shell_spec.rb:220 # Gitlab::Shell#remove_keys_not_found_in_db when keys are in the file that are not in the DB removes the keys
rspec ./spec/lib/gitlab/shell_spec.rb:236 # Gitlab::Shell#remove_keys_not_found_in_db when keys there are duplicate keys in the file that are not in the DB removes the keys
rspec ./spec/lib/gitlab/shell_spec.rb:250 # Gitlab::Shell#remove_keys_not_found_in_db when keys there are duplicate keys in the file that ARE in the DB does not remove the key
rspec ./spec/lib/gitlab/shell_spec.rb:265 # Gitlab::Shell#remove_keys_not_found_in_db when the first batch can be skipped, but the next batch has keys that are not in the DB removes the keys not in the DB
rspec ./spec/lib/gitlab/shell_spec.rb:298 # Gitlab::Shell projects commands #create_repository returns false when the command fails
rspec ./spec/lib/gitlab/shell_spec.rb:312 # Gitlab::Shell projects commands #remove_repository returns true when the command succeeds
rspec ./spec/lib/gitlab/shell_spec.rb:320 # Gitlab::Shell projects commands #remove_repository keeps the namespace directory
rspec ./spec/lib/gitlab/shell_spec.rb:331 # Gitlab::Shell projects commands #mv_repository returns true when the command succeeds
rspec ./spec/lib/gitlab/shell_spec.rb:344 # Gitlab::Shell projects commands #mv_repository returns false when the command fails
rspec ./spec/lib/gitlab/shell_spec.rb:357 # Gitlab::Shell projects commands #fork_repository returns true when the command succeeds
rspec ./spec/lib/gitlab/shell_spec.rb:364 # Gitlab::Shell projects commands #fork_repository return false when the command fails
rspec ./spec/lib/gitlab/shell_spec.rb:376 # Gitlab::Shell projects commands #import_repository with gitaly returns true when the command succeeds
rspec ./spec/lib/gitlab/shell_spec.rb:384 # Gitlab::Shell projects commands #import_repository with gitaly raises an exception when the command fails
rspec ./spec/lib/gitlab/shell_spec.rb:403 # Gitlab::Shell namespace actions #add_namespace creates a namespace
rspec ./spec/lib/gitlab/shell_spec.rb:412 # Gitlab::Shell namespace actions #repository_exists? when the repository does not exist returns false
rspec ./spec/lib/gitlab/shell_spec.rb:418 # Gitlab::Shell namespace actions #repository_exists? when the repository exists returns true
rspec ./spec/lib/gitlab/shell_spec.rb:427 # Gitlab::Shell namespace actions #remove removes the namespace
rspec ./spec/lib/gitlab/shell_spec.rb:438 # Gitlab::Shell namespace actions #mv_namespace renames the namespace
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:19 # Gitlab::SlashCommands::Command#execute when no command is available displays 404 messages
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:28 # Gitlab::SlashCommands::Command#execute when an unknown command is triggered displays the help message
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:38 # Gitlab::SlashCommands::Command#execute the user can not create an issue rejects the actions
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:58 # Gitlab::SlashCommands::Command#execute when trying to do deployment and user can not create deployment returns action
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:72 # Gitlab::SlashCommands::Command#execute when trying to do deployment and user has deployment permission returns action
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:84 # Gitlab::SlashCommands::Command#execute when trying to do deployment and user has deployment permission when duplicate action exists returns error
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:99 # Gitlab::SlashCommands::Command#match_command IssueShow is triggered 
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:105 # Gitlab::SlashCommands::Command#match_command IssueCreate is triggered 
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:111 # Gitlab::SlashCommands::Command#match_command IssueSearch is triggered 
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:117 # Gitlab::SlashCommands::Command#match_command IssueMove is triggered 
rspec ./spec/lib/gitlab/slash_commands/command_spec.rb:123 # Gitlab::SlashCommands::Command#match_command IssueComment is triggered 
rspec ./spec/lib/gitlab/slash_commands/deploy_spec.rb:26 # Gitlab::SlashCommands::Deploy#execute if no environment is defined does not execute an action
rspec ./spec/lib/gitlab/slash_commands/deploy_spec.rb:39 # Gitlab::SlashCommands::Deploy#execute with environment without actions does not execute an action
rspec ./spec/lib/gitlab/slash_commands/deploy_spec.rb:52 # Gitlab::SlashCommands::Deploy#execute with environment when single action has been matched returns success result
rspec ./spec/lib/gitlab/slash_commands/deploy_spec.rb:71 # Gitlab::SlashCommands::Deploy#execute with environment when more than one action has been matched when there is no specific actions with a environment name returns error about too many actions defined
rspec ./spec/lib/gitlab/slash_commands/deploy_spec.rb:88 # Gitlab::SlashCommands::Deploy#execute with environment when more than one action has been matched when one of the actions is environement specific action deploys to production
rspec ./spec/lib/gitlab/slash_commands/deploy_spec.rb:105 # Gitlab::SlashCommands::Deploy#execute with environment when more than one action has been matched when one of the actions is a teardown action deploys to production
rspec ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:20 # Gitlab::SlashCommands::IssueClose#execute when the user does not have permission does not allow the user to close the issue
rspec ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:30 # Gitlab::SlashCommands::IssueClose#execute the issue exists closes and returns the issue
rspec ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:39 # Gitlab::SlashCommands::IssueClose#execute the issue exists when its reference is given closes and returns the issue
rspec ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:50 # Gitlab::SlashCommands::IssueClose#execute the issue does not exist returns not found
rspec ./spec/lib/gitlab/slash_commands/issue_close_spec.rb:59 # Gitlab::SlashCommands::IssueClose#execute when the issue is already closed shows the issue
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:22 # Gitlab::SlashCommands::IssueComment#execute when the issue exists when project is private when the user is not a member of the project does not allow the user to comment
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:38 # Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user is not a member of the project when the discussion is locked in the issue does not allow the user to comment
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:48 # Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body exists creates a new comment
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:52 # Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body exists a new comment has a correct body
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:62 # Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body does not exist does not create a new comment
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:66 # Gitlab::SlashCommands::IssueComment#execute when the issue exists when the user can comment on the issue when comment body does not exist displays the errors
rspec ./spec/lib/gitlab/slash_commands/issue_comment_spec.rb:77 # Gitlab::SlashCommands::IssueComment#execute when the issue does not exist returns not found
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:43 # Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move fails returns the error message
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:54 # Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move succeeds moves the issue to the new destination
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:67 # Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move succeeds returns the new issue
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:73 # Gitlab::SlashCommands::IssueMove#execute when the user can move the issue when the move succeeds mentions the old issue
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:81 # Gitlab::SlashCommands::IssueMove#execute when the issue does not exist returns not found
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:90 # Gitlab::SlashCommands::IssueMove#execute when the target project does not exist returns not found
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:99 # Gitlab::SlashCommands::IssueMove#execute when the user cannot see the target project returns not found
rspec ./spec/lib/gitlab/slash_commands/issue_move_spec.rb:109 # Gitlab::SlashCommands::IssueMove#execute when the user does not have the required permissions on the target project returns the error message
rspec ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:21 # Gitlab::SlashCommands::IssueNew#execute without description creates the issue
rspec ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:32 # Gitlab::SlashCommands::IssueNew#execute with description creates the issue with description
rspec ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:43 # Gitlab::SlashCommands::IssueNew#execute with more newlines between the title and the description creates the issue
rspec ./spec/lib/gitlab/slash_commands/issue_new_spec.rb:52 # Gitlab::SlashCommands::IssueNew#execute issue cannot be created displays the errors
rspec ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:19 # Gitlab::SlashCommands::IssueSearch#execute when the user has no access only returns the open issues
rspec ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:30 # Gitlab::SlashCommands::IssueSearch#execute the user has access returns all results
rspec ./spec/lib/gitlab/slash_commands/issue_search_spec.rb:37 # Gitlab::SlashCommands::IssueSearch#execute without hits on the query returns an empty collection
rspec ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:24 # Gitlab::SlashCommands::IssueShow#execute the issue exists returns the issue
rspec ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:32 # Gitlab::SlashCommands::IssueShow#execute the issue exists when its reference is given shows the issue
rspec ./spec/lib/gitlab/slash_commands/issue_show_spec.rb:42 # Gitlab::SlashCommands::IssueShow#execute the issue does not exist returns not found
rspec ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:11 # Gitlab::SlashCommands::Presenters::Deploy#present 
rspec ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:12 # Gitlab::SlashCommands::Presenters::Deploy#present 
rspec ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:13 # Gitlab::SlashCommands::Presenters::Deploy#present 
rspec ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:14 # Gitlab::SlashCommands::Presenters::Deploy#present 
rspec ./spec/lib/gitlab/slash_commands/presenters/deploy_spec.rb:16 # Gitlab::SlashCommands::Presenters::Deploy#present messages the channel of the deploy
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:12 # Gitlab::SlashCommands::Presenters::IssueClose 
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:14 # Gitlab::SlashCommands::Presenters::IssueClose shows the issue
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_close_spec.rb:23 # Gitlab::SlashCommands::Presenters::IssueClose confidential issue shows an ephemeral response
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:16 # Gitlab::SlashCommands::Presenters::IssueComment#present 
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:18 # Gitlab::SlashCommands::Presenters::IssueComment#present sets ephemeral response type
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:22 # Gitlab::SlashCommands::Presenters::IssueComment#present sets the title
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:26 # Gitlab::SlashCommands::Presenters::IssueComment#present sets the fallback text
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:30 # Gitlab::SlashCommands::Presenters::IssueComment#present sets the fields
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_comment_spec.rb:34 # Gitlab::SlashCommands::Presenters::IssueComment#present sets the color
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_move_spec.rb:15 # Gitlab::SlashCommands::Presenters::IssueMove 
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_move_spec.rb:17 # Gitlab::SlashCommands::Presenters::IssueMove shows the new issue
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_move_spec.rb:24 # Gitlab::SlashCommands::Presenters::IssueMove mentions the old issue and the new issue in the pretext
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:12 # Gitlab::SlashCommands::Presenters::IssueNew 
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_new_spec.rb:14 # Gitlab::SlashCommands::Presenters::IssueNew shows the issue
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_search_spec.rb:15 # Gitlab::SlashCommands::Presenters::IssueSearch formats the message correct
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_search_spec.rb:22 # Gitlab::SlashCommands::Presenters::IssueSearch shows a list of results
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:12 # Gitlab::SlashCommands::Presenters::IssueShow 
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:14 # Gitlab::SlashCommands::Presenters::IssueShow shows the issue
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:25 # Gitlab::SlashCommands::Presenters::IssueShow with upvotes shows the upvote count
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:39 # Gitlab::SlashCommands::Presenters::IssueShow with labels shows the labels
rspec ./spec/lib/gitlab/slash_commands/presenters/issue_show_spec.rb:49 # Gitlab::SlashCommands::Presenters::IssueShow confidential issue shows an ephemeral response
rspec ./spec/lib/gitlab/slash_commands/run_spec.rb:35 # Gitlab::SlashCommands::Run.allowed? returns true when the user can create a pipeline
rspec ./spec/lib/gitlab/slash_commands/run_spec.rb:41 # Gitlab::SlashCommands::Run.allowed? returns false when the user can not create a pipeline
rspec ./spec/lib/gitlab/slash_commands/run_spec.rb:58 # Gitlab::SlashCommands::Run#execute when a pipeline could not be scheduled returns an error
rspec ./spec/lib/gitlab/slash_commands/run_spec.rb:72 # Gitlab::SlashCommands::Run#execute when a pipeline could be created but the chat service was not supported returns an error
rspec ./spec/lib/gitlab/slash_commands/run_spec.rb:98 # Gitlab::SlashCommands::Run#execute using a valid pipeline schedules the pipeline
rspec ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:13 # Gitlab::Template::Finders::RepoTemplateFinder#read returns the content of the given path
rspec ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:19 # Gitlab::Template::Finders::RepoTemplateFinder#read raises an error if the path does not exist
rspec ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:25 # Gitlab::Template::Finders::RepoTemplateFinder#find returns the full path of the found template
rspec ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:31 # Gitlab::Template::Finders::RepoTemplateFinder#find does not permit path traversal requests
rspec ./spec/lib/gitlab/template/finders/repo_template_finders_spec.rb:37 # Gitlab::Template::Finders::RepoTemplateFinder#list_files_for returns the full path of the found files
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:9 # Gitlab::Template::IssueTemplate.all strips the md suffix
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:13 # Gitlab::Template::IssueTemplate.all combines the globals and rest
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:22 # Gitlab::Template::IssueTemplate.find returns nil if the file does not exist
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:26 # Gitlab::Template::IssueTemplate.find returns the issue object of a valid file
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:35 # Gitlab::Template::IssueTemplate.by_category return array of templates
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:44 # Gitlab::Template::IssueTemplate.by_category when repo is bare or empty returns empty array
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:53 # Gitlab::Template::IssueTemplate#content loads the full file
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:60 # Gitlab::Template::IssueTemplate#content raises error when file is not found
rspec ./spec/lib/gitlab/template/issue_template_spec.rb:68 # Gitlab::Template::IssueTemplate#content when repo is empty raises file not found
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:9 # Gitlab::Template::MergeRequestTemplate.all strips the md suffix
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:13 # Gitlab::Template::MergeRequestTemplate.all combines the globals and rest
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:22 # Gitlab::Template::MergeRequestTemplate.find returns nil if the file does not exist
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:26 # Gitlab::Template::MergeRequestTemplate.find returns the merge request object of a valid file
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:35 # Gitlab::Template::MergeRequestTemplate.by_category return array of templates
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:44 # Gitlab::Template::MergeRequestTemplate.by_category when repo is bare or empty returns empty array
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:53 # Gitlab::Template::MergeRequestTemplate#content loads the full file
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:60 # Gitlab::Template::MergeRequestTemplate#content raises error when file is not found
rspec ./spec/lib/gitlab/template/merge_request_template_spec.rb:68 # Gitlab::Template::MergeRequestTemplate#content when repo is empty raises file not found
rspec ./spec/lib/gitlab/tree_summary_spec.rb:19 # Gitlab::TreeSummary#initialize defaults offset to 0
rspec ./spec/lib/gitlab/tree_summary_spec.rb:23 # Gitlab::TreeSummary#initialize defaults limit to 25
rspec ./spec/lib/gitlab/tree_summary_spec.rb:33 # Gitlab::TreeSummary#summarize returns an array of entries, and an array of commits
rspec ./spec/lib/gitlab/tree_summary_spec.rb:62 # Gitlab::TreeSummary#summarize (entries) summarizes the entries within the window
rspec ./spec/lib/gitlab/tree_summary_spec.rb:70 # Gitlab::TreeSummary#summarize (entries) references the commit and commit path in entries
rspec ./spec/lib/gitlab/tree_summary_spec.rb:81 # Gitlab::TreeSummary#summarize (entries) in a good subdirectory summarizes the entries in the subdirectory
rspec ./spec/lib/gitlab/tree_summary_spec.rb:89 # Gitlab::TreeSummary#summarize (entries) in a non-existent subdirectory 
rspec ./spec/lib/gitlab/tree_summary_spec.rb:95 # Gitlab::TreeSummary#summarize (entries) custom offset and limit returns entries from the offset
rspec ./spec/lib/gitlab/tree_summary_spec.rb:116 # Gitlab::TreeSummary#summarize (commits) returns an Array of ::Commit objects
rspec ./spec/lib/gitlab/tree_summary_spec.rb:121 # Gitlab::TreeSummary#summarize (commits) deduplicates commits when multiple entries reference the same commit
rspec ./spec/lib/gitlab/tree_summary_spec.rb:128 # Gitlab::TreeSummary#summarize (commits) in a subdirectory returns commits for entries in the subdirectory
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:1:1] # Gitlab::TreeSummary#more? num_entries: 0, offset: 0, limit: 0, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:2:1] # Gitlab::TreeSummary#more? num_entries: 0, offset: 0, limit: 1, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:3:1] # Gitlab::TreeSummary#more? num_entries: 1, offset: 0, limit: 0, expected_result: true 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:4:1] # Gitlab::TreeSummary#more? num_entries: 1, offset: 0, limit: 1, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:5:1] # Gitlab::TreeSummary#more? num_entries: 1, offset: 1, limit: 0, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:6:1] # Gitlab::TreeSummary#more? num_entries: 1, offset: 1, limit: 1, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:7:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 0, expected_result: true 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:8:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 1, expected_result: true 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:9:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 2, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:10:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 0, limit: 3, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:11:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 1, limit: 0, expected_result: true 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:12:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 1, limit: 1, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:13:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 2, limit: 0, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:5:14:1] # Gitlab::TreeSummary#more? num_entries: 2, offset: 2, limit: 1, expected_result: false 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:1:1] # Gitlab::TreeSummary#next_offset num_entries: 0, offset: 0, limit: 0, expected_result: 0 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:2:1] # Gitlab::TreeSummary#next_offset num_entries: 0, offset: 0, limit: 1, expected_result: 1 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:3:1] # Gitlab::TreeSummary#next_offset num_entries: 0, offset: 1, limit: 0, expected_result: 1 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:4:1] # Gitlab::TreeSummary#next_offset num_entries: 0, offset: 1, limit: 1, expected_result: 1 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:5:1] # Gitlab::TreeSummary#next_offset num_entries: 1, offset: 0, limit: 0, expected_result: 0 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:6:1] # Gitlab::TreeSummary#next_offset num_entries: 1, offset: 0, limit: 1, expected_result: 1 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:7:1] # Gitlab::TreeSummary#next_offset num_entries: 1, offset: 1, limit: 0, expected_result: 1 
rspec ./spec/lib/gitlab/tree_summary_spec.rb[1:6:8:1] # Gitlab::TreeSummary#next_offset num_entries: 1, offset: 1, limit: 1, expected_result: 2 
rspec ./spec/lib/gitlab/uploads_transfer_spec.rb:6 # Gitlab::UploadsTransfer leaves avatar uploads where they are
rspec ./spec/lib/gitlab/url_blocker_spec.rb:59 # Gitlab::UrlBlocker#validate! when the URL hostname is a domain when domain cannot be resolved raises an error
rspec ./spec/lib/gitlab/url_blocker_spec.rb:86 # Gitlab::UrlBlocker#validate! when the URL hostname is an IP address when the address is invalid raises an error
rspec ./spec/lib/gitlab/url_blocker_spec.rb:619 # Gitlab::UrlBlocker#blocked_url? blocks urls with invalid ip address
rspec ./spec/lib/gitlab/url_blocker_spec.rb:625 # Gitlab::UrlBlocker#blocked_url? blocks urls whose hostname cannot be resolved
rspec ./spec/lib/gitlab/url_builder_spec.rb:32 # Gitlab::UrlBuilder.build when passing a Milestone belonging to a project returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:63 # Gitlab::UrlBuilder.build when passing a ProjectSnippet returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:94 # Gitlab::UrlBuilder.build when passing a Note on a Commit Diff returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:104 # Gitlab::UrlBuilder.build when passing a Note on an Issue returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:115 # Gitlab::UrlBuilder.build when passing a Note on a MergeRequest returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:126 # Gitlab::UrlBuilder.build when passing a Note on a MergeRequest Diff returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:137 # Gitlab::UrlBuilder.build when passing a Note on a ProjectSnippet returns a proper URL
rspec ./spec/lib/gitlab/url_builder_spec.rb:169 # Gitlab::UrlBuilder.build when passing a WikiPage returns a proper URL
rspec ./spec/lib/gitlab/usage_data_spec.rb:64 # Gitlab::UsageData#data gathers usage data
rspec ./spec/lib/gitlab/usage_data_spec.rb:95 # Gitlab::UsageData#data gathers usage counts
rspec ./spec/lib/gitlab/usage_data_spec.rb:202 # Gitlab::UsageData#data gathers projects data correctly
rspec ./spec/lib/gitlab/usage_data_spec.rb:243 # Gitlab::UsageData#data works when queries time out
rspec ./spec/lib/gitlab/usage_data_spec.rb:254 # Gitlab::UsageData#usage_data_counters 
rspec ./spec/lib/gitlab/usage_data_spec.rb:263 # Gitlab::UsageData#usage_data_counters does not have any conflicts
rspec ./spec/lib/gitlab/usage_data_spec.rb:259 # Gitlab::UsageData#usage_data_counters the results of calling #totals on all objects in the array 
rspec ./spec/lib/gitlab/usage_data_spec.rb:260 # Gitlab::UsageData#usage_data_counters the results of calling #totals on all objects in the array 
rspec ./spec/lib/gitlab/usage_data_spec.rb:273 # Gitlab::UsageData#features_usage_data_ce gathers feature usage data
rspec ./spec/lib/gitlab/usage_data_spec.rb:290 # Gitlab::UsageData#components_usage_data gathers components usage data
rspec ./spec/lib/gitlab/usage_data_spec.rb:306 # Gitlab::UsageData#ingress_modsecurity_usage gathers variable data
rspec ./spec/lib/gitlab/usage_data_spec.rb:324 # Gitlab::UsageData#license_usage_data gathers license data
rspec ./spec/lib/gitlab/usage_data_spec.rb:336 # Gitlab::UsageData#count returns the count when counting succeeds
rspec ./spec/lib/gitlab/usage_data_spec.rb:342 # Gitlab::UsageData#count returns the count for count_by when provided
rspec ./spec/lib/gitlab/usage_data_spec.rb:348 # Gitlab::UsageData#count returns the fallback value when counting fails
rspec ./spec/lib/gitlab/usage_data_spec.rb:356 # Gitlab::UsageData#approximate_counts gets approximate counts for selected models
rspec ./spec/lib/gitlab/usage_data_spec.rb:368 # Gitlab::UsageData#approximate_counts returns default values if counts can not be retrieved
rspec ./spec/lib/gitlab/user_access_spec.rb:14 # Gitlab::UserAccess#can_push_to_branch? push to none protected branch returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:20 # Gitlab::UserAccess#can_push_to_branch? push to none protected branch returns true if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:26 # Gitlab::UserAccess#can_push_to_branch? push to none protected branch returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:37 # Gitlab::UserAccess#can_push_to_branch? push to empty project returns true for admins
rspec ./spec/lib/gitlab/user_access_spec.rb:43 # Gitlab::UserAccess#can_push_to_branch? push to empty project returns true if user is maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:49 # Gitlab::UserAccess#can_push_to_branch? push to empty project returns false if user is developer and project is fully protected
rspec ./spec/lib/gitlab/user_access_spec.rb:56 # Gitlab::UserAccess#can_push_to_branch? push to empty project returns false if user is developer and it is not allowed to push new commits but can merge into branch
rspec ./spec/lib/gitlab/user_access_spec.rb:63 # Gitlab::UserAccess#can_push_to_branch? push to empty project returns true if user is developer and project is unprotected
rspec ./spec/lib/gitlab/user_access_spec.rb:70 # Gitlab::UserAccess#can_push_to_branch? push to empty project returns true if user is developer and project grants developers permission
rspec ./spec/lib/gitlab/user_access_spec.rb:82 # Gitlab::UserAccess#can_push_to_branch? push to protected branch returns true for admins
rspec ./spec/lib/gitlab/user_access_spec.rb:88 # Gitlab::UserAccess#can_push_to_branch? push to protected branch returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:94 # Gitlab::UserAccess#can_push_to_branch? push to protected branch returns false if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:100 # Gitlab::UserAccess#can_push_to_branch? push to protected branch returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:106 # Gitlab::UserAccess#can_push_to_branch? push to protected branch returns false if branch does not exist
rspec ./spec/lib/gitlab/user_access_spec.rb:118 # Gitlab::UserAccess#can_push_to_branch? push to protected branch if allowed for developers returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:124 # Gitlab::UserAccess#can_push_to_branch? push to protected branch if allowed for developers returns true if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:130 # Gitlab::UserAccess#can_push_to_branch? push to protected branch if allowed for developers returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:151 # Gitlab::UserAccess#can_push_to_branch? allowing pushes to maintainers of forked projects allows users that have push access to the canonical project to push to the MR branch
rspec ./spec/lib/gitlab/user_access_spec.rb:157 # Gitlab::UserAccess#can_push_to_branch? allowing pushes to maintainers of forked projects does not allow the user to push to other branches
rspec ./spec/lib/gitlab/user_access_spec.rb:163 # Gitlab::UserAccess#can_push_to_branch? allowing pushes to maintainers of forked projects does not allow the user to push if he does not have push access to the canonical project
rspec ./spec/lib/gitlab/user_access_spec.rb:175 # Gitlab::UserAccess#can_push_to_branch? merge to protected branch if allowed for developers returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:181 # Gitlab::UserAccess#can_push_to_branch? merge to protected branch if allowed for developers returns true if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:187 # Gitlab::UserAccess#can_push_to_branch? merge to protected branch if allowed for developers returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:197 # Gitlab::UserAccess#can_create_tag? push to none protected tag returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:203 # Gitlab::UserAccess#can_create_tag? push to none protected tag returns true if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:209 # Gitlab::UserAccess#can_create_tag? push to none protected tag returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:220 # Gitlab::UserAccess#can_create_tag? push to protected tag returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:226 # Gitlab::UserAccess#can_create_tag? push to protected tag returns false if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:232 # Gitlab::UserAccess#can_create_tag? push to protected tag returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:244 # Gitlab::UserAccess#can_create_tag? push to protected tag if allowed for developers returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:250 # Gitlab::UserAccess#can_create_tag? push to protected tag if allowed for developers returns true if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:256 # Gitlab::UserAccess#can_create_tag? push to protected tag if allowed for developers returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:266 # Gitlab::UserAccess#can_delete_branch? delete unprotected branch returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:272 # Gitlab::UserAccess#can_delete_branch? delete unprotected branch returns true if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:278 # Gitlab::UserAccess#can_delete_branch? delete unprotected branch returns false if user is a reporter
rspec ./spec/lib/gitlab/user_access_spec.rb:288 # Gitlab::UserAccess#can_delete_branch? delete protected branch returns true if user is a maintainer
rspec ./spec/lib/gitlab/user_access_spec.rb:294 # Gitlab::UserAccess#can_delete_branch? delete protected branch returns false if user is a developer
rspec ./spec/lib/gitlab/user_access_spec.rb:300 # Gitlab::UserAccess#can_delete_branch? delete protected branch returns false if user is a reporter
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb[1:1:1:1] # Gitlab::Verify::JobArtifacts behaves like Gitlab::Verify::BatchVerifier subclass batching iterates through objects in batches
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb[1:1:1:2] # Gitlab::Verify::JobArtifacts behaves like Gitlab::Verify::BatchVerifier subclass batching allows the starting ID to be specified
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb[1:1:1:3] # Gitlab::Verify::JobArtifacts behaves like Gitlab::Verify::BatchVerifier subclass batching allows the finishing ID to be specified
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb:18 # Gitlab::Verify::JobArtifacts#run_batches passes artifacts with the correct file
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb:22 # Gitlab::Verify::JobArtifacts#run_batches fails artifacts with a missing file
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb:30 # Gitlab::Verify::JobArtifacts#run_batches fails artifacts with a mismatched checksum
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb:46 # Gitlab::Verify::JobArtifacts#run_batches with remote files passes artifacts in object storage that exist
rspec ./spec/lib/gitlab/verify/job_artifacts_spec.rb:52 # Gitlab::Verify::JobArtifacts#run_batches with remote files fails artifacts in object storage that do not exist
rspec ./spec/lib/gitlab/verify/uploads_spec.rb[1:1:1:1] # Gitlab::Verify::Uploads behaves like Gitlab::Verify::BatchVerifier subclass batching iterates through objects in batches
rspec ./spec/lib/gitlab/verify/uploads_spec.rb[1:1:1:2] # Gitlab::Verify::Uploads behaves like Gitlab::Verify::BatchVerifier subclass batching allows the starting ID to be specified
rspec ./spec/lib/gitlab/verify/uploads_spec.rb[1:1:1:3] # Gitlab::Verify::Uploads behaves like Gitlab::Verify::BatchVerifier subclass batching allows the finishing ID to be specified
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:20 # Gitlab::Verify::Uploads#run_batches passes uploads with the correct file
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:24 # Gitlab::Verify::Uploads#run_batches fails uploads with a missing file
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:32 # Gitlab::Verify::Uploads#run_batches fails uploads with a mismatched checksum
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:39 # Gitlab::Verify::Uploads#run_batches fails uploads with a missing precalculated checksum
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:59 # Gitlab::Verify::Uploads#run_batches with remote files returned hash object passes uploads in object storage that exist
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:65 # Gitlab::Verify::Uploads#run_batches with remote files returned hash object fails uploads in object storage that do not exist
rspec ./spec/lib/gitlab/verify/uploads_spec.rb:79 # Gitlab::Verify::Uploads#run_batches with remote files performance avoids N+1 queries
rspec ./spec/lib/gitlab/visibility_level_checker_spec.rb:15 # Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is allowed returns false with nil for visibility level
rspec ./spec/lib/gitlab/visibility_level_checker_spec.rb:28 # Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted returns true and visibility name
rspec ./spec/lib/gitlab/visibility_level_checker_spec.rb:52 # Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted overridden visibility when restricted returns true and visibility name
rspec ./spec/lib/gitlab/visibility_level_checker_spec.rb:63 # Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted overridden visibility when misspelled returns false with nil for visibility level
rspec ./spec/lib/gitlab/visibility_level_checker_spec.rb:74 # Gitlab::VisibilityLevelChecker#level_restricted? when visibility level is restricted overridden visibility when import_data is missing returns false with nil for visibility level
rspec ./spec/lib/gitlab/visibility_level_spec.rb:107 # Gitlab::VisibilityLevel#visibility_level_decreased? when visibility level decreases returns true
rspec ./spec/lib/gitlab/visibility_level_spec.rb:117 # Gitlab::VisibilityLevel#visibility_level_decreased? when visibility level does not decrease returns false
rspec ./spec/lib/gitlab/wiki_file_finder_spec.rb[1:1:1:1] # Gitlab::WikiFileFinder#find behaves like file finder finds by path
rspec ./spec/lib/gitlab/wiki_file_finder_spec.rb[1:1:1:2] # Gitlab::WikiFileFinder#find behaves like file finder finds by content
rspec ./spec/lib/gitlab/workhorse_spec.rb:44 # Gitlab::Workhorse.send_git_archive feature flag disabled sets the header correctly
rspec ./spec/lib/gitlab/workhorse_spec.rb:64 # Gitlab::Workhorse.send_git_archive feature flag disabled when archive caching is disabled tells workhorse not to use the cache
rspec ./spec/lib/gitlab/workhorse_spec.rb:72 # Gitlab::Workhorse.send_git_archive feature flag enabled sets the header correctly
rspec ./spec/lib/gitlab/workhorse_spec.rb:99 # Gitlab::Workhorse.send_git_archive feature flag enabled when archive caching is disabled tells workhorse not to use the cache
rspec ./spec/lib/gitlab/workhorse_spec.rb:111 # Gitlab::Workhorse.send_git_archive when the repository doesn't have an archive file path raises an error
rspec ./spec/lib/gitlab/workhorse_spec.rb:122 # Gitlab::Workhorse.send_git_patch sets the header correctly
rspec ./spec/lib/gitlab/workhorse_spec.rb:170 # Gitlab::Workhorse.channel_websocket without ca_pem 
rspec ./spec/lib/gitlab/workhorse_spec.rb:176 # Gitlab::Workhorse.channel_websocket with ca_pem 
rspec ./spec/lib/gitlab/workhorse_spec.rb:185 # Gitlab::Workhorse.send_git_diff sets the header correctly
rspec ./spec/lib/gitlab/workhorse_spec.rb:209 # Gitlab::Workhorse#verify_api_request! accepts a correct header
rspec ./spec/lib/gitlab/workhorse_spec.rb:214 # Gitlab::Workhorse#verify_api_request! raises an error when the header is not set
rspec ./spec/lib/gitlab/workhorse_spec.rb:218 # Gitlab::Workhorse#verify_api_request! raises an error when the header is not signed
rspec ./spec/lib/gitlab/workhorse_spec.rb:223 # Gitlab::Workhorse#verify_api_request! raises an error when the header is signed with the wrong key
rspec ./spec/lib/gitlab/workhorse_spec.rb:228 # Gitlab::Workhorse#verify_api_request! raises an error when the issuer is incorrect
rspec ./spec/lib/gitlab/workhorse_spec.rb:258 # Gitlab::Workhorse.git_http_ok 
rspec ./spec/lib/gitlab/workhorse_spec.rb:272 # Gitlab::Workhorse.git_http_ok when the repo_type is a wiki 
rspec ./spec/lib/gitlab/workhorse_spec.rb:290 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled includes a Repository param
rspec ./spec/lib/gitlab/workhorse_spec.rb:304 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled when git_upload_pack action is passed includes Gitaly params in the returned value
rspec ./spec/lib/gitlab/workhorse_spec.rb:313 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled when git_upload_pack action is passed show_all_refs enabled 
rspec ./spec/lib/gitlab/workhorse_spec.rb:320 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled when git_receive_pack action is passed 
rspec ./spec/lib/gitlab/workhorse_spec.rb:326 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled when info_refs action is passed 
rspec ./spec/lib/gitlab/workhorse_spec.rb:331 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled when info_refs action is passed show_all_refs enabled 
rspec ./spec/lib/gitlab/workhorse_spec.rb:338 # Gitlab::Workhorse.git_http_ok when Gitaly is enabled when action passed is not supported by Gitaly 
rspec ./spec/lib/gitlab/workhorse_spec.rb:343 # Gitlab::Workhorse.git_http_ok when receive_max_input_size has been updated returns custom git config
rspec ./spec/lib/gitlab/workhorse_spec.rb:351 # Gitlab::Workhorse.git_http_ok when receive_max_input_size is empty returns an empty git config
rspec ./spec/lib/gitlab/workhorse_spec.rb[1:7:1:1:1] # Gitlab::Workhorse.set_key_and_notify when we set a new key behaves like set and notify set and return the same value
rspec ./spec/lib/gitlab/workhorse_spec.rb[1:7:1:1:2] # Gitlab::Workhorse.set_key_and_notify when we set a new key behaves like set and notify set and notify
rspec ./spec/lib/gitlab/workhorse_spec.rb[1:7:2:1:1:1] # Gitlab::Workhorse.set_key_and_notify when we set an existing key and overwrite behaves like set and notify set and return the same value
rspec ./spec/lib/gitlab/workhorse_spec.rb[1:7:2:1:1:2] # Gitlab::Workhorse.set_key_and_notify when we set an existing key and overwrite behaves like set and notify set and notify
rspec ./spec/lib/gitlab/workhorse_spec.rb:401 # Gitlab::Workhorse.set_key_and_notify when we set an existing key and do not overwrite try to set but return the previous value
rspec ./spec/lib/gitlab/workhorse_spec.rb:405 # Gitlab::Workhorse.set_key_and_notify when we set an existing key and do not overwrite does not notify
rspec ./spec/lib/gitlab/workhorse_spec.rb:421 # Gitlab::Workhorse.send_git_blob sets the header correctly
rspec ./spec/lib/gitlab/workhorse_spec.rb:446 # Gitlab::Workhorse.send_url sets the header correctly
rspec ./spec/lib/gitlab/workhorse_spec.rb:463 # Gitlab::Workhorse.send_git_snapshot sets the header correctly
rspec ./spec/lib/grafana/client_spec.rb[1:1:1:1] # Grafana::Client#get_dashboard behaves like calls grafana api calls grafana api
rspec ./spec/lib/grafana/client_spec.rb[1:1:2:1] # Grafana::Client#get_dashboard behaves like no redirects does not follow redirects
rspec ./spec/lib/grafana/client_spec.rb[1:1:3:1:1] # Grafana::Client#get_dashboard behaves like handles exceptions HTTParty::Error should raise Grafana::Client::Error with "Error when connecting to Grafana"
rspec ./spec/lib/grafana/client_spec.rb[1:1:3:2:1] # Grafana::Client#get_dashboard behaves like handles exceptions Net::OpenTimeout should raise Grafana::Client::Error with "Connection to Grafana timed out"
rspec ./spec/lib/grafana/client_spec.rb[1:1:3:3:1] # Grafana::Client#get_dashboard behaves like handles exceptions SocketError should raise Grafana::Client::Error with "Received SocketError when trying to connect to Grafana"
rspec ./spec/lib/grafana/client_spec.rb[1:1:3:4:1] # Grafana::Client#get_dashboard behaves like handles exceptions OpenSSL::SSL::SSLError should raise Grafana::Client::Error with "Grafana returned invalid SSL data"
rspec ./spec/lib/grafana/client_spec.rb[1:1:3:5:1] # Grafana::Client#get_dashboard behaves like handles exceptions Errno::ECONNREFUSED should raise Grafana::Client::Error with "Connection refused"
rspec ./spec/lib/grafana/client_spec.rb[1:1:3:6:1] # Grafana::Client#get_dashboard behaves like handles exceptions StandardError should raise Grafana::Client::Error with "Grafana request failed due to StandardError"
rspec ./spec/lib/grafana/client_spec.rb[1:2:1:1] # Grafana::Client#get_datasource behaves like calls grafana api calls grafana api
rspec ./spec/lib/grafana/client_spec.rb[1:2:2:1] # Grafana::Client#get_datasource behaves like no redirects does not follow redirects
rspec ./spec/lib/grafana/client_spec.rb[1:2:3:1:1] # Grafana::Client#get_datasource behaves like handles exceptions HTTParty::Error should raise Grafana::Client::Error with "Error when connecting to Grafana"
rspec ./spec/lib/grafana/client_spec.rb[1:2:3:2:1] # Grafana::Client#get_datasource behaves like handles exceptions Net::OpenTimeout should raise Grafana::Client::Error with "Connection to Grafana timed out"
rspec ./spec/lib/grafana/client_spec.rb[1:2:3:3:1] # Grafana::Client#get_datasource behaves like handles exceptions SocketError should raise Grafana::Client::Error with "Received SocketError when trying to connect to Grafana"
rspec ./spec/lib/grafana/client_spec.rb[1:2:3:4:1] # Grafana::Client#get_datasource behaves like handles exceptions OpenSSL::SSL::SSLError should raise Grafana::Client::Error with "Grafana returned invalid SSL data"
rspec ./spec/lib/grafana/client_spec.rb[1:2:3:5:1] # Grafana::Client#get_datasource behaves like handles exceptions Errno::ECONNREFUSED should raise Grafana::Client::Error with "Connection refused"
rspec ./spec/lib/grafana/client_spec.rb[1:2:3:6:1] # Grafana::Client#get_datasource behaves like handles exceptions StandardError should raise Grafana::Client::Error with "Grafana request failed due to StandardError"
rspec ./spec/lib/grafana/client_spec.rb[1:3:1:1] # Grafana::Client#proxy_datasource behaves like calls grafana api calls grafana api
rspec ./spec/lib/grafana/client_spec.rb[1:3:2:1] # Grafana::Client#proxy_datasource behaves like no redirects does not follow redirects
rspec ./spec/lib/grafana/client_spec.rb[1:3:3:1:1] # Grafana::Client#proxy_datasource behaves like handles exceptions HTTParty::Error should raise Grafana::Client::Error with "Error when connecting to Grafana"
rspec ./spec/lib/grafana/client_spec.rb[1:3:3:2:1] # Grafana::Client#proxy_datasource behaves like handles exceptions Net::OpenTimeout should raise Grafana::Client::Error with "Connection to Grafana timed out"
rspec ./spec/lib/grafana/client_spec.rb[1:3:3:3:1] # Grafana::Client#proxy_datasource behaves like handles exceptions SocketError should raise Grafana::Client::Error with "Received SocketError when trying to connect to Grafana"
rspec ./spec/lib/grafana/client_spec.rb[1:3:3:4:1] # Grafana::Client#proxy_datasource behaves like handles exceptions OpenSSL::SSL::SSLError should raise Grafana::Client::Error with "Grafana returned invalid SSL data"
rspec ./spec/lib/grafana/client_spec.rb[1:3:3:5:1] # Grafana::Client#proxy_datasource behaves like handles exceptions Errno::ECONNREFUSED should raise Grafana::Client::Error with "Connection refused"
rspec ./spec/lib/grafana/client_spec.rb[1:3:3:6:1] # Grafana::Client#proxy_datasource behaves like handles exceptions StandardError should raise Grafana::Client::Error with "Grafana request failed due to StandardError"
rspec ./spec/lib/marginalia_spec.rb:130 # Marginalia spec for Sidekiq worker jobs when the feature is enabled generates a query that includes the component and value
rspec ./spec/lib/mattermost/command_spec.rb:38 # Mattermost::Command#create for valid trigger word returns a token
rspec ./spec/lib/mattermost/command_spec.rb:59 # Mattermost::Command#create for error message raises an error with message
rspec ./spec/lib/mattermost/team_spec.rb:46 # Mattermost::Team#all for valid request returns teams
rspec ./spec/lib/mattermost/team_spec.rb:67 # Mattermost::Team#all for error message raises an error with message
rspec ./spec/lib/mattermost/team_spec.rb:104 # Mattermost::Team#create for a new team returns the new team
rspec ./spec/lib/mattermost/team_spec.rb:125 # Mattermost::Team#create for existing team raises an error with message
rspec ./spec/lib/mattermost/team_spec.rb:150 # Mattermost::Team#delete for an existing team returns team status
rspec ./spec/lib/mattermost/team_spec.rb:171 # Mattermost::Team#delete for an unknown team raises an error with message
rspec ./spec/lib/microsoft_teams/notifier_spec.rb:53 # MicrosoftTeams::Notifier#ping expects to receive successful answer
rspec ./spec/lib/peek/views/rugged_spec.rb:18 # Peek::Views::Rugged returns aggregated results
rspec ./spec/lib/quality/seeders/issues_spec.rb:11 # Quality::Seeders::Issues#seed seeds issues
rspec ./spec/lib/sentry/client/issue_spec.rb:27 # Sentry::Client::Issue#issue_details escapes issue ID
rspec ./spec/lib/sentry/client/issue_spec.rb:25 # Sentry::Client::Issue#issue_details behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client/issue_spec.rb:66 # Sentry::Client::Issue#issue_details error object created from sentry response has a correct external URL
rspec ./spec/lib/sentry/client/issue_spec.rb:70 # Sentry::Client::Issue#issue_details error object created from sentry response issue has a correct external base url
rspec ./spec/lib/sentry/client/issue_spec.rb:74 # Sentry::Client::Issue#issue_details error object created from sentry response has a correct GitLab issue url
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:1:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :id, sentry_response: :id 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:2:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :first_seen, sentry_response: :firstSeen 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:3:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :last_seen, sentry_response: :lastSeen 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:4:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :title, sentry_response: :title 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:5:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :type, sentry_response: :type 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:6:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :user_count, sentry_response: :userCount 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:7:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :count, sentry_response: :count 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:8:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :message, sentry_response: [:metadata, :value] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:9:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :culprit, sentry_response: :culprit 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:10:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :short_id, sentry_response: :shortId 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:11:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :status, sentry_response: :status 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:12:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :frequency, sentry_response: [:stats, "24h"] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:13:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :project_id, sentry_response: [:project, :id] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:14:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :project_name, sentry_response: [:project, :name] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:15:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :project_slug, sentry_response: [:project, :slug] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:16:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :first_release_last_commit, sentry_response: [:firstRelease, :lastCommit] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:17:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :last_release_last_commit, sentry_response: [:lastRelease, :lastCommit] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:18:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :first_release_short_version, sentry_response: [:firstRelease, :shortVersion] 
rspec ./spec/lib/sentry/client/issue_spec.rb[1:1:3:19:1] # Sentry::Client::Issue#issue_details error object created from sentry response error_object: :last_release_short_version, sentry_response: [:lastRelease, :shortVersion] 
rspec ./spec/lib/sentry/client/projects_spec.rb:34 # Sentry::Client::Projects#projects behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:2:1] # Sentry::Client::Projects#projects behaves like has correct return type returns objects of type Gitlab::ErrorTracking::Project
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:3:1] # Sentry::Client::Projects#projects behaves like has correct length 
rspec ./spec/lib/sentry/client/projects_spec.rb:46 # Sentry::Client::Projects#projects essential keys missing in API response raises exception
rspec ./spec/lib/sentry/client/projects_spec.rb:60 # Sentry::Client::Projects#projects optional keys missing in sentry response behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:5:2:1] # Sentry::Client::Projects#projects optional keys missing in sentry response behaves like has correct return type returns objects of type Gitlab::ErrorTracking::Project
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:5:3:1] # Sentry::Client::Projects#projects optional keys missing in sentry response behaves like has correct length 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:1:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :id, sentry_response: :id 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:2:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :name, sentry_response: :name 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:3:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :status, sentry_response: :status 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:4:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :slug, sentry_response: :slug 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:5:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :organization_name, sentry_response: [:organization, :name] 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:6:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :organization_id, sentry_response: [:organization, :id] 
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:6:7:1] # Sentry::Client::Projects#projects error object created from sentry response sentry_project_object: :organization_slug, sentry_response: [:organization, :slug] 
rspec ./spec/lib/sentry/client/projects_spec.rb:91 # Sentry::Client::Projects#projects redirects behaves like no Sentry redirects does not follow redirects
rspec ./spec/lib/sentry/client/projects_spec.rb:101 # Sentry::Client::Projects#projects extra slashes in URL removes extra slashes in api url
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:9:1:1:1] # Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions HTTParty::Error should raise Sentry::Client::Error with "Error when connecting to Sentry"
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:9:1:2:1] # Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions Net::OpenTimeout should raise Sentry::Client::Error with "Connection to Sentry timed out"
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:9:1:3:1] # Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions SocketError should raise Sentry::Client::Error with "Received SocketError when trying to connect to Sentry"
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:9:1:4:1] # Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions OpenSSL::SSL::SSLError should raise Sentry::Client::Error with "Sentry returned invalid SSL data"
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:9:1:5:1] # Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions Errno::ECONNREFUSED should raise Sentry::Client::Error with "Connection refused"
rspec ./spec/lib/sentry/client/projects_spec.rb[1:1:9:1:6:1] # Sentry::Client::Projects#projects when exception is raised behaves like maps Sentry exceptions StandardError should raise Sentry::Client::Error with "Sentry request failed due to StandardError"
rspec ./spec/lib/sentry/client_spec.rb:48 # Sentry::Client#list_issues behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client_spec.rb[1:1:2:1] # Sentry::Client#list_issues behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
rspec ./spec/lib/sentry/client_spec.rb[1:1:3:1] # Sentry::Client#list_issues behaves like issues has correct length 
rspec ./spec/lib/sentry/client_spec.rb:69 # Sentry::Client#list_issues when response has a pagination info parses the pagination
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:1:1] # Sentry::Client#list_issues error object created from sentry response error_object: :id, sentry_response: :id 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:2:1] # Sentry::Client#list_issues error object created from sentry response error_object: :first_seen, sentry_response: :firstSeen 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:3:1] # Sentry::Client#list_issues error object created from sentry response error_object: :last_seen, sentry_response: :lastSeen 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:4:1] # Sentry::Client#list_issues error object created from sentry response error_object: :title, sentry_response: :title 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:5:1] # Sentry::Client#list_issues error object created from sentry response error_object: :type, sentry_response: :type 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:6:1] # Sentry::Client#list_issues error object created from sentry response error_object: :user_count, sentry_response: :userCount 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:7:1] # Sentry::Client#list_issues error object created from sentry response error_object: :count, sentry_response: :count 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:8:1] # Sentry::Client#list_issues error object created from sentry response error_object: :message, sentry_response: [:metadata, :value] 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:9:1] # Sentry::Client#list_issues error object created from sentry response error_object: :culprit, sentry_response: :culprit 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:10:1] # Sentry::Client#list_issues error object created from sentry response error_object: :short_id, sentry_response: :shortId 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:11:1] # Sentry::Client#list_issues error object created from sentry response error_object: :status, sentry_response: :status 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:12:1] # Sentry::Client#list_issues error object created from sentry response error_object: :frequency, sentry_response: [:stats, "24h"] 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:13:1] # Sentry::Client#list_issues error object created from sentry response error_object: :project_id, sentry_response: [:project, :id] 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:14:1] # Sentry::Client#list_issues error object created from sentry response error_object: :project_name, sentry_response: [:project, :name] 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:15:1] # Sentry::Client#list_issues error object created from sentry response error_object: :project_slug, sentry_response: [:project, :slug] 
rspec ./spec/lib/sentry/client_spec.rb[1:1:5:16:1:1] # Sentry::Client#list_issues error object created from sentry response behaves like has correct external_url external_url is constructed correctly
rspec ./spec/lib/sentry/client_spec.rb:108 # Sentry::Client#list_issues redirects behaves like no Sentry redirects does not follow redirects
rspec ./spec/lib/sentry/client_spec.rb:120 # Sentry::Client#list_issues extra slashes in URL removes extra slashes in api url
rspec ./spec/lib/sentry/client_spec.rb:142 # Sentry::Client#list_issues requests with sort parameter in sentry api calls the sentry api with sort params
rspec ./spec/lib/sentry/client_spec.rb:170 # Sentry::Client#list_issues Older sentry versions where keys are not present behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client_spec.rb[1:1:10:2:1] # Sentry::Client#list_issues Older sentry versions where keys are not present behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
rspec ./spec/lib/sentry/client_spec.rb[1:1:10:3:1] # Sentry::Client#list_issues Older sentry versions where keys are not present behaves like issues has correct length 
rspec ./spec/lib/sentry/client_spec.rb[1:1:10:4:1:1] # Sentry::Client#list_issues Older sentry versions where keys are not present behaves like has correct external_url external_url is constructed correctly
rspec ./spec/lib/sentry/client_spec.rb:185 # Sentry::Client#list_issues essential keys missing in API response raises exception
rspec ./spec/lib/sentry/client_spec.rb:191 # Sentry::Client#list_issues sentry api response too large raises exception
rspec ./spec/lib/sentry/client_spec.rb[1:1:13:1:1] # Sentry::Client#list_issues behaves like maps Sentry exceptions HTTParty::Error should raise Sentry::Client::Error with "Error when connecting to Sentry"
rspec ./spec/lib/sentry/client_spec.rb[1:1:13:2:1] # Sentry::Client#list_issues behaves like maps Sentry exceptions Net::OpenTimeout should raise Sentry::Client::Error with "Connection to Sentry timed out"
rspec ./spec/lib/sentry/client_spec.rb[1:1:13:3:1] # Sentry::Client#list_issues behaves like maps Sentry exceptions SocketError should raise Sentry::Client::Error with "Received SocketError when trying to connect to Sentry"
rspec ./spec/lib/sentry/client_spec.rb[1:1:13:4:1] # Sentry::Client#list_issues behaves like maps Sentry exceptions OpenSSL::SSL::SSLError should raise Sentry::Client::Error with "Sentry returned invalid SSL data"
rspec ./spec/lib/sentry/client_spec.rb[1:1:13:5:1] # Sentry::Client#list_issues behaves like maps Sentry exceptions Errno::ECONNREFUSED should raise Sentry::Client::Error with "Connection refused"
rspec ./spec/lib/sentry/client_spec.rb[1:1:13:6:1] # Sentry::Client#list_issues behaves like maps Sentry exceptions StandardError should raise Sentry::Client::Error with "Sentry request failed due to StandardError"
rspec ./spec/lib/sentry/client_spec.rb:205 # Sentry::Client#list_issues when search term is present behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client_spec.rb[1:1:14:2:1] # Sentry::Client#list_issues when search term is present behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
rspec ./spec/lib/sentry/client_spec.rb[1:1:14:3:1] # Sentry::Client#list_issues when search term is present behaves like issues has correct length 
rspec ./spec/lib/sentry/client_spec.rb:215 # Sentry::Client#list_issues when cursor is present behaves like calls sentry api calls sentry api
rspec ./spec/lib/sentry/client_spec.rb[1:1:15:2:1] # Sentry::Client#list_issues when cursor is present behaves like issues has correct return type returns objects of type Gitlab::ErrorTracking::Error
rspec ./spec/lib/sentry/client_spec.rb[1:1:15:3:1] # Sentry::Client#list_issues when cursor is present behaves like issues has correct length 
rspec ./spec/lib/system_check/orphans/repository_check_spec.rb:34 # SystemCheck::Orphans::RepositoryCheck#multi_check few orphans with existing namespace prints list of orphaned namespaces
rspec ./spec/lib/system_check/orphans/repository_check_spec.rb:48 # SystemCheck::Orphans::RepositoryCheck#multi_check few orphans with existing namespace and parents with same name as orphans prints list of orphaned namespaces ignoring parents with same namespace as orphans

